moment isoweekday not working trying to print out the weekday like `tuesday` `moment isoweekday but all getting is an object doing `day moment new date parseint ts weekday then `moment isoweekday day but it outputs an object ve tried `moment day same result and `moment isoweekday day format outputs `2016 02 12t12 09 06 01 00` use browserify and used `moment locale cs as well after require wat does work however is doing `moment new date parseint ts format dddd curious why the other way doesn work why would need isoweekday` when simply formatting works but with format don get things like `last friday` or `next tuesday` and need that with day` or weekday` but doing like the example in the docs `moment weekday next sunday` outputs an `object` not `string` and for example doing outputs `numbers` and not the promised `string` of the day ie last tuesday etc must be missing something from the docs or it is weird `browserify` bug >>>troubleshooting
diff between hours in the same timezone have variable called now that is `o isamomentobject true isutc false pf object locale thu feb 11 2016 18 22 36 gmt 0200 brst an another called then `o isamomentobject true thu feb 11 2016 18 20 29 gmt 0200 brst isutc false pf object locale am trying to diff this moments why 21 shouldn it be only 00 02 07 what is my mistake >>>troubleshooting
optimization of isarray and unit tests optimization of isarray use instanceof at first place and unit tests>>>performance
allow moment calendar to support more options often want to display date with more detail as it gets progressively older >>>enhancement up-for-grabs
optimization in isarray hi as you already do in isdate and isfunction to speedup isarray method use instanceof at first place made small jsperf test http jsperf com isarray basically even if for some inputs the first condition is false overall improvement is better with instanceof >>>performance
moment format wo doesn work correctly update the latest version 11 andformat wo doesn work correctly in local zh think this code here has some thing wrong see the console panel please checkout thanks screen shot 2016 02 05 at 10 31 01 am https cloud githubusercontent com assets 7732663 12836622 a437be6c cbf5 11e5 938e 62a3fe9f3e07 png >>>troubleshooting
fix usage suggestions for min and max the deprecation warnings for instance `min` and `max` give incorrect substitutions per the current documentation `moment min` and `moment max should be replaced by `moment max` and `moment min` respectively we learned this the hard way https jsfiddle net s5ex3qh7 open the console to see the deprecation warning >>>bug
parse input with time zone offset in separate field `moment parsezone` is good when the input string contains the time zone offset however sometimes the offset is in separate field as either string or in terms of whole minutes this can lead to code like it would be better if the offset could be passed as parameter to `parsezone` see moment momentjs com 97>>>enhancement up-for-grabs
getting nan when asking for the week of the year hi getting nan when doing the following let year 2014 let lastweek moment year 12 31 week lastweek nan but this works instead let year 2014 let lastweek moment year year endof year week lastweek to solve the last week of the year being just do the following but this is actually out of the scope of the bug report lastweek lastweek moment year year endof year add days week lastweek lastweek 51 note that in the gmt zone and for me the week starts on monday cheers>>>troubleshooting
added options param to isbetween re https github com moment moment issues 2164 did not include exhaustive tests for all the units inclusive >>>enhancement
isdstshifted fails after hours are set noticed while playing with the parser that the isdstshifted function will not work correctly if one of the set functions is called on the date the following unit tests fail on computer set to us central time where dst shift did happen on that day of that year at that time realize they don work in the general case this is because the isdstshifted function simply re parses the original input and format to make it determination of whether dst is shifted this function also doesn have test coverage this may be because there isn great way to mock clock behavior in this situation can get to this after finish the set time request just wanted to document it also let me know if am misinterpreting the intent of the code >>>bug
invalid date is not translated why isn invalid date translated when everything else regarding the date time is translated >>>enhancement
use full string match to speed up aspnet regex match fixes https github com moment moment issues 2936 duration match was almost complete enough to match full strings just needed to allow for the extra digits in microseconds getting to put in resolves the speed problem reported 2936 >>>high_priority pending_next_release
adding time set functionality adding functionality for parse and set of time >>>new_feature
regular expression denial of service via the node security project https nodesecurity io advisories 55 overview moment is vulnerable to regular expression denial of service when user input is passed unchecked into moment duration blocking the event loop for period of time the regular expression denial of service redos is denial of service attack that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly exponentially related to input size an attacker can then cause program using regular expression to enter these extreme situations and then hang for very long time it not huge amplification it takes about 25k characters to get seconds however that well under most servers max request size so it certainly exploitable the regular expression in question moment 10 moment js `1679 var aspnetregex proof of concept var moment require moment var genstr function len chr var result for len result result chr return result for 20000 10000000 10000 console log count var str genstr console log length str length var start process hrtime moment duration str var end process hrtime start console log end results node moment js count 20000 length 20002 618931029 count 30001 length 30003 401413894 count 40002 length 40004 437075303 count 50003 length 50005 824664804 count 60004 length 60006 651335262 >>>bug help_wanted up-for-grabs
possible to get week number relative to month week returns the week number according to year what like to get is week number relative to month is it possible >>>new_feature up-for-grabs
list loaded locales fixes 843 this adds the method `moment locales to get an array of the locales that have been loaded ie bundled with moment js or manually required in node it does not list or `require` available but unloaded locales in node think that should be separate feature if needed at all >>>new_feature pending_next_release
readme md edit added more non technical description of what moment js does hopefully it ll help some of the newer developers out there get better understanding of what moment js can do for them in quick paragraph >>>documentation
moment in and require node xlsx with the use of problem use require node xlsx to read the xlsx file the file contains the date and now the problem is if xlsx document as whole there is only date column then parsed using moment no problem if the document inside more than two columns then all dates are resolved to 1970 01 01 format would like to ask is what causes for example 2015 12 2015 12 moment param format yyyy mm dd parameter param for the acquisition of the cell date if the entire document is only one column then no problem if used again moment param format yyyy mm dd on the emergence of 1970 01 01 as>>>troubleshooting
duration days value inconsistent depending on input years days when duration is provided as years the days of it is zero however when providing the same value in days >>>bug
locale aware moment weekdays methods how do get list of weekdays in proper locale aware order >>>enhancement up-for-grabs
definelocale doesn inherit form the main locale this code doesn work de short will use weekdays from en moment definelocale de months januar februar mrz april mai juni juli august september oktober november dezember split monthsshort jan febr mrz apr mai jun jul aug sept okt nov dez split weekdays sonntag montag dienstag mittwoch donnerstag freitag samstag split weekdaysshort so mo di mi do fr sa split weekdaysmin so mo di mi do fr sa split longdateformat lt hh mm uhr dd mm yyyy ll mmmm yyyy lll mmmm yyyy lt llll dddd mmmm yyyy lt moment definelocale de short calendar lastday gestern lt sameday heute lt nextday morgen lt lastweek letzten dd lt nextweek nchsten dd lt sameelse ll longdateformat dd mm lt hh mm dd mm yyyy ll mmmm yyyy lll mmmm yyyy lt llll dddd mmmm yyyy lt am doing something wrong >>>troubleshooting
add ukrainian locale ve just got ukrainian locale translated by one of my friends more or less it should be correct and working the locale source was based on the source of polish locale `pl js` pr is not fully ready yet though we would need some unit tests like the one for polish locale https github com moment moment blob develop src test locale pl js for example not sure if the whole `calendar` `relativetime` thing is fully correct unfortunately not an ukrainian speaker to do it ll just leave the pr here maybe someone would be willing to finish it >>>language
turkish locale fail on weekdaysparse https jsfiddle net xt4d0rlh sunday and monday as friday and saturday starts as the same in turkish locale what want is to build an array where the first element depends on the first day of week of the locale and the tail of the array is the other days in the right order >>>language troubleshooting
locale change event ve been looking for an event to subscribe to for when the locale changes but there doesn seem to be any the use case is that developing custom reusable component that displays calendar would like to automatically refresh the calendar when some outside code changes the locale is there any other way other than monkey patching `moment locale to tap into this >>>enhancement
non strict parsing of 1970 returns date of dec 31 1969 if format is included this is not what expected returns wed dec 31 1969 18 00 00 gmt 0600 cst but returns thu jan 01 1970 00 00 00 gmt 0600 cst >>>forgiving_parsing
locale punjabi gurmukhi india format conversion locale punjabi gurmukhi india format conversion >>>language
update to icelandic locale format specifier should use dot instead of forward slash 14 02 2010 instead of 14 02 2010 hinrik could you confirm >>>language
russian locale fixes punctuation and capital letters 2882 2569 http lh 2xlibre net locale ru ru pr 80fa7c5621797591e81b49c48621f53e858737a5>>>language
tests failed diff diff across dst 2396 17 diff diff across dst 2396 19 client info diff diff across dst 2396 17 month diff across dst lower bound diff diff across dst 2396 19 year diff across dst lower bound >>>unit_test_failed
update ko js relativetime correct relativetime strings based on korean grammar checker http speller cs pusan ac kr pnuspellerisapi 201504 kyungw00k please check this >>>language
since 11 week numbers are not calculated correctly noticed that since updated to 11 week numbers more precisely using format are not calculated correctly on my fullcalendar using spanish locale for example the week number for date 28 12 2015 should be 53 which is right in version 10 starting 11 moment says it 44 >>>troubleshooting
update th js in thai people use 24 hour time format not `h hours minutes seconds` >>>language
tests failed diff diff across dst 2396 17 diff diff across dst 2396 19 duration from moments pure year diff 2444 duration from moments pure year diff 2444 start and end of units start of quarter 2663 start and end of units end of quarter 2664 start and end of units end of quarter 2664 start and end of units end of quarter 2664 start and end of units end of quarter 2664 client info diff diff across dst 2396 17 month diff across dst lower bound diff diff across dst 2396 19 year diff across dst lower bound duration from moments pure year diff 2444 year moment difference duration from moments pure year diff 2444 negative year moment difference start and end of units start of quarter 2663 strip out the hours start and end of units end of quarter 2664 keep the quarter start and end of units end of quarter 2664 set the month start and end of units end of quarter 2664 set the day start and end of units end of quarter 2664 set the hours >>>unit_test_failed
parse string arguments for month correctly closes 2884 lets `moment month work the same as `moment month `>>>enhancement pending_next_release
lt format is not correct for many locales why are the time locales all the same other than en locale which is correct for example the lt format in french should be 12h00 and not 12 00 which is what is outputted it seems none of the locales have the proper time formats dates are all correctly translated why is this thanks>>>bug language up-for-grabs
enable all non mutation functionality after object freeze splitting out kruncher request https github com moment moment issues 1754 issuecomment 168643322 from the discussion on 1754 have been using object freeze on moment instances and this has generally achieved what have needed except just discovered that the following fails js let now object freeze moment if now issameorbefore anothertime throws exception can this be fixed so that object freeze can be used when desired >>>bug
can change locale with nativescript on android using the moment http momentjs com plugin to handle dates in my app and it works well apart from one thing can get any other locale than english en to work on android on ios can change to whatever locale want have installed moment in my project javascript var moment require moment moment locale fr console log moment locale prints fr on ios but en on android var moment locale da console log locale prints da on ios but en on android >>>troubleshooting
update is js icelandic locale format should use dot separator >>>language
fix tojson casting of invalid moment this is an attempt at solving issue 2886 invalid moments were casting as null the string now they are properly casting as null the literal >>>pending_next_release
tojson of invalid moment returns null we introduced breaking change in 11 with 2624 with regard to invalid moments while we should have been clearer about the breaking change apologies https twitter com wraithgar status 684085312331452416 to wraithgar we also made mistake in the implementation and unfortunately it will need to change again src lib moment to type js l31 l34 https github com moment moment blob 11 src lib moment to type js l31 l34 this is returning the string null not an actual json `null` literal you can see the difference when used within an object therefore the `tojson` function should return `null` instead of null for invalid moments >>>bug
setting month as string number fails without notice hey consider this code in my opinion it worth to somehow handle string number value for month either parse it 11 basis or throw parsing error otherwise it hidden pitfall for applications using moment >>>enhancement up-for-grabs
some kind of bug after wrestling with moment for day believe found bug which reduced to the following simple example moment 15 valueof moment utc 15 valueof moment 15 month 11 valueof moment utc 15 month 11 valueof and moment 11 15 valueof moment utc 11 15 valueof but moment 11 15 month 11 valueof moment utc 11 15 month 11 valueof how can the valueof two moments be equal but calling month 11 on them makes them diverge >>>troubleshooting
russian months and days of week capitalization months and days of week in russian language should not be capitalized examples january 1st next monday fri january 1st reference rules of russian language http new gramota ru spravka rules 139 prop it was suddenly capitalized in c74a101d549b8b443b72d9a470839eaffea852c2>>>language
feature request easier to read ie longer formatting tokens the sugar library is not great library it does have one great feature though its date formatter which allows you to do the following var somedate new date somedate format weekday month yyyy now compare that to equivalent moment code var somedate moment new date somedate format dddd mmmm yyyy obviously moment syntax is more concise and for people who do lot of date formatting sure it extremely intuitive much like regular expressions however imagine that most developers don format dates frequently which means they have to write date formatting strings while simultaneously reading the moment documentation page if they or co worker ever has to revisit that code they have to return to the documentation page to translate each token one by one now would never suggest getting rid of those tokens just as wouldn want to get rid of regular expressions but at the same time whenever possible do try to avoid regular expressions in favor of more readable alternatives eg `indexof` `contains` custom functions etc imagine if moment provided alternative human friendly formatting tokens and one could write var somedate moment new date somedate easyformat weekday dayofmonthzeropadded monthunpadded fullyear even if you ve never heard of moment and were somewhere remote without internet access you could still understand that code instantly and perhaps even be able modify it realize this may seem like pointless request to someone who uses the moment tokens on daily basis just as it would seem pointless to ask regular expression expert to write `contains` method for you why bother just use regex but just as `contains` methods are lot easier to read understand and maintain than regular expressions an easy set of formatting tokens in moment would be very valuable to many >>>new_feature
use explicit valueof calls instead of coercion this seems to result in speedups by around 10 for comparing moments http jsperf com explicit valueof for momentjs>>>performance
locales es just capitalized month and day names because they re proper names most other locales are capitalized >>>language
incorrect strict parsing with japenese parenthesis when datestring and formatstring contain the the character in `moment datestring formatstring localestring true the parsing fails checked with isvalid here is the japanese fullwidth parenthesis character marukakko ff09 the whitespace is part of the character itself not another whitespace `moment 2016518 yyyymddddd ja true isvalid returns false` this code returns false in moment version 11 10 and 1>>>bug
use typeof checks for undefined for global variables fixes 2862 broken in 2773 >>>high_priority
module is not defined on 11 error on firefox module is not defined https cloud githubusercontent com assets 6071313 12101050 9f8018d8 b36d 11e5 80e2 5630937114d2 jpg >>>bug high_priority
incorrect moment validation on 11 bug has appeared in `2 11 0` regarding moment validation in this case perfectly valid date is returned as invalid this code returned `true` in 10 ve only been able to replicate this issue using `mmm` as part of the date string so possibly the bug is there>>>bug high_priority
timezone is wrong in version and subtract month function throws error in version 11 hi we are using the momentjs version we are getting wrong timezone when the date time is converted to moment for example var momentnow moment nownew format mm dd yyyy mm zz 01 04 2016 42 pm 0530 is wrongly shows as 01 04 2016 42 pm 0550 tried to update the latest version of moment min js bit am getting the below error when we try to subtract months it gives the below error moment momentnow subtract months 0x800a1391 javascript runtime error console is undefined attached the screenshot of the error please give me solution error https cloud githubusercontent com assets 16287275 12094191 43c79c36 b32d 11e5 9552 c638a0bb356e png >>>troubleshooting
issue when parsing single format hi moment 12 2015 year is giving 2016 incorrect while moment 12 2015 yyyy year is giving 2015 correct is single character year unsupported or is it bug we are using locale strings from angular and noticed the bug because of the year change thanks >>>bug
fix date mocking regression introduced in 11 the commit https github com moment moment commit f54a32f4c62c12a710335211a73cb002a7249646 and the follow on refactoring https github com moment moment commit b1d686ed481e2211cb81a1c60eca850fcea93f21 broke the ability for date mocking libraries mockdate https www npmjs com package mockdate sinonjs etc to mock out the date object believe we should restore this functionality running the code above will yield the following in `moment 10 6` and `moment 11 0` respectively fixes 2857 fixes 2855>>>bug high_priority
broke mockdate something in the 11 release broke mockdate https www npmjs com package mockdate support believe it was the commit https github com moment moment commit f54a32f4c62c12a710335211a73cb002a7249646 and the follow on refactoring https github com moment moment commit b1d686ed481e2211cb81a1c60eca850fcea93f21 am not certain if this is something that you care to support or if you view this as the responsibility of mockdate to fix however since mockdate simply patches the global date object it would seem breaking this generic mocking lib is bad thing let me know what you think this used to work but now breaks >>>bug
canadian english longdateformat canadian english mostly puts the day after the month like january 2016 usage examples parliament http www lop parl gc ca visitors index html government http www cic gc ca english citizenship become how asp citizenship application forms were updated on june 11 2015 toronto star http torontostar newspaperdirect com epaper viewer aspx original author jonbca >>>language pending_next_release
allow user to get set the rounding method used when calculating relative time there are many use cases where relative time humanization should use different rounding methods this pr is on the same wavelength as https github com moment moment pull 1794>>>enhancement
tests failed diff diff across dst 2140 17 diff diff across dst 2140 19 week year week numbers 2012 2013 2446 client info diff diff across dst 2140 17 month diff across dst lower bound diff diff across dst 2140 19 year diff across dst lower bound week year week numbers 2012 2013 2446 >>>unit_test_failed
test failed week year week numbers 2012 2013 2446 test failed week year week numbers 2012 2013 2446 client info week year week numbers 2012 2013 2446 >>>unit_test_failed
fixing spelling in ka locale for accusative >>>language needs_tests
parsing bug for mmm moment jan 2016 mmm true isvalid true moment jan 2016 mmm true year 2015 moment version 10 >>>bug high_priority
fix th locales months short to correctly in thai language ref http www xn 12c0ecxsex2q com e0 b8 95 e0 b8 b1 e0 b8 a7 e0 b8 a2 e0 b9 88 e0 b8 ad e0 b9 80 e0 b8 94 e0 b8 b7 e0 b8 ad e0 b8 99 >>>language
2015 w53 invalid date http jsfiddle net wlc3 ht2xbh68 moment 2015 w53 gives the expected value 2015 12 28t05 00 00 000z moment 2015 w53 does not 2015 01 03t05 00 00 000z shouldn it be 2016 01 03 also moment 2015 w53 format dddd mmmm do monday december 28th but moment 2015 w53 format dddd mmmm do invalid date if this really is bug and not just my lack of understanding be happy to work on fix>>>troubleshooting
chinese traditional encoding big5 regex found by nosekbk https twitter com nosekbk tested with moment js 10 make my browser use chinese traditional encoding big5 refresh site see error in console `uncaught syntaxerror invalid regular expression missing see file for arabic saudi arabia ar sa has broken regex suggested fix use `string fromcharcode 000 where `000` is the character code for all the unicode characters you re currently using as literals since javascript executes in utf 16 this will ensure all your characters are transferred in ascii ie the int param for `fromcharcode` and generated as unicode at runtime as expected missing closing bracked in regex due to hard coded non ascii string literals>>>bug
use different end of day value than midnight for relative date strings hii have an app that works in the nightlife industry in order to make saneness at night we time shift and consider 00 00 until 06 00 as the day before so that party on sunday night will be showen as today even after midnight there is an option to work with moment js and configure it to time shift the days only >>>new_feature
moment no longer exporting global when require js is present as of version 10 the moment global is no longer available if module system is detected this was previously working in this is causing headache for us as we have newer code written with polymer that is html importing moment and we re integrating it with older code written with require js moment detects require js and doesn add the global which causes our elements to fail at runtime our tests and demo pages still work because they do not have require js present and the polymer elements themselves don need require js to function fiddle is below but please note that it appears to be freezing for short period before dumping out to the console you ll ultimately get moment is not defined error and mismatched anonymous define module error from require js fiddle https jsfiddle net f5xu1cho >>>bug
add day marker character for japanese update move changing to src locale ja js >>>language
improved hebrew locale>>>language
add filipino fil locale this pr adds support for filipino tagalog locale all tests should be passing >>>language
deprecation warning moment add period number is depreciated although using correct format moment add number period this is the code 	keystone list bewerbung model find function err bewerbungen 		bewerbungen foreach function bewerbung 			if moment date now isafter moment bewerbung createdat add 14 			bewerbung state geschlossen 			 		 and get an error executing it deprecation warning moment add period number is depreciated use moment add number period instead am using moment 10 and as you can see keystone js my node js version is can anybody help me please >>>troubleshooting
inconsistencies docs missing between format and toisostring the top answers and comment on this so post http stackoverflow com questions 25725019 how do format date as iso 8601 in moment js 28641878 28641878 illustrate this minor issue basically `format outputs in local time without milliseconds and `toisostring` converts to utc and outputs milliseconds the docs seem to indicate they are equivalent perhaps note should be added to clarify that `toisostring` will convert to utc or better yet maintain the timezone and also make both formats use not use milliseconds >>>documentation
adding time to an invalid moment and then comparing it using after causing weird behavior see fiddle http jsfiddle net 8jb95uhs this code produces interesting results var moment abcd yyyy mm dd hh mm ss console log isafter moment false console log add 50 minutes isafter moment true only observed this around change of day though midnight so the behavior might not be consistent >>>bug
parse iso 8061 duration containing both day and week values this should resolve issue 2797 more generally it looks like it was previously not possible to combine week values with anything else when weeks were specified they had to be the only value given >>>pending_next_release
format ddd gives wrong day of week using ddd gives the wrong day of the week by the formatting using dd or dddd works fine so it just an issue with the abbreviation of letters var date 2015 12 15 var formatteddate moment date yyyy mm dd format ddd mmm console log formatteddate expected output tue 15 dec actual output wed 15 dec>>>troubleshooting
use moment js in angular and require js but get moment is not defined error first define path in require then when use moment in my angular js code but the chrome give me referenceerror moment is not defined what wrong with my code >>>troubleshooting
feature request add since method that returns duration this would essentially be `moment duration moment diff >>>new_feature
update ar sa js correct some of the words>>>language
day marker character is missing for japanese for japanese moment format mmmm do yyyy mm ss 12 10 2015 58 09 it miss after 10 it expect to 12 10 2015 58 09 japanese date format should be the most commonly used date format in japan is year month day weekday with the japanese characters meaning year month and day inserted after the numerals example 20081231 for wednesday december 31 2008 fyi https en wikipedia org wiki date and time notation in japan btw for chinese chinese korean they all include day marker character with moment format mmmm do yyyy mm ss >>>language
error in formatting moment have moment object image https cloud githubusercontent com assets 9649659 11651482 fc4d9d7c 9dcb 11e5 904a 9b3856200de4 png on calling format yyyymmdd get this >>>troubleshooting
correction of the week names in pt br in brazil the right names in week that consists in feira is dayofweek feira feira is incorrect >>>language
put all tests common for all locales together currently bunch of tests are copy pasted to all locales this makes it hard to maintain so we need to reorganize it also fix `src test moment format js` which iterates over almost all locales >>>bug
moment duration can parse weeks and days simultaneously hi was trying to parse youtube video duration which is 500 hours long however moment gave me wrong value for string p3w3dt20h31m21s moment gave me result of is weeks supported by moment thanks >>>bug up-for-grabs
created south african locale south africa uses iso8601 https en wikipedia org wiki iso 8601 since 1998 https en wikipedia org wiki date and time notation in south africa so ve setup locale for it>>>language needs_tests
tests failed create string with format years 2104 week day weekday first day of week sunday dow 2449 weeks count years with iso week 53 2472 client info create string with format years 2104 70 1970 week day weekday first day of week sunday dow 2449 jan 1970 is thursday 4th day weeks count years with iso week 53 2472 should have 71 years in 400 year cycle with iso week 53 >>>unit_test_failed
72 tests failed on half hour timezone tests fails on half hour offset based timezone like 30 ist can trace it back to this test in src tests moment create js https github com moment moment blob develop src test moment create js l416 moment always converts to correct 30 based offset in all cases but test value to compare with are incorrect for instance when asked to convert ``iso 2011281 180420 05`` >>>unit_test_failed
utcoffset 16 there seems to be no official way to set utc offsets smaller than 16 setting offset` myself now as workaround hack for that case and realize that doing it via integers to `utcoffset` would break backwards compatibility how about removing the 16 check when string is in the 00 05 format could write pr for that if there interest >>>bug up-for-grabs
string and string format yields different results for empty inputs not sure if this is desired behaviour but it seems like bug for me 1448668800 apparently is the timestamp for today midnight but shouldn both yield exactly the same results shouldn `format and `unix return the same >>>bug
add chinese locales zh sg zh hk zh mo this adds missing chinese locales `zh sg` is copy of `zh cn` as simplified chinese `zh mo` and `zh hk` are copies of `zh tw` as traditional chinese as far as know there is no differences between these copies but this might be the case so it make sense to copy these files and not just link them note that don speak chinese at all but work for chinese clients all know about the traditional and simplified chinese is described in this issue https github com getnikola nikola issues 1637 >>>language
isoweeksinmonth and isomonthstartweek would like to request the addition of the folllowing functions `isoweeksinmonth month which would return the number of weeks in month `isomonthstartweek month which would return the week number that the requested month starts in >>>new_feature
allow locale as second argument to moment the documentation says you can supply locale as the third argument to `moment` it would be really handy to have it supported in the second argument moment 24 11 2015 00 00 00 en gb that runs and gives date but the date is wrong in contrast of course this throws the deprecation notice about falling back to `date` and fails to parse because it not in format on my uk locale machine because `date` always assumes format when it sees as you know moment 24 11 2015 00 00 00 the request is to allow using the locale as the second not just third argument to use locale specific date patterns when parsing >>>new_feature
add subtract method inconsistency on negative and positive floating numbers with bigger units add months tostring sun dec 20 2015 12 12 57 gmt 1030 add months tostring sun dec 20 2015 12 13 01 gmt 1030 add months tostring tue oct 20 2015 12 13 06 gmt 1030 add months tostring sun sep 20 2015 12 13 10 gmt 0930 don expect the floating numbers to be exactly calculated into smaller units fractions given the known two issues here https github com moment moment issues 2305 https github com moment moment issues 2430 but adding with negative floating number seems give the wrong month too expect the last line to be sun oct 20 2015 12 13 10 gmt 1030 math round vs math floor difference live in an area doing dst change in early ocotober please ignore the gmt offset differences >>>bug
format token to emit hours 01 24 instead of 00 23 we can currently parse value with `24` in the hours field representing midnight at the end of day however we cannot currently emit such value when formatting parsing was added in 1965 formatting was discussed recently in 2758 suggest `k` 24 and `kk` 01 24 to match java and ios apis important this requires some pre processing as combination of `hours 0` and `k` or `kk` being present in the format must subtract whole day from the output of all other tokens example >>>enhancement
trigger an error if desired date is out of range it looks like moment silently falls back to some value instead of triggering an error when we pass date out of range as an argument is there any way of checking if the date is correct `isvalid does not work here it returns `true` even for dates out of range demo of the problem http jsfiddle net 8bd0z9jn >>>enhancement
handle incomplete locale on initialization make sure locales have all none of monthsparse and weekdaysparse so 2634 doesn happen again >>>bug
tests failed diff diff across dst 2140 17 diff diff across dst 2140 19 client info diff diff across dst 2140 17 month diff across dst lower bound diff diff across dst 2140 19 year diff across dst lower bound >>>unit_test_failed
startof hour and endof hour not dst aware for the hour when dst ended in the `ect europe copenhagen timezone `startof hour mutates the moment to the start of the previous hour instead of the current hour might be related to https github com moment moment issues 1990 tested on version 10 >>>bug
customisable day length for humanize hi there someone naievely tossed moment humanize calls all through our application which has resulted in some epic confusion it be super awesome to be able to define that day is hours or hours not super urgent just would be nifty feature >>>enhancement
loading moment twice discards extensions consider the following use case project loads `moment` project loads an extension for example https github com moment moment timezone project loads another dependency which loads `moment` this causes the extension to be discarded as moment is redefined trying to use the extension causes `moment extension is undefined` error expected behaviour when moment loads it checks if it is already loaded if it is already loaded it returns silently resulting extensions to remain defined and usable proposed fix think this should be inserted before https github com moment moment blob develop moment js l8>>>bug troubleshooting
support the en ie locale support the is en 28601 standard for date time formats in ireland see http lists w3 org archives public www international 2001julsep 0037 html for an in depth discussion on how it should be formatted >>>enhancement language
moment cannot always parse moment default formatted negative years hello the following is perhaps off limits but seems an issue know it is better to tell moment the format while parsing but shouldn moment at least be able to parse the format it produces by default >>>bug
september should be abbreviated as sept currently `moment` uses sep for the september abbreviation but per the oed it should be sept http public oed com how to use the oed abbreviations s>>>language up-for-grabs
when initializing an invalid date by using constructor with format toisostring returns current date hello during app development noticed confusing issue if an invalid date is initialized by using the constructor with the format parameter the method `toisostring returns the current date bug momentjs https cloud githubusercontent com assets 1684826 10911672 31ac4ae6 8246 11e5 8841 03527027ed91 png >>>bug
update malay translations>>>language
fix deperecation warnings caught by travis ci please fix deprecation warnings caught by travis ci https travis ci org moment moment builds 88308563 355deprecation warning moment add period number is deprecated please use moment add number period 356deprecation warning moment subtract period number is deprecated please use moment subtract number period 357deprecation warning toisostring is deprecated please use toisostring instead notice the capitals 358error 359 at duration toisostring home travis build moment moment build umd moment js 750 36 360 at object home travis build moment moment build umd test moment duration js 322 42 361 at object test run home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 136 18 362 at home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 279 10 363 at process home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 1277 24 364 at null ontimeout home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 383 365 at timer listontimeout as ontimeout timers js 121 15 366deprecation warning years accessor is deprecated use year instead 367error 368 at moment years home travis build moment moment build umd moment js 750 36 369 at object home travis build moment moment build umd test moment getters setters js 86 11 370 at object test run home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 136 18 371 at home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 279 10 372 at process home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 1277 24 373 at null ontimeout home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 383 374 at timer listontimeout as ontimeout timers js 121 15 375deprecation warning months accessor is deprecated use month instead 376error 377 at moment months home travis build moment moment build umd moment js 750 36 378 at object home travis build moment moment build umd test moment getters setters js 87 11 379 at object test run home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 136 18 380 at home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 279 10 381 at process home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 1277 24 382 at null ontimeout home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 383 383 at timer listontimeout as ontimeout timers js 121 15 384deprecation warning dates accessor is deprecated use date instead 385error 386 at moment dates home travis build moment moment build umd moment js 750 36 387 at object home travis build moment moment build umd test moment getters setters js 88 11 388 at object test run home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 136 18 389 at home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 279 10 390 at process home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 1277 24 391 at null ontimeout home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 383 392 at timer listontimeout as ontimeout timers js 121 15 393deprecation warning moment lang is deprecated use moment locale instead 394error 395 at function lang home travis build moment moment build umd moment js 750 36 396 at object home travis build moment moment build umd test moment locale js 195 16 397 at object test run home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 136 18 398 at home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 279 10 399 at process home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 1277 24 400 at null ontimeout home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 383 401 at timer listontimeout as ontimeout timers js 121 15 402deprecation warning moment langdata is deprecated use moment localedata instead 403error 404 at function langdata home travis build moment moment build umd moment js 750 36 405 at object home travis build moment moment build umd test moment locale js 198 29 406 at object test run home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 136 18 407 at home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 279 10 408 at process home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 1277 24 409 at null ontimeout home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 383 410 at timer listontimeout as ontimeout timers js 121 15 411deprecation warning moment lang is deprecated instead use moment localedata to get the language configuration use moment locale to change languages 412error 413 at duration lang home travis build moment moment build umd moment js 750 36 414 at object home travis build moment moment build umd test moment locale js 289 40 415 at object test run home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 136 18 416 at home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 279 10 417 at process home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 1277 24 418 at null ontimeout home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 383 419 at timer listontimeout as ontimeout timers js 121 15 420deprecation warning moment zone is deprecated use moment utcoffset instead https github com moment moment issues 1779 421error 422 at moment zone home travis build moment moment build umd moment js 750 36 423 at object home travis build moment moment build umd test moment utc js 63 15 424 at object test run home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 136 18 425 at home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 279 10 426 at process home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 1277 24 427 at null ontimeout home travis build moment moment node modules qunit node modules qunitjs qunit qunit js 383 428 at timer listontimeout as ontimeout timers js 121 15 >>>help_wanted
function to get next last dst transitions see moment moment timezone 266 this issue tracks the moment part it needs to scan the local environment by interrogating the offsets for various dates timrwood and both did something similar working on time zone detection so we can repurpose that here >>>new_feature
improve the moment timezone interface this is design change proposal for future version ie currently moment timezone works by monkey patching several moment functions this has led to inconsistent behavior and several bugs in moment timezone it would be preferred if moment had an explicit interface for moment timezone to plug into >>>rewrite
locale calendar today at xxxx hi another request in the calendar function locale definition for today at 12 00 you simply want sometime to just write at 12 00 for example we ll open at 12 00 can we add another locale calendar definition for just at and an option in the calendar function to use that definition for today thanks >>>enhancement
locale calendar capitalization hi when using the calendar function inside sentence the resulting text looks bad due to capitalization for example we re open today at 12 00 we re open tomorrow at 00 pm possible hacking solutions have different problems uncapitalize the first letter won work if the resulting string is thursday at 12 00 uncapitalize specifically the words today tomorrow next week won work for different languages unless we have long search replace list for all languages suggest adding another sent of calendar locale definitions for the case were the calendar needs to be mid sentence and parameter to the calendar function thanks >>>enhancement
time setter it would be useful to have function to set the time as string currently we only have functions for setting each individual component of time examples currently one has to do something like this to achieve the same effect parsing and reformatting is not good as it ignores any subtleties such as the utc local mode offset or time zone >>>new_feature up-for-grabs
update ta js updated the number format in tamil when tamil locale is chosen>>>language
tests failed locale el calendar last week 462 locale zh cn calendar last week 2019 client info locale el calendar last week 462 today days beginning of day locale zh cn calendar last week 2019 monday days next week >>>unit_test_failed
allow calendar to use functions this is in response to the issue 2678 have tried to fix the bug by checking if it is function or not similar to what is done in this file also test file was created as suggested by mj1856 was wondering if there are any arguments to be passed in the function via call method any suggestions reviews >>>enhancement
update it js update weekdaysmin to letters>>>language
parser should not return valid date for strings only containing or with format the following permissive parser returns valid date this appears to be true for any non numeric string containing either `a` or `p` which are accepted by the formatting string the date is midnight of the current day this is nonsensical behavior suggest that no string should be judged valid solely on the basis of the token obviously strict mode would help but strict mode isn desirable when parsing user input >>>troubleshooting
en nz locale values from windows locale settings>>>language
tests failed locale cs calendar next week 322 locale cs calendar next week 322 locale ru calendar last week 1592 16 locale ru calendar last week 1592 18 locale sk calendar next week 1632 locale sk calendar next week 1632 locale zh cn calendar current week 2017 locale zh cn calendar next week 2018 client info locale cs calendar next week 322 today days beginning of day locale cs calendar next week 322 today days end of day locale ru calendar last week 1592 16 today days current time locale ru calendar last week 1592 18 today days end of day locale sk calendar next week 1632 today days beginning of day locale sk calendar next week 1632 today days end of day locale zh cn calendar current week 2017 monday days current time locale zh cn calendar next week 2018 today days beginning of day >>>unit_test_failed
rendering calendar option by invocation using function instead of string since 10 we can define calendar options by invocation http momentjs com docs displaying calendar time but defining option using function seems not to work here is my example want to render only date without hours 	moment calendar null 		sameday dzi 		nextday jutro 		nextweek najbliszy dddd 		lastday wczoraj 		lastweek function 			switch this day 				case 					return zesz niedziel 				case 					return zesz rod 				case 					return zesz sobot 				default 					return zeszy dddd 			 		 		sameelse >>>bug up-for-grabs
fix accents over spanish version hello if use the current version build 10 of es locale the accent doesn look ok even with utf as charset thanks here is the fixed version moment js locale configuration locale spanish es author julio napur https github com julionc function global factory typeof exports object typeof module undefined factory require moment typeof define function define amd define moment factory factory global moment this function moment use strict 		var monthsshortdot ene feb mar abr may jun jul ago sep oct nov dic split 			monthsshort ene feb mar abr may jun jul ago sep oct nov dic split 		var es moment definelocale es 			months enero febrero marzo abril mayo junio julio agosto septiembre octubre noviembre diciembre split 			monthsshort function format 				if mmm test format 					return monthsshort month 				 else 					return monthsshortdot month 				 			 			weekdays domingo lunes martes mi u00e9rcoles jueves viernes u00e1bado split 			weekdaysshort dom lun mar mi u00e9 jue vie u00e1b split 			weekdaysmin do lu ma mi ju vi u00e1 split 			longdateformat 				lt mm 				lts mm ss 				l dd mm yyyy 				ll de mmmm de yyyy 				lll de mmmm de yyyy mm 				llll dddd de mmmm de yyyy mm 			 			calendar 				sameday function 					return hoy la this hours lt 				 				nextday function 					return ma u00f1ana la this hours lt 				 				nextweek function 					return dddd la this hours lt 				 				lastday function 					return ayer la this hours lt 				 				lastweek function 					return el dddd pasado la this hours lt 				 				sameelse 			 			relativetime 				future en 				past hace 				s unos segundos 				m un minuto 				mm minutos 				h una hora 				hh horas 				d un u00eda 				dd u00edas 				m un mes 				mm meses 				y un u00f1o 				yy u00f1os 			 			ordinalparse 			ordinal 			week 				dow monday is the first day of the week 				doy the week that contains jan 4th is the first week of the year 			 		 		return es >>>language
adding age calculation function to help with issues like 2331 and 2661 adding common function to calculate person exact age or other whole year differences between two given calendar dates example usage note that changed the function slightly from the example in 2331 such that feb 29th birthdays will fall on feb 28th in years without leap years there test for that included >>>new_feature
provide function to analyse the format provide function that would provide tokens for the format this is useful when writing higher order function that wraps `moment` without it must rely to string inspection local implementation which is not reliably to say the least >>>new_feature
provide function that would tell whether date fragment value is implicit or explicit the original question http stackoverflow com questions 33085487 how to tell if moment date object date fragment value is implicit or explicit in the above examples how to programmatically tell whether the values of month day and year are implicit or explicit >>>new_feature
correction of german austria localization 2649 >>>language
correction of german localization 2649 >>>language
attempt to add support for ordinal format for quarters fixes issue 2559 have some problems removing historical commits from the pr please ignore the two initial commits listed no source code is included with them have added ordinal support for quarters and tests for that according to my understanding of issue 2559 if you also want me to add parsing support please let me know of course also open to any comments you may have to my code >>>enhancement
isvalid method does not seem to be working accurately the date `100110 09 2015` is invalid but running `moment 100110 09 2015 isvalid returns `true` please see the jsfiddle http jsfiddle net sore2ynm this does not look like expected behaviour >>>forgiving_parsing
adds klingon tlh locale adds klingon locale as proposed in issue 2431 based on some excellent online resources >>>language
investigate performance tuning of moment creation and comparison this isn necessarily bug but stackoverflow user stumbled across an interesting effect http stackoverflow com 33003021 634824 rapid creation of two `date` objects can go through several thousand iterations before getting different values image https cloud githubusercontent com assets 1396388 10354742 f8cd389a 6d17 11e5 81ae ffe734550ffb png but rapid creation of two `moment` objects gets different values after under 100 iterations image https cloud githubusercontent com assets 1396388 10354696 7dbceef2 6d17 11e5 8503 7b049a1f05ab png is this just because `moment` is more expensive than `date` in terms of memory and cpu is there perf work that could be done here does it matter >>>performance
add subtract by business days moment add businessdays which increments forward by business days defined as mon fri similarly with subtract >>>new_feature
define default english locale instead of using it only in the source en locale is activated via `getsetgloballocale` this means that when load other locale and change to it `moment locale pl then cannot simply go back to english `moment locale en return still pl because en locale is not defined propose to change `getsetgloballocale` to `definelocale` when setting en locale this way english would still be active but also it will be available later as defined locale >>>troubleshooting
correction of german austria localization 2649 >>>language
correction of german localization 2649 >>>language
german localization hi the short strings for german de should look like this the current version with dots looking very strange and are not required almost same for austria de at many thanks in advance >>>language
weird parsing behavior for invalid dates with years before 1970 moment 2015 null null isvalid false moment 1968 null null isvalid true the second date is just as invalid as the first date this appears to be direct result of the pre 1970 workaround in `https github com moment moment blob develop src lib create date from array js` >>>bug
moment instanceof moment fails can it made so that the javascript standard way of finding out what an object is works with moment with the latest version using `moment instanceof moment` returns `false` can put `moment prototype moment fn` at the beginning of my code and then `moment instanceof moment` returns `true` and everything seems fine in the ways am using moment however there may be some case where this does not work so it would be real handy to have this ability integrated into the library by professional to ease our testing when moment is moment if it is as simple to do as it appears thanks in advance dac>>>enhancement
changed relative time translation corrected marathi translation locale mr js for relative time with suffix>>>rewrite
detect default locale why do we default the locale to us english per this answer http stackoverflow com 25842472 634824 we can detect the user locale with why not set the default locale to match the user locale alternatively consider adding this as new function or as special parameter to pass into `moment locale` >>>enhancement new_feature todo
unexpected behavior of getter methods for invalid dates obtained from parsing with patterns when parsing invalid strings with patterns such as also when using strict mode moment js object is returned that gives the current date when using getter methods such as `month or `year instead of an error `format still returns invalid date as expected without parsing patterns the following expected behavior is shown tested this with moment js 10 >>>bug
moment should provide consistent dst behavior updated when moment is created or manipulated to value that is either invalid or ambiguous due to daylight saving time the results should be consistent across implementations currently we rely strictly on the `date` object which may not always provide the same behavior specifically when local time is invalid we should advance by the dst bias 30 becomes 30 when local time is ambiguous we should pick the first occurrence 30 is 30 daylight time not standard time originally reported the issue described in 2612 is explainable but what find strange is that the behavior isn the same in other time zones for brazil firefox always goes backwards instead of forwards like chrome but for other time zones moment always goes forwards even in firefox example in firefox in brazil example in firefox in pacific time given brazil behavior would expect pacific time to also roll back to 00 but it jumps forward to 00 it good if moment makes it consistent for pacific but then it not clear why brazil is still inconsistent if we re trying to compensate >>>enhancement
rethink wondering if we really need to track `date` object in d` loads of questions are raised from folks logging moment instance to the console seeing d` and not understanding how to interpret it while convention is common for internal private fields it still not something the common user understands also in the console the string it displays is implementation dependent most browsers show the local time but others like firefox show the utc time so lot of misunderstandings are when the string representation of d` doesn align with the date emitted by format currently the value of valueof is the same as `moment valueof only when the moment is either local or utc as soon as there is an offset set in offset` then the d` value no longer represents the same instant in time but rather the instant shifted by the offset our `valueof function and many others have to take offset` into account and shouldn this is both an efficiency problem and an easy source of errors it also isn understood when users look at d` in isolation per my first point it would make lot more sense imho to keep just timestamp as number which is always the utc based timestamp of the specific instant in time that the moment is about perhaps in ts` for timestamp the offset` would be applied to ts` for the functions that need it we may find we can actually get rid of several functions that use the `date` object for example have recently re implemented functions for date part to timestamp and vice versa in pure javascript https gist github com mj1856 f6aa5e8b8aa040f65ae1 and they perform faster than native code this could be pulled into moment and other similar functions can probably be written that manipulate the timestamp directly rather than calling functions like `setmonth on the `date` object this would also have the benefit of not being browser dependent on dst transition adjustment behavior think this will also make it easier for some of the moment timezone integration >>>enhancement performance
adding months is confusing when adding months to moment instance it automatically take you to the start of the resulting month in other languages and environments like sql when you add month to date it would stay on the same day of the month but move months into the desired direction for example let say ve got date of `2015 09 17 09 01 15 461z` and want to go months into the past so do this `moment 2015 09 17 09 01 15 461z add months todate would expect the result to be `2015 06 17 09 01 15 461z` but instead it `2015 06 01 09 01 15 461z` why did it go to the first of the month it doesn work like that if you do direct month manipulation in js or any other languages that ve worked with is this behaviour by design or is it bug if it by design is there way to override this behaviour >>>troubleshooting
incorrect strict parsing behavior for day of week dd ddd dddd with strict parsing enabled would expect all the following calls to return an invalid date now it wouldnt be so bad if dd were to match results for ddd and dddd as well unfortunately even with strict parsing enabled also completely different strings are matched tested this with moment js 10 >>>bug
adds kazakh kk locale adds kazakh locale with its tests>>>language
how can import momentjs in es6 hi ve tried the following imports in node to execute `moment format date but all of them fail with `format is undefined` how is the correct way of importing this library from es6 thanks in advance >>>build/release
momentjs avalonjs conflict momentjs avalonjs conflict uncaught error http localhost 8181 static momentjs moment jsscripthttp localhost 8181 static momentjs moment js avalon mix error avalon min js 34g delay avalon min js 127c define avalon min js 128 anonymous function moment js anonymous function moment js 11>>>troubleshooting
add at to localisations few times now ve used moment for projects where there was need to display date at time this is fine when we re only working with english languages but gets complex with foreign languages moment calendar feature partially covers this off could we add support for localising the word at for appointments and edited times etc >>>enhancement
trivial miscalculations with diff method and months as unit `diff is sometimes off by very small margin of error using the `months`unit and hence also year all example below are using floating point number as floored results would fix the error in most cases diffing `2016 02 29t00 00 00 000z` with `2016 02 28t23 59 59 999z` should yield the same result as `1 1000 60 60 24 29` ms in leap month which is `3 991060025542784e 10` but instead getting `3 7335722819593786e 10` that the result of month with 31 days not 29 funny enough if reverse the order get the correct result 991060025542784e 10` the same thing happens with `2015 03 29t06 00 00 000z` and `2015 03 28t06 00 00 000z` given the longer time span the error is larger but still trivial the expected result should yield the same result as `1 31` day in month with 31 day which is `0 03225806451612903` but getting `0 034482758620689655` `1 29` again reversing the order yields the correct result in this codepen http codepen io fullkornslimpa pen boyjpp have compared the results with custom method utc only >>>troubleshooting
added ukrainian translation>>>duplicate language
add dv locale adds locale and tests for dhivehi thaana language >>>language
wrong parsing when month is overflown and there is mmm in one of the formats hi getting really strange parse result when passing formats and there is month overflow in input string and one of the formats is with mmm example http jsfiddle net igoryan yyx0j6os moment 01 15 80 34 dd mm yy mm works correctly but moment 01 15 80 34 dd mm yy mm dd mmm yy hh mm will result in thu jan 01 2015 03 34 00 gmt 0600 instead of invalid value looks like in first case the isvalid is false because pf overflow and then second format is accepted even though mmm and 80 are not matched >>>bug
spellchecking correccin ortogrfica salvo que la mayscula venga exigida por la puntuacin comienzo de texto despus de punto los nombres de los das de la semana de los meses de las estaciones del ao se escriben en espaol con minscula inicial >>>language
add mongolian language locale to moment js>>>language needs_tests
moment locale zh cn dose not work in meteor moment locale zh cn dose not work in meteor >>>build/release
russian locale capitalized first cahracters in names fix 2569 russian locale capitalized first cahracters in names fixes 2569>>>language
unexpected reserved word in moment js 10 found this issue in an angularjs project my project fails all tests because of an unexpected reserved word karma output chrome 44 2403 linux error uncaught syntaxerror unexpected reserved word at mnt data documents web development projects buzzweb vendor moment src moment js this issue on stackoverflow also describes the same error http stackoverflow com questions 29977553 uncaught syntax error with moment js not javascript expert but it appears to be an issue with the switch to es6>>>troubleshooting
firefox 37 moment is not function have no idea what going on chrome have function and firefox is wrapping the moment into an object wish can tell you more but have no idea how should debug this firefox screen shot 2015 08 24 at 50 50 pm https cloud githubusercontent com assets 4237280 9452093 666da5b6 4a80 11e5 9679 691ad90db116 png chrome screen shot 2015 08 24 at 51 15 pm https cloud githubusercontent com assets 4237280 9452092 666af730 4a80 11e5 9235 debe23c6e7d0 png >>>troubleshooting
adding success callback on loading of locales hello and thanks for your work is there way to be notified when locales have finished loading when the locale takes time to load end up having the dates displayed in the wrong language english thank you >>>troubleshooting
change few seconds ago to seconds ago couldn find this in the docs but is there any way to change the relative time of few seconds to more specific timeframe 15 seconds ago >>>enhancement
16 tests failed create object 2075 diff diff key after 2135 diff diff key after 2135 diff diff key after 2135 diff diff key after 2135 diff diff key after 2135 diff diff key before 2136 diff diff key before 2136 diff diff key before 2136 diff diff key before singular 2137 diff diff key before singular 2137 diff diff key before singular 2137 diff diff key before abbreviated 2138 diff diff key before abbreviated 2138 diff diff key before abbreviated 2138 diff diff floored 2143 client info create object 2075 diff diff key after 2135 year diff diff diff key after 2135 month diff diff diff key after 2135 week diff diff diff key after 2135 week diff diff diff key after 2135 day diff diff diff key before 2136 day diff diff diff key before 2136 week diff diff diff key before 2136 week diff diff diff key before singular 2137 day diff singular diff diff key before singular 2137 week diff singular diff diff key before singular 2137 week diff singular diff diff key before abbreviated 2138 day diff abbreviated diff diff key before abbreviated 2138 week diff abbreviated diff diff key before abbreviated 2138 week diff abbreviated diff diff floored 2143 24 hours day >>>unit_test_failed
russian locale capitalized first cahracters in names why month and weekday names are in lower case in `ru` locale not with capitalized first character like in other locales and anoter datepickers windows calendar etc for example `` `` and `` is more habitual for calendar than `` `` and `` first of all question is for viktorminator author of locale file can make pr to fix this >>>language
adding swiss french locale fr ch swiss french is slightly different from french we use dots instead of slashes to display dates 14 2014 versus 14 2014 also included the ordinal changes recently made to fr ca conerning ordinal abbreviation but am not sure why it was rejected in fr locale and if this rejection would also apply to fr ch jfroffice do you have examples where the abbreviation looks wrong >>>language
syntaxerror unreachable code after return statement with moment min js version 10 using firefox 40 get the following message console >>>bug troubleshooting
enhancement add ordinal support for quarters it would be nice to add ordinal support for quarters for example want to display the date as 1st quarter 2015 momentobject format qo quarter yyyy >>>enhancement up-for-grabs
relativetime seconds using relativetime and noticed the equals few seconds rather than seconds as shown in the documentation http momentjs com docs customization relative time is it possible to add seconds and second value was hoping to use these as part as custom humanize implementation with multilingual support and few seconds isn granular enough thanks >>>enhancement
update hr js even though names of months are sijeanj veljaa etc that is not the right way to write them as date same goes for other months 14 veljae oujka 17 travnja 21 svibnja 26 lipnja 19 srpnja kolovoza rujna 10 listopada 22 studenog 15 prosinca>>>language needs_tests
support for telugu locale>>>language
implement language inheritance this has been requested over and over the idea is to enable creating language by specifying the differences with another language this will only be used by user code not in the build in locales so that they remain independent to do this properly we need to have `not specified` value that would mean it wasn specified in the current description wrap all locale token access with methods in `language` class two implementations return value directly or check for `not specified` and fall back to parent language >>>enhancement todo
fix locale for khmer language>>>language
add scots gaelic gd support this pr is to add scots gaelic gd support to moment js modifies parser to accept gaelic months include scots gaelic language file includes scots gaelic unit tests >>>language
npmignore add please min tests js to npmignore>>>duplicate
15 tests failed locale el parse 450 23 locale el parse 450 39 locale el parse 450 47 locale el parse 450 55 locale el parse 450 87 locale el parse meridiem 451 locale el parse meridiem 451 locale el parse meridiem 451 13 locale el parse meridiem 451 17 locale el parse meridiem 451 21 locale el parse meridiem 451 25 locale tzl suffix 1869 locale tzl now from now 1870 duration json stringify duration 2186 format full expanded format is returned from abbreviated formats 2218 client info locale el parse 450 23 should be month locale el parse 450 39 should be month locale el parse 450 47 should be month locale el parse 450 55 should be month locale el parse 450 87 should be month 11 locale el parse meridiem 451 10 should be 22 locale el parse meridiem 451 10 should be 22 locale el parse meridiem 451 13 10 should be 22 locale el parse meridiem 451 17 10 should be 22 locale el parse meridiem 451 21 10 should be 22 locale el parse meridiem 451 25 10 should be 22 locale tzl suffix 1869 died on test undefined object doesn support this property or method locale tzl now from now 1870 died on test undefined object doesn support this property or method duration json stringify duration 2186 died on test undefined json is undefined format full expanded format is returned from abbreviated formats 2218 died on test undefined object doesn support this property or method >>>browser_specific unit_test_failed
add swahili sw locale this is an update of pull request 2228 authored by fadsel it has been rebased to latest develop the locale moved to src local and tests added don speak swahili so the language is as per the original pull request to be confirmed by fadsel is using am and pm for time correct as this is not defined am pm this will be used by default is it correct that no ordinals are defined this will mean that 1st 2nd 3rd and 4th are just written as and does hivi punde baadaye make sense for in few seconds in short while and does tokea hivi punde make sense for few seconds ago short while ago this is how moment will produce those phrases the translation of at seems inconsistent for today tomorrow saa vs next week and last week saat and seems to be missing for yesterday should jana lt be jana saa lt next week last week seem to be the equivalent of next week tuesday and last week tuesday wouldn you just say next tuesday and last tuesday that all feel free to submit your own pull request using this work if it helps >>>language
add lao locale lo add locale for lao language replace earlier pull request 2510 >>>language
fix russian locale for calendar next week reproduce issue open http momentjs com set `russian` locale execute in console wrong >>>language
inconsistent localisation formatting for japanese there seems to be away to get the month with it counter particle but it impossible to get the day and year counter particle is there way for me to add my own custom keys for example as sibling of lll want like ``hello`` for example >>>language
khmer translation km is wrong for key sameday hello there is wrong spelling of key `sameday` for khmer translation in the file `moment with locales js` `moment with locales min js` and locale file `km js` incorrect correct and thank you very much for making this javascript library >>>language
option to use ceil instead of round for duration humanization currently the `humanize` method of duration works like this moment duration 25 hours humanize day moment duration 35 hours humanize day moment duration 36 hours humanize days however sometimes `ceil` may be needed instead of `round` which means the humanized text will be days when the duration is larger than 24 hour and less than 48 hours is it possible for moment to add an option to use ceil instead of round for duration humanization >>>enhancement
use requirejs configuration to customize moment hi is there possibility to pass customization config to moment via requirejs config like noglobal option per example thank you >>>enhancement
official support for parsing rfc2822 dates in 1407 it is claimed that only iso dates are parsed because others can be reliably parsed but rfc2822 date is support by `date` since javascript in all browsers in fact rfc2822 date is the most supported format in javascript iso 8601 was added just in ecmascript so understand why arbitrary strings might not tried to be parsed automatically but why not allow parsing rfc2822 strings they are as clearly defined as iso strings in my opinion moment js should support what date supports across platforms and add more not that is supports less >>>enhancement todo
moment crashs if you try to strictly validate locale dates get md date git master npm ls grep moment moment 10 get md date git master node var moment require moment undefined moment 21 2015 dd mmm yyyy ru true isvalid typeerror cannot read property of undefined at locale localemonthsparse as monthsparse users matmuchrapna projects get md date node modules moment moment js 659 49 at object users matmuchrapna projects get md date node modules moment moment js 626 36 at addtimetoarrayfromtoken users matmuchrapna projects get md date node modules moment moment js 580 26 at configfromstringandformat users matmuchrapna projects get md date node modules moment moment js 1199 17 at prepareconfig users matmuchrapna projects get md date node modules moment moment js 1336 13 at createfromconfig users matmuchrapna projects get md date node modules moment moment js 1307 44 at createlocalorutc users matmuchrapna projects get md date node modules moment moment js 1385 16 at local createlocal users matmuchrapna projects get md date node modules moment moment js 1389 16 at utils hooks hooks users matmuchrapna projects get md date node modules moment moment js 16 29 at repl 1>>>duplicate language
mode of week operations it confusing to have so many similar separate functions depending on what kind of weeks you re using `day` `weekday` and `isoweekday` `week` and `isoweek` `weekyear` and `isoweekyear` `weeksinyear` and `isoweeksinyear` potential new functions proposed in 2522 imho it would make more sense to have week mode getter setter similar to how we have local and utc mode >>>enhancement up-for-grabs
calculating last wednesday etc reading the docs for the `day` setter http momentjs com docs get set day see these examples these don necessarily work consistently for example consider asked for last saturday and last sunday respectively since the supplied date is wednesday would expect the results to only be day apart the 25th and 26th consider also that we support day sunday in string format both numeric and string forms would appear to prefer the current week which is fine it just the bubbling function of the numeric form that doesn make logical sense propose remove the bubbling function either modulo to the same day of week or throw an error when out of range add some new functions for getting the last next instance of day of week perhaps with an optional `n` number of weeks defaulting to do the same thing with respect to locale aware day of week functions and iso day of week functions update the docs accordingly >>>bug enhancement new_feature up-for-grabs
exclude tests js from release was looking into disk space used by our node modules and noticed moment was rather large after further digging found out that the majority of the weight was tests would it be possible to publish minimal version of moment to npm that excludes the 1mb test file in the min folder >>>build/release
how to load only locales want am using webpack and your npm package unfortunately it require all locales at once webpack knows they are optional 252 moment locale bs js 59 kb optional built 253 moment locale ca js 85 kb optional built 254 moment locale cs js 79 kb optional built but for some reason they are not droped is there any way how to require just core with selected locales >>>troubleshooting
follow semantic versioning principles we re using the `major minor patch` versioning scheme but we re not fully following the principles of semantic versioning http semver org specifically we re incrementing the patch number when introducing new functionality instead of the minor number the most recent change should have been labeled `2 11 0` not `2 10 5` >>>build/release
improved chinese localization and get the same result but standard months should use the chinese number gb 7408 1994>>>language needs_tests
moment iso date parsing difference between 10 and 10 hello using 10 was parsing likely iso 8601 dates like this var moment datestr moment iso 8601 if isvalid and things worked as expected when passing invalid dates on updating to 10 this is no longer the case get an exception in the moment call the exception is thrown here function moment config copyconfig this config this new date config gettime because config is undefined should be doing things differently or is this regression jsfiddle showing the 10 behaviour here http jsfiddle net xnvofgrm thanks tim >>>bug high_priority
add lao locale lo >>>language
coveralls io reporting doesn work think it is caused by running coverage on temporary out of repo files initial coveralls integration written in 2387 >>>build/release
add new localised date format for full date without time according to http momentjs com docs displaying format moment js supports among others these localised date formats omitting lowercase variants for brevity contents code example month name day of month year ll september 1986 month name day of month year time lll september 1986 30 pm month name day of month day of week year time llll thursday september 1986 30 pm would like to have date format consisting of month name day of month day of week and year but without the time what ll is to lll the hypothetical format would be to llll right now use the following snippet to construct such format but very much like to switch to less hacky solution it essentially takes the difference between lll and ll and applies it to llll to remove the time and any language specific additions associated with it the use case is date selector with calendar for mediawiki https phabricator wikimedia org t97425 >>>enhancement flexible-presets
test failed utc utc and local 2337 client info utc utc and local 2337 the hours should be correct for local >>>unit_test_failed
days and months in spanish should be lowercase in spanish day and month names should be lowercase as they were prior to commit 7d147d6 fixes 2497 >>>language
month names and day names should not be capitalized in spanish these should all be downcased https github com moment moment blob develop locale es js source http spanish about com od writtenspanish capitalization htm>>>language
isoweeks does not retain year from the docs http momentjs com docs get set iso week gets or sets the iso week of the year this suggests that calculates the first week of 2016 however the result is 2015 01 02 >>>bug
fix parsing months for cs and sk 2243 fixes 2243 for czech overwrites default parser due to 477 and slovak uses default parser since it doesn actually have the same problem ve tried writing test for parsing in strict mode by changing to but it fails with any idea what might be going wrong >>>language
update deprecate js as explained in the issue 2479 deprecate function causes firefox 10 to hang for approximatively seconds at each page load >>>performance
cannot parse short monthnames with periods in some locales the short monthnames have trailing period in german de for example jan febr when try to parse something like this 20 jan 2013 with the format dd mmm yyyy cannot get true from the isvalid function in strict mode without strict it is valid but lot of other crap too var date 20 jan 2013 var format dd mmm yyyy var locale de var valid moment locale locale document writeln moment monthsshort moment date format locale true isvalid valid true valid false document writeln date format locale valid valid >>>bug
fix bangla translation for evening relative time friday few bangla words are fixed ref http www ovidhan org b2b e0 a6 ac e0 a6 bf e0 a6 95 e0 a6 be e0 a6 b2 or https translate google com en bn e0 a6 ac e0 a6 bf e0 a6 95 e0 a6 be e0 a6 b2 https translate google com en bn friday >>>language
tests failed diff diff across dst 2087 17 diff diff across dst 2087 19 client info diff diff across dst 2087 17 month diff across dst lower bound diff diff across dst 2087 19 year diff across dst lower bound >>>unit_test_failed
deprecate function slow down firefox 10 the call to new error stack in the deprecate function slow down firefox 10 even if you don use any deprecated function moving new error stack where it is used is possible fix momentjs version is 10 >>>performance
add current week for zh tw the day after tomorrow was always determined as next week so we should subtract startofweek time from current time and check it is larger then week >>>language
tests failed diff diff across dst 2087 17 diff diff across dst 2087 19 diff diff between utc and local 2089 diff diff between utc and local 2089 diff month diffs 2092 diff month diffs 2092 diff year diffs 2094 quarter quarter diff 2309 client info diff diff across dst 2087 17 month diff across dst lower bound diff diff across dst 2087 19 year diff across dst lower bound diff diff between utc and local 2089 month diff diff diff between utc and local 2089 week diff diff month diffs 2092 016150740242261104 016129032258064516 jan to jan noon should be 31 months diff month diffs 2092 9676985195154778 967741935483871 jan to jan 31 should be 30 31 months diff year diffs 2094 0013458950201886 0013440860215055 jan 2012 to jan 2013 noon should be 31 12 years quarter quarter diff 2309 diff quarter >>>unit_test_failed
tests failed diff diff across dst 2087 17 diff diff across dst 2087 19 start and end of units start of quarter 2317 start and end of units end of quarter 2318 start and end of units end of quarter 2318 start and end of units end of quarter 2318 start and end of units end of quarter 2318 client info diff diff across dst 2087 17 month diff across dst lower bound diff diff across dst 2087 19 year diff across dst lower bound start and end of units start of quarter 2317 strip out the hours start and end of units end of quarter 2318 keep the quarter start and end of units end of quarter 2318 set the month start and end of units end of quarter 2318 set the day start and end of units end of quarter 2318 set the hours >>>unit_test_failed
update sr cyrl js>>>language needs_tests
parse value without fallback passing an arbitrary value to `moment value produces deprecation warning as per 1407 it would be really nice if there was some way to use this parsing but without falling back to the date constructor the only way have found so far is fairly clumsy and even then this still doesn parse asp net date 1198908717056 strings the simplest option would be to allow the strict option in two argument form `moment value true thanks >>>enhancement
locale specific longdateformat without the year currently see there is way to access the longdateformat for particular locale but no way to get that same format without the year there are cases when want to show the full date as yyyy mm dd or dd mm yyyy depending on the locale which can do with the longdateformat but there are times where this is too verbose ie yyyy is the current year and prefer mm dd or dd mm as suggested on stackoverflow http stackoverflow com 27360102 one could perform some surgery to produce the desired result but it would be nice for there to be an officially supported way of the longdateformatwithouttheyear >>>enhancement flexible-presets
circular dependency when using i18n via requirejs i`m having problem that is mentioned in the comments of http stackoverflow com 17242839 341983 how do you load translated version of moment js via requirejs correctly ended up with circular dependency when set the localization as dependency guess the `moment` requirement within `de js` causes this my current workaround made change within the locale file `vendor moment locale de js` to make this construct work instead of `return de` use `return moment` to loop the moment object library trough is there better way >>>troubleshooting
updated nb js to reflect the official versions updated to reflect the approved iso standard and abbreviations according to official rules>>>language
test failed utc utc and local 2337 client info utc utc and local 2337 the hours should be correct for local >>>unit_test_failed
typos at months source of currect names for months is http www localeplanet com icu uz >>>language
include week calendar overflow check currently only year month day overflow checks are performed but not week calendar overflow checks so any combination of week year week weekday would produce moment even if values are too high low add checks in the `src lib units day of year js` `dayofyearfromweeks` function maybe >>>bug
northern sami>>>language
fix of spelling error even though names of months are sijeanj veljaa etc that is not the right way to write them as date `po istom ovom principu piu se ostali mjeseci same goes for other months 14 veljae oujka 17 travnja 21 svibnja 26 lipnja 19 srpnja kolovoza rujna 10 listopada 22 studenog 15 prosinca`>>>language
iso 8601 support you would think that moment supports iso 8601 well only the pieces that we want to support basic formats for date and time and date time no dashes support digit timezone datetime separator can be `t` or space but not in strict mode or nothing fractional seconds can be split by or both `t` and `z` are case insensitive `t` and `z` are valid >>>bug
correction nepali language meridiem and days of week fixed grammatically corrected the words corrected the mini form of week days corrected the meridiem time corrected day of week and day of year>>>language
feature request public api for getting have use case where module at the data layer parses user inputted strings into `moment` objects and module at the ui layer needs to emit error messages if the string can be parsed but can get feztober 1992 back out of `feztober3` without using the private i` love something like `moment source so could do >>>new_feature
cut russian month short names to characters even character month names should be cut to symbols>>>language
expose function to return parsed format consider how does one determine which format was used currently the only way is by checking the f` private field it would be useful if there was function that returned this as part of the public api ref http stackoverflow com 31101657 634824>>>enhancement new_feature
how can set number to chinese character hi is it possible set number to chinese character 2015 06 25 10 thanks>>>enhancement language
formatting with more than three tokens repeats we don want to support finer precision than milliseconds but we do need to contend with working with strings containing such precision even if we truncate parsing is already supported with any number of decimal places but formatting has some weirdness is that it repeats the value in the formatting see also 2022 >>>bug todo
test failed utc utc and local 2337 client info utc utc and local 2337 the hours 22 should be correct for local >>>unit_test_failed
fix hu improve long date time formats for hungarian see datetimes at http www 01 ibm com support knowledgecenter sss28s xfdl xfdl formats hu hu dita>>>language
get months and monthsshort arrays for locale without changing the global locale hi am creating calendar with i18n support using moment js and it works nice for main languages but spanish in every locale file `monthsshort` is defined as an array but in spanish it is function and can access to the list of short months names it seems to the single language to have that function that only serves to add point at the end of the month can that be done by the user of moment js cheers javi>>>enhancement todo
using string and number in utcoffset do not have same effect hi there used the utcoffset with number and string and they both do not returns the same dates you can also check the fiddle which have linked http jsfiddle net dpadmrr5 for example if use 05 00 and in utcoffset the both shows the different times here is my code var testdate 2015 06 07t04 00 00 var date moment testdate utcoffset 05 00 format hh mm ss var date moment testdate utcoffset format hh mm ss alert using offset as 05 00 the date is date alert using offset as the date is date >>>documentation
klingon locale recently stumbled upon this most excellent resource quick reference to time expressions in klingon http klingonska org ref time html there would appear to be enough detail in here to create klingon locale for moment js imho this would be fun addition to the library ve not got the time to do it myself but perhaps someone would like to pick it up related the klingon language institute http www kli org bing translator https www bing com translator has two klingon settings >>>language up-for-grabs
improved finnish translations modified the translation originally made by bleadof to be more similar to the other translations >>>language needs_tests
issame isbefore isafter behavior with different offsets example var time1 moment utcoffset 12 var time2 moment time1 issame time2 day true console log time1 format mm dd yyyy 06 20 2015 console log time2 format mm dd yyyy 06 19 2015>>>enhancement
strict date parsing of iso 8601 dates without times doesn work when valid iso 8601 date string without time component is parsed using `moment iso 8601` as the date format and strict parsing is enabled the resulting moment object is invalid for example `moment 2007 07 02 moment iso 8601 true does not return valid object here jsfiddle that demonstrates the problem in moment js v2 10 https jsfiddle net k3snbte9 here the pull request with my fix https github com moment moment pull 2404>>>bug high_priority
allow custom formats to be passed to calendar function this is useful if you want to override the locale specified defaults on case by case basis not by changing the global config for example if you don want to include the time moment calendar null sameday today nextday tomorrow nextweek dddd lastday yesterday lastweek last dddd note that if you don override format the default from the locale is still used `sameelse` isn specified above >>>enhancement
dd ddd and dddd strict parsing is not working appropriately `date moment dddd true isvalid will return true along with any gibberish input >>>bug
german words for today yesterday tomorrow should not be capitalized grammar ref http www duden de sprachwissen rechtschreibregeln gro c3 9f 20und 20kleinschreibung the original authors of these `de` and `de at` translation are lluchs oire madmg >>>language
fix bengali translation of morning bengali translation of morning should be sokal not shokal this pr fixes that >>>language
nominative month translation added to lt js language>>>language
parsing issue from http stackoverflow com 30832920 634824 even though one digit is specified for hours and two are specified for minutes the number is read left to right taking two digits for the hour and leaving the remaining digit for the minute would expect hour `13` pm and minute `23` >>>bug forgiving_parsing
make today tomorrow yesterday last usable standalone moment with locales includes the translations of today tomorrow yesterday last but only in fixed formats please make it possible to use the translations by themselves like for day month>>>enhancement up-for-grabs
locales fr fr ca set an abbreviation for ordinal numbers went for the simpler deuxime troisime form instead of second troisime all numbers after share the same abbreviation my first idea was to go for me but looking for source to back my pr found that the correct way is at least according to printing rules https fr wiktionary org wiki c3 a8me the french academy doesn seem to have any article concerning the abbreviation only the second deuxime usage http www xn acadmie franaise npb1a fr la langue francaise questions de langue 29 strong em deuxime second em strong ping jfroffice >>>language
week calculation differs other way around moment year 2015 week endof week moment isamomentobject true isutc false locale locale sun jan 11 2015 23 59 59 gmt 0100 cet moment year 2015 week startof week moment isamomentobject true isutc false locale locale mon jan 05 2015 00 00 00 gmt 0100 cet moment unix 1420830600 moment isamomentobject true 1420830600000 isutc false locale locale fri jan 09 2015 20 10 00 gmt 0100 cet moment unix 1420830600 week 2>>>troubleshooting
date parsing broken on old webkit tried this with safari uses webkit 533 21 and date parsing does not work it simple example just `moment 2015 06 08 isvalid returns false even if you pass the format moment 2015 06 08 yyyy mm dd isvalid here the fiddle http jsfiddle net yuaw2ypt >>>browser_specific bug
improperly parsing negative durations moment properly parses duration of type p1d however 1d is not parsed correctly moment duration 1d days moment duration p1d days couldn find the actual iso 8601 standard but found java duration description that implies this is allowed https docs oracle com javase docs api java time duration html parse java lang charsequence 6h3m parses as hours and minutes p6h3m parses as hours and minutes 6h 3m parses as hours and minutes >>>enhancement up-for-grabs
future and past add constants for undefined future and past dates the undefined future date should always test as greater than any date compared to it and the undefined past date should always test less than >>>enhancement
update sr js>>>language
update hr js>>>language
test failed add and subtract add across dst 2023 client info add and subtract add across dst 2023 expected at least one assertion but none were run call expect to accept zero assertions >>>unit_test_failed
cannot set property moment of undefined issue 1179 seems to have reared its ugly head again today jquery uses this approach which think moment should adopt as well >>>troubleshooting
error running transpile raw task module does not export moment fresh clone of build 10 25cc720fbaab7323a1016cd0beb6a36e349c41be grunt output the specific locale that triggers the error seems non deterministic and changes on each run system is windows node v0 12 fresh install of all dependencies >>>bug build/release
fix building tasks for `moment with locales js` and `moment with locales custom js` 2367 moment with locales custom js uses last defined locale by default `moment with locales js` and `moment with locales custom js` were default to en see grunt task `embedlocales` adding it back to transpiling task seems the right thing to do custom locale building was broken screen shot 2015 05 28 at 38 08 pm https cloud githubusercontent com assets 25500 7871808 34824378 0547 11e5 9279 f550314e703f png in current built `moment with locales custom js` this line which `moment` is actually undefined and should be replaced with the matches from the regex and thus become >>>high_priority
test failed utc utc and local 2337 client info utc utc and local 2337 the hours should be correct for local >>>unit_test_failed
add coverage reporting using nyc and coveralls this pull adds coverage reporting facilitated by nyc https www npmjs com package nyc and the hosted coverage service coveralls io run `npm run coverage` to get human readable coverage report run `npm run coverage reporter lcov` to get an html report over coverage in the coverage folder run `npm run coveralls` to report coverage to the coveralls io https coveralls io you ll need to setup your repo on coveralls io and grap the `coveralls repo token` on travis ci org you ll need to set an environment variable with the value of `coveralls repo token here what coverage currently looks like for moment >>>troubleshooting
tests failed diff diff across dst 2087 17 diff diff across dst 2087 19 client info diff diff across dst 2087 17 month diff across dst lower bound diff diff across dst 2087 19 year diff across dst lower bound >>>unit_test_failed
test failed add and subtract add across dst 2023 client info add and subtract add across dst 2023 expected at least one assertion but none were run call expect to accept zero assertions >>>unit_test_failed
jspm locale not working first installed with jspm install moment version 10 gets installed moment gets imported import moment from moment later when moment is used moment locale sv fromnow the local is still en are we doing something wrong or missing something or is it broken >>>troubleshooting
modularize moment js make the core as light as possible remember when moment was lightweight library right now at 12kb gziped no less for what it in most cases just very very simple date manipulation simple solution to this problem would be to modularize momentjs so at least for environments like browerify webpack and such minimal version can be obtained eg regular usage can stay the same modular usage could look like this let pretend the above is in something like `lib moment` and represents your default boilerplate configuration for it obviously you may eventually encounter situations where you need more advanced functions if we add to the default boilerplate we unfortunately add to every other context that doesn need it this is big bummer if we re trying to keep client size down with things like webpack code splitting however so long as the modular system is capable of being extending any time there no problem whatsoeve ideally to avoid subtle race condition bugs we should be able to get new advanced version as separate instance now only the module that actually uses that feature pays the cost if you use moment in 100 places and only actually needs internationalization just that one place will ever pay for it this applies to all functions all the core needs to do is store plain date object and some getters is everything you do just pass unix time from the server you can just have unixtime parser do you only ever validate dates on the server you can skip on any and all validation etc it effectively as light as you building your own specialized helpers and much like projects like gulp postcss and so on the community can contribute easily to it though easily maintainable chunks and in this way momentjs can once again be called lightweight javascript date library https web archive org web 20111214102140 http momentjs com >>>enhancement
tojson and toisostring does not handle weeks `moment duration p1w tojson returns `p7d` and would like it to return `p1w` instead this shold be according to the iso spec even if could understand that we need to set specific setting for this is there way to do this or will have to add rather ugly hack to accomplish this myself >>>enhancement
perf use faster form of copying dates across the board improvement reference http jsperf com date copy constructor didn expect this to make so much of difference but here we are presume `moment` always gets `config` object where d` is date certainly seems to be the case and no tests failed results of `grunt test update index benchmark` before after >>>performance
moment with locales custom js uses last defined locale by default for example run `grunt transpile fr ru` then load up moment and start using it expected like previous releases the english locale is manually set after all locales are defined `moment format llll formats in english actual `moment format llll doesn format in english >>>bug high_priority
consider zone formatting token for normalizing 00 00 to originally moment moment timezone 213 it would be nice to have formatting token that already had this behavior perhaps `zzz` the intended behavior is that if the offset is 00 00` that it outputs `z` otherwise it would output the offset we might also consider variants where `zzz` has colon and `zzzz` does not >>>enhancement
moment min returns different results depending on the order if try to get the min of two moments one of which is invalid then the result get depends on the order in which specify the moments not sure what the expected behavior should be but what expected is something like this >>>bug
incorrect diff in days the difference in days is incorrect when running the snippet below and is returning moment 1900 04 01t00 00 00 000z diff moment 1900 03 31t00 00 00 000z days noticed this when the two lines of code below were both returning 89 moment 1900 03 31t00 00 00 000z diff moment 1900 01 01t00 00 00 000z days moment 1900 04 01t00 00 00 000z diff moment 1900 01 01t00 00 00 000z days any date comparisons that start before or on 1900 03 31t00 00 00 000z and on or after 1900 04 01t00 00 00 000z are then out by one day >>>timezones
add constructor argument to the deprecation warning feel it would be helpful if the 1407 deprecation warning printed to the console also indicated the failing argument passed to the constructor particularly for cases where `moment js` is minified in production build and debugging is not readily available would guess this would be changing `warn msg https github com moment moment blob ce233cecf3d07aa15869a1db0fd8a8c43efccfcd moment js l722 to also print the constructor argument passed but it not clear what effect that may have on other deprecation warnings beers >>>enhancement up-for-grabs
invalid modified moments should not return true in `issame` hi noticed something odd cake >>>bug
firefox and chrome adds day differently am using macosx 10 chrome version 42 2311 90 64 bit and firefox nightly 40 0a1 2015 04 29 my computer timezone is set to brasilia standard time city so paulo brazil the result of adding one day to some dates in the months of october is causing bug in firefox that affects calendar widget am using see https github com gpbl react day picker issues 18 here is simplified test case the output on chrome and the output on firefox >>>timezones troubleshooting
html time element use case be good if there was canonical example how to use it in conjunction with uses of https html spec whatwg org multipage semantics html the time element for example is there non jquery example that simply presents any time element with datetime defined in web page something better than my own view source http bus dabase com >>>documentation
change malay language code to comply ios639 according to iso 639 malay language code tag is ms please refer here http www loc gov standards iso639 php code list php >>>language
there doesn seem to be way to handle either or digit years feel that the following snippet moment 23 14 yyyy ought to return the date `2014 04 23` using iso for the avoidance of doubt but instead it returns `0014 04 23` which is pretty unlikely to have been what the user intended the opposite way round moment 23 2014 yy gives you `2020 04 23` which isn likely to have been what the user meant either to maintain backwards compatibility perhaps there should be another format specifier single `y` that doesn care whether it gets digit year or digit year and returns something sensible either way want to be able to parse the user input and not care whether they used digit year or digit year and use some sensible rules to return the date the user expected >>>enhancement todo
support alternate clock sources it would be nice feature if the source of current time was pluggable rather than always obtained from `new date there should be simple function that can be overwritten to provide custom functionality for example might want to get the current time from server rather than trusting the client clock it would be helpful during unit tests to set up fake clock with fixed values envision an interface similar to this seems like it would be very easy to implement thoughts >>>new_feature
create moment with customlanguages is failing on the following command works grunt uglify embedlocales embedlocales pt running uglify main uglify task files created running uglify customlocales uglify task file created running embedlocales task done without errors but on 10 using the same command returns the following running embedlocales task warning cannot read property targetlocales of undefined use force to continue using force does not create moment with customlanguages>>>build/release documentation
add dates to changelog just minor request start adding dates next to the version numbers in https github com moment moment blob develop changelog md can be helpful when you know roughly when you last upgraded but don remember version numbers >>>documentation
addregextoken androd stock browser reports typeof regex object as function and so its added to regexes array by addregextoken and tried to be called as function which fails and whole moment parsing from valid iso string fails heard there are some browsers that also report typeof regex object as function http stackoverflow com questions 5054352 why use typeof for identifying function so this needs to be fixed function addregextoken token regex strictregex regexes token typeof regex function regex function isstrict return isstrict strictregex strictregex regex >>>bug
pass duration to relativetime formatting handlers this gives more flexibility to do things like days and hours ago for example instead of the current days ago of course the parameter is completely optional and doesn disturb anything else thank you in advance >>>enhancement
please do not unpublish old versions from the npm registry hi just noticed that moment `2 10 0` and `2 10 1` do not longer exist in the npm registry suspect it is because you unpublished them from the registry please don do that because it might break some workflows `npm shrinkwrap` perhaps you can use `npm deprecate` instead >>>build/release
test failed add and subtract add across dst 1957 client info add and subtract add across dst 1957 expected at least one assertion but none were run call expect to accept zero assertions >>>troubleshooting unit_test_failed
tests failed diff diff across dst 2021 17 diff diff across dst 2021 19 client info diff diff across dst 2021 17 month diff across dst lower bound diff diff across dst 2021 19 year diff across dst lower bound >>>troubleshooting unit_test_failed
floating point days in durations are trouble seeing some surprising behavior adding subtracting partial day duration to moment examining the actual dates subtracting halfday subtracts full day and adding halfday adds nothing doing the computation with halfday as ms produces the correct result the momentjs code is pretty opaque in this regard is this expected behavior >>>enhancement
tests failed utcoffset zone to local client info utcoffset zone to local keeplocaltime true 349 25 utcoffset 12 00 to local failed to keep local time utcoffset zone to local keeplocaltime true 349 26 utcoffset 13 00 to local failed to keep local time utcoffset zone to local keeplocaltime true 349 27 utcoffset 14 00 to local failed to keep local time zoneswitching zone to local keeplocaltime true 388 zone 12 00 to local failed to keep local time >>>troubleshooting unit_test_failed
performance improve parsing of moments from valid date objects edit es6 stuff is merged so this pr needs to get rewritten do plan on getting to it but not immediately for explanation of some of these changes ll discuss my numbers doing this from memory and can re measure if necessary but my cpu profile in chrome started at 400ms and after this suite of changes the profile was reduced to 200ms https github com brianwyantora moment commit 6bc5d2e075b0cad32083ea5209bb6ac695029aa7 this change resulted in reduction of about 70ms on my profile basically in my use case never send invalid dates from server to client so while might do some work on the first date sent from the server to make sure the browser can parse it once ve done that won call `moment fn isvalid generating the parsing flags takes notable amount of time so deferring that generation is significant help https github com brianwyantora moment commit 928e068349c10d90bceb5266727e016f0cda1259 this change resulted in reduction of about 60ms on my profile this change might look wrong on first glance but notice `makemoment` is only called from two places the public constructors and will pass the config object through `new moment config `moment` already clones the date so doing the same in `makemoment` is just duplicating work unnecessarily >>>performance
dddd parsing and defaults uses start of year instead of something closer to current time var moment thursday 30pm dddd mm en var d2 format yyyy do mmmm dddd mm produces 2015 1st january thursday 30 pm which found surprising given the documentation for defaults is this intended behaviour >>>bug
test failed locale zh cn calendar next week 2321 client info locale zh cn calendar next week 2321 today days beginning of day >>>unit_test_failed
test failed locale zh cn calendar next week 2321 client info locale zh cn calendar next week 2321 today days beginning of day >>>unit_test_failed
test failed locale zh cn calendar next week 2321 client info locale zh cn calendar next week 2321 today days beginning of day >>>unit_test_failed
moment set should accept date formatting have database that is storing absolute times in the format `hh mm` when transforming the relative timings to date specific times have to do the following sure it works and it not such big deal but it would be nice if could use `set` as follows >>>new_feature
should moment duration constructor support iso8601 this works if the constructor specifically supports this can it be added to the documentation >>>documentation
fromnow wrong if relativetimethreshold gets changed take look at this fiddle http jsbin com wuxitufaqe edit js console would expect the third output minutes ago to be minute ago instead is this bug should can fix it >>>bug
problems with momentjs in meteor cc dandv both myself and another meteor momentjs user have encountered problems with the most recent meteor upgrade here the existing so http stackoverflow com questions 29135488 momentjs with meteor doesnt seem to work on server side 29135787 >>>troubleshooting
tests failed duration json stringify duration 111 duration json stringify duration 111 locale el parse meridiem 868 locale el parse meridiem 868 locale el parse meridiem 868 locale el parse meridiem 868 13 locale el parse meridiem 868 17 locale el parse meridiem 868 21 locale el parse meridiem 868 25 client info duration json stringify duration 111 expected assertions ran duration json stringify duration 111 >>>unit_test_failed
zh cn zh tw short date format match with cldr hi folks know there has been some discussion around the possible adoption of cldr data in moment js but until that happens would it be possible to make some changes to bring more consistency specifically it would be great if the short date format for zh cn and zh tw were updated to yy mm dd 15 10 thanks leandro reis https github com moment moment issues 315 >>>language
parsing months in pl locale in strict mode hello this is the issue stumbled upon http jsfiddle net oo0v17xy in polish language there are actually two ways of writing month both correct 22 march could be 22 marca or 22 marzec and both should be considered valid in strict mode parsing as can see those variations are already defined in moment js codebase for polish locale but not taken into account while parsing >>>language
how can force format mmmm to use accusative form in russian language html layout http imgur com klytdwj png have html layout shown above and want format month in accusative form so in this example it should show instead of checked source code for ru locale and found this code can we somehow change regexp here or add param to `format` method >>>language
79 tests failed firefox 36 windows client info preparsepostformat calendar day 271 yesterday at the same time locale af calendar day 428 yesterday at the same time locale ar ma calendar day 452 yesterday at the same time locale ar sa calendar day 476 yesterday at the same time locale ar tn calendar day 500 yesterday at the same time locale ar calendar day 524 yesterday at the same time locale az calendar day 548 yesterday at the same time locale be calendar day 574 yesterday at the same time locale bg calendar day 598 yesterday at the same time locale bn calendar day 622 yesterday at the same time locale bo calendar day 647 yesterday at the same time locale br calendar day 672 yesterday at the same time locale bs calendar day 689 yesterday at the same time locale ca calendar day 713 yesterday at the same time locale cs calendar day 738 yesterday at the same time locale cv calendar day 763 yesterday at the same time locale cy same day 786 yesterday at the same time locale de at calendar day 829 yesterday at the same time locale de calendar day 852 yesterday at the same time locale el calendar day 877 yesterday at the same time locale en au calendar day 901 yesterday at the same time locale en ca calendar day 925 yesterday at the same time locale en gb calendar day 949 yesterday at the same time locale en calendar day 973 yesterday at the same time locale eo calendar day 997 yesterday at the same time locale es calendar day 1021 yesterday at the same time locale et calendar day 1045 yesterday at the same time locale eu calendar day 1069 yesterday at the same time locale fa calendar day 1093 yesterday at the same time locale fi calendar day 1117 yesterday at the same time locale fr ca same day 1160 yesterday at the same time locale fr same day 1183 yesterday at the same time locale fy calendar day 1207 yesterday at the same time locale gl calendar day 1232 yesterday at the same time locale he calendar day 1256 yesterday at the same time locale hi calendar day 1280 yesterday at the same time locale hr calendar day 1306 yesterday at the same time locale hu calendar day 1331 yesterday at the same time locale hy am calendar day 1360 yesterday at the same time locale id calendar day 1383 yesterday at the same time locale is calendar day 1408 yesterday at the same time locale it calendar day 1431 yesterday at the same time locale ja calendar day 1454 yesterday at the same time locale ka calendar day 1478 locale km calendar day 1502 yesterday at the same time locale ko calendar day 1527 yesterday at the same time locale lt calendar day 1563 yesterday at the same time locale lv calendar day 1587 yesterday at the same time locale mk calendar day 1611 yesterday at the same time locale ml calendar day 1635 yesterday at the same time locale mr calendar day 1660 yesterday at the same time locale ms my calendar day 1686 kelmarin pada waktu yang sama locale my calendar day 1711 locale nb calendar day 1735 yesterday at the same time locale ne calendar day 1759 yesterday at the same time locale nl calendar day 1785 yesterday at the same time locale nn calendar day 1810 yesterday at the same time locale pl calendar day 1834 yesterday at the same time locale pt br calendar day 1857 yesterday at the same time locale pt calendar day 1880 yesterday at the same time locale ro calendar day 1904 yesterday at the same time locale ru calendar day 1933 yesterday at the same time locale sk calendar day 1958 yesterday at the same time locale sl calendar day 1983 yesterday at the same time locale sq calendar day 2008 yesterday at the same time locale sr cyrl calendar day 2032 yesterday at the same time locale sr calendar day 2056 yesterday at the same time locale sv calendar day 2080 yesterday at the same time locale ta calendar day 2104 02 00 locale th calendar day 2128 yesterday at the same time locale tl ph same day 2151 yesterday at the same time locale tr calendar day 2175 yesterday at the same time locale tzm latn calendar day 2199 yesterday at the same time locale tzm calendar day 2223 yesterday at the same time locale uk calendar day 2248 yesterday at the same time locale uz calendar day 2272 yesterday at the same time locale vi calendar day 2296 yesterday at the same time locale zh cn calendar day 2319 yesterday at the same time locale zh tw calendar day 2345 yesterday at the same time >>>unit_test_failed
test failed utc utc and local 307 client info utc utc and local 307 the hours should be correct for local >>>unit_test_failed
test failed locale zh cn calendar next week 2321 client info locale zh cn calendar next week 2321 today days beginning of day >>>unit_test_failed
corrected month names for croatian locale>>>language
test failed locale zh cn calendar next week 2321 client info locale zh cn calendar next week 2321 today days beginning of day >>>unit_test_failed
cloning moment object changes date using the clone method is causing the date to change in safari this is an example of the code am using this is what it returns am doing something horribly wrong or is something wrong with moment js >>>troubleshooting
test failed utc utc and local 307 client info utc utc and local 307 the hours should be correct for local >>>unit_test_failed
test failed locale zh cn calendar next week 2321 client info locale zh cn calendar next week 2321 today days beginning of day >>>unit_test_failed
test failed locale zh cn calendar next week 2321 client info locale zh cn calendar next week 2321 today days beginning of day >>>unit_test_failed
tests failed diff diff across dst 66 17 diff diff across dst 66 19 client info diff diff across dst 66 17 month diff across dst lower bound diff diff across dst 66 19 year diff across dst lower bound >>>unit_test_failed
moment with locale return nothing in strict mode parsing var moment 26 2015 dd mmmm yyyy true is undefined without strict mode its ok >>>bug language
same length for weekdaysmin parts italian making timetables with weekdaysmin particles but they look weird since not all the days are same sized making all of them two chars long >>>es6_rework language
same length for weekdaysmin parts polish just tried to use the short polish names and noticed that min polish weekday names haven the same length six of them are two chars long while sunday corresponds to polish colleagues say there should be one more also make all short names chars long agree >>>language
omitting dot at day names omitting dot at day names>>>language
test failed utc utc and local 307 client info utc utc and local 307 the hours should be correct for local >>>unit_test_failed
added swahili locale>>>language
test failed utc utc and local 307 client info utc utc and local 307 the hours 13 should be correct for local >>>unit_test_failed
moment utc is missing ismoment obj developing component and would like to have one reference to moment that can use in all of my code it calendar that depends on every moment being moment utc having one reference prevents calls to moment without utc to creep in but moment utc does not have ismoment function and perhaps others so have to differentiate and watch my step >>>enhancement todo
fix turkish calendar translation simple change proposal for better calendar time translations there are changes introduced in calendar time translation before this commit translations for calendar time for next week was sort of broken say on monday if you would get `moment day calendar to get the next friday you would get something like next week friday at instead of next friday at this commit changes it to this friday at before this commit translations for last week was similar to last week friday at and this commit changes it to last friday at it suits better with turkish language >>>language
atom shell html script moment js is undefined `uncaught referenceerror moment is not defined` appears in the devtools console when try to use moment within an html page via atom shell https github com atom atom shell node js chromium ve tried including the js with these locations oddly other libs like jquery and tweenlite work perfectly fine if load the html file via the browser moment works like it should so assuming there is some sort of conflict going on or for some reason in atom shell it has been defined differently still very new to atom shell it seems to let you require node modules via js in the browser html end can probably just use the node package for moment though curious what causing the issue would it be similar to the require js one described on the docs >>>troubleshooting
update moment js small change avoids minification bugs >>>todo
test failed utc utc and local 307 client info utc utc and local 307 the hours should be correct for local >>>unit_test_failed
fix seconds in relative time in pt br locale fix relative time so that means few seconds instead of just seconds in pt br locale >>>es6_rework language
tests failed create string with format years 32 weekyear weekday first day of week sunday dow 353 weeks count years with iso week 53 376 client info create string with format years 32 70 1970 weekyear weekday first day of week sunday dow 353 jan 1970 is thursday 4th day weeks count years with iso week 53 376 should have 71 years in 400 year cycle with iso week 53 >>>troubleshooting unit_test_failed
strict parser failed on month abbreviation with trailing period parser can not deal with trailing period in the token>>>bug up-for-grabs
tests failed diff diff across dst 66 17 diff diff across dst 66 19 client info diff diff across dst 66 17 month diff across dst lower bound diff diff across dst 66 19 year diff across dst lower bound >>>unit_test_failed
test failed utc utc and local 307 client info utc utc and local 307 the hours should be correct for local >>>unit_test_failed
test failed utc utc and local 307 client info utc utc and local 307 the hours should be correct for local >>>troubleshooting unit_test_failed
locale ko update some spacing and awkward phrases there was some spacing problems like oneminute and little awkward pharses so fixed them tests included >>>es6_rework language
create nds nl js translation for the nds nl wiki >>>language needs_tests
support intl support there is finally an official javascript way to do localization its called intl https developer mozilla org en us docs web javascript reference global objects intl and its pretty well supported caniuse http caniuse com search intl we might add an `moment fn intl` that accepts tokens and coverts them to `options` argument of `tolocale date time string` we can even fall back to moment locales in case the returned string is empty >>>enhancement
duration can be in inconsistent state after subtraction haven explored to see all the circumstances that can cause it but notice that duration fields do not necessarily get normalized after subtraction depending on how you do the same subtraction conceptually you get different results here fiddle to see the issue in action http jsfiddle net 9cs8o1v1 test that would break due to this bug is as you can see in the fiddle `subtract1 months yields 5` while `subtract2 months yields `7` >>>bug
control over isbetween exclusivity exclusivity behavior the isbetween method checks if moment is between two others but not if it equal to either of the comparison times think we need an inclusive argument although with the third argument currently being the units it may be best to create separate isbetweeninclusive method thanks>>>enhancement up-for-grabs
longdateformat does not fully convert lll and llll tokens use moment in my bootstrap datepicker plugin user brought this to my attention shouldn `lll` and `llll` tokens get converted to include the time format as it is `lll` returns `mmmm yyyy lt` instead of the expected `mmmm yyyy mm a` http jsfiddle net eonasdan 5ld0yclr >>>bug
duration formatting when using the `moment duration days 67 toisostring portion of this library am noticing that the isostring that is formatted is `p2m7d` but what need is `p67d` which is more accurate representation of what need is there anyway using moment js to achieve this maybe through some kind of passed in option >>>enhancement
test failed utc utc and local 307 client info utc utc and local 307 the hours should be correct for local >>>unit_test_failed
localized mm dd yy in some use cases like in html table it might be better to use two digit year to save some space it will be useful to have localized mm dd yy in addition to the existing dd mm yyyy something like ly or lsy could be used thanks>>>enhancement up-for-grabs
moment js locale timezone on atmosphere js could you also provide for meteor an official moment js package which includes all translations locale and mabye also seperate package for moment timezone it would be nice to find all popular moment packages on your atmosphere channel https atmospherejs com momentjs>>>up-for-grabs
updated lv locale for better phrasing in my opinion current phrasing for from and fromnow methods was little bit awkward therefore tried to change it >>>language
incorrect fallback value stumbled across this while browsing the code https github com moment moment blob moment js l1167 specifically at the end of `tzchunk` shouldn it be it doesn actually matter because but it seems like mistake >>>bug
does not parse iso8601 hh iso8601 http en wikipedia org wiki iso 8601 allows 01` in addition to 0100` and 01 00` as timezone offset is there any reason why this isn parsed by moment js it is trivial enough to fix but perhaps there are other considerations unaware of >>>bug
moment isdstshifted not reporting expected values having issues with `isdstshifted working as expected please see the following fiddle http jsfiddle net natewittstock s2uf18ea my output expect the calls with `2015 03 08 30` to show `true` for calls to `isdstshifted seeing this issue on nodejs v0 10 35 chrome 39 2171 95 64 bit firefox 34 all on mac os 10 10 reproducible across varying systems of relatively the same spec either os 10 or 10 10 latest ish of chrome as confirmed by my co workers my system timezone is being set automatically by the apple preference pane and reports time zone pacific standard time and closest city portland or united states can confirm the javascript date object thinks in pst via let me know if there any other information can give you thanks >>>bug
hh token allows which should be 12 want to validate if hh mm time input is valid or not but moment 00 59 hh mm true isvalid returns true it should be false >>>bug
test failed isbefore is before day 175 10 client info isbefore is before day 175 10 exact end of day >>>troubleshooting unit_test_failed
tests failed create first century 60 create first century 60 create first century 60 weeks count years with iso week 53 336 client info create first century 60 year ad create first century 60 year ad create first century 60 year ad weeks count years with iso week 53 336 should have 71 years in 400 year cycle with iso week 53 >>>unit_test_failed
test failed create parsing week and weekday information 65 44 client info create parsing week and weekday information 65 44 iso week keeps this year >>>unit_test_failed
talossan tzl translation hello together with iust canun created talossan tzl translation of moment js it is almost finished but there is one problem the relative time sentences don fit in the variables they differ per time future past could somebody explain to me how can implement the time sentences the missing future sentences in few seconds osprei viensas secunds in minute osprei mut in minutes osprei muts in an hour osprei ora in hours osprei oras in day osprei ziua in days osprei ziuas in month osprei mes in months osprei mesen in year osprei ar in years osprei ars the missing past sentences few seconds ago ja iensas secunds minute ago ja iens mut minutes ago ja muts an hour ago ja iensa ora hours ago ja oras day ago ja iensa ziua days ago ja ziuas month ago ja iens mes months ago ja mesen year ago ja iens ar years ago ja ars>>>es6_rework language
added to object method and added test for to array as well >>>es6_rework
add current week for zh tw the day after tomorrow was always determined as next week so we should subtract startofweek time from current time and check it is larger then week >>>language
incorrect `weekofyear` for certain dow doy combos it appears the week calculation algorithm isn generic enough as it seems to handle certain dow doy combinations incorrectly assume something bit off in the `weekofyear` moment moment blob 98164 moment js l1737 1756 function unless doing something wrong >>>bug
tests failed diff diff between utc and local 80 diff diff between utc and local 80 client info diff diff between utc and local 80 month diff diff diff between utc and local 80 week diff >>>unit_test_failed
error thrown for moment duration null how should moment duration handle nulls currently `moment duration undefined creates valid duration object whereas `moment duration null throws the following error cannot use in operator to search for from in null is this the correct behaviour >>>bug
fromnow returns invalid date if invalid 2079 >>>needs_tests
enhancement isbetween there isbefore isafter and issame but missing an isbetween >>>enhancement
tests failed locale el parse meridiem 804 locale el parse meridiem 804 locale el parse meridiem 804 locale el parse meridiem 804 locale el parse meridiem 804 10 client info locale el parse meridiem 804 25 10 should be parsed as valid locale el parse meridiem 804 10 true locale el parse meridiem 804 10 true locale el parse meridiem 804 10 true locale el parse meridiem 804 10 10 true >>>unit_test_failed
fromnow letting window open on firefox in the background cause unresponsive javascript error am calling moment datestring fromnow every 30 seconds to update the time since in firefox and leave it in the background after approximately 10 minutes observe the following error pop up script on this page may be busy or it may have stopped responding you can stop the script now open the script in the debugger or let the script continue script js moment js 599 the issue seems similar to the one listed here but in my case there is no crash but unresponsive script error https code google com chromium issues detail id 336129 versions used moment js version moment timezone js version 2>>>troubleshooting
tests failed diff diff between utc and local 80 diff diff between utc and local 80 client info diff diff between utc and local 80 month diff diff diff between utc and local 80 week diff >>>unit_test_failed
tests failed diff diff between utc and local 80 diff diff between utc and local 80 client info diff diff between utc and local 80 month diff diff diff between utc and local 80 week diff >>>unit_test_failed
moment calendar month think it would be great addition to add nextmonth and lastmonth to the `locale calendar` extending it like this >>>enhancement
add space when using `fromnow to display space between english word and chinese character will make better ux for chinese users and most of the websites in china do like so >>>needs_tests
croatian months hr corrected typo months sjeanj to sijeanj and vel to velj lj can not be splitted reference https hr wikipedia org wiki kategorija mjeseci godini>>>needs_tests
setting iso week year sometimes results in wrong year moment 2012 12 31t00 00 00 000z isoweekyear 2013 isoweekyear 2013 moment 2012 12 31t00 00 00 000z isoweekyear 2012 isoweekyear 2011 moment 2012 12 31t00 00 00 000z isoweekyear 2011 isoweekyear 2010 moment 2012 12 31t00 00 00 000z isoweekyear 2010 isoweekyear 2009 moment 2012 12 31t00 00 00 000z isoweekyear 2019 isoweekyear 2009>>>bug high_priority
466 tests failed calendar day daylight savings time client info preparsepostformat calendar day 264 today at the same time preparsepostformat calendar day 264 now plus 25 min preparsepostformat calendar day 264 now plus hour preparsepostformat calendar day 264 tomorrow at the same time preparsepostformat calendar day 264 now minus hour preparsepostformat calendar day 264 yesterday at the same time locale af calendar day 381 today at the same time locale af calendar day 381 now plus 25 min locale af calendar day 381 now plus hour locale af calendar day 381 tomorrow at the same time locale af calendar day 381 now minus hour locale af calendar day 381 yesterday at the same time locale ar ma calendar day 402 today at the same time locale ar ma calendar day 402 now plus 25 min locale ar ma calendar day 402 now plus hour locale ar ma calendar day 402 tomorrow at the same time locale ar ma calendar day 402 now minus hour locale ar ma calendar day 402 yesterday at the same time locale ar sa calendar day 423 today at the same time locale ar sa calendar day 423 now plus 25 min locale ar sa calendar day 423 now plus hour locale ar sa calendar day 423 tomorrow at the same time locale ar sa calendar day 423 now minus hour locale ar sa calendar day 423 yesterday at the same time locale ar calendar day 444 today at the same time locale ar calendar day 444 now plus 25 min locale ar calendar day 444 now plus hour locale ar calendar day 444 tomorrow at the same time locale ar calendar day 444 now minus hour locale ar calendar day 444 yesterday at the same time locale az calendar day 465 today at the same time locale az calendar day 465 now plus 25 min locale az calendar day 465 now plus hour locale az calendar day 465 tomorrow at the same time locale az calendar day 465 now minus hour locale az calendar day 465 yesterday at the same time locale be calendar day 488 today at the same time locale be calendar day 488 now plus 25 min locale be calendar day 488 now plus hour locale be calendar day 488 tomorrow at the same time locale be calendar day 488 now minus hour locale be calendar day 488 yesterday at the same time locale bg calendar day 509 today at the same time locale bg calendar day 509 now plus 25 min locale bg calendar day 509 now plus hour locale bg calendar day 509 tomorrow at the same time locale bg calendar day 509 now minus hour locale bg calendar day 509 yesterday at the same time locale bn calendar day 530 today at the same time locale bn calendar day 530 now plus 25 min locale bn calendar day 530 now plus hour locale bn calendar day 530 tomorrow at the same time locale bn calendar day 530 now minus hour locale bn calendar day 530 yesterday at the same time locale bo calendar day 552 today at the same time locale bo calendar day 552 now plus 25 min locale bo calendar day 552 now plus hour locale bo calendar day 552 tomorrow at the same time locale bo calendar day 552 now minus hour locale bo calendar day 552 yesterday at the same time locale br calendar day 574 today at the same time locale br calendar day 574 now plus 25 min locale br calendar day 574 now plus hour locale br calendar day 574 tomorrow at the same time locale br calendar day 574 now minus hour locale br calendar day 574 yesterday at the same time locale bs calendar day 588 today at the same time locale bs calendar day 588 now plus 25 min locale bs calendar day 588 now plus hour locale bs calendar day 588 tomorrow at the same time locale bs calendar day 588 now minus hour locale bs calendar day 588 yesterday at the same time locale ca calendar day 608 today at the same time locale ca calendar day 608 now plus 25 min locale ca calendar day 608 now plus hour locale ca calendar day 608 tomorrow at the same time locale ca calendar day 608 tomorrow minus hour locale ca calendar day 608 now minus hour locale ca calendar day 608 yesterday at the same time locale cs calendar day 630 today at the same time locale cs calendar day 630 now plus 25 min locale cs calendar day 630 now plus hour locale cs calendar day 630 tomorrow at the same time locale cs calendar day 630 now minus hour locale cs calendar day 630 yesterday at the same time locale cv calendar day 652 today at the same time locale cv calendar day 652 now plus 25 min locale cv calendar day 652 now plus hour locale cv calendar day 652 tomorrow at the same time locale cv calendar day 652 now minus hour locale cv calendar day 652 yesterday at the same time locale cy same day 672 today at the same time locale cy same day 672 now plus 25 min locale cy same day 672 now plus hour locale cy same day 672 tomorrow at the same time locale cy same day 672 now minus hour locale cy same day 672 yesterday at the same time locale de at calendar day 709 today at the same time locale de at calendar day 709 now plus 25 min locale de at calendar day 709 now plus hour locale de at calendar day 709 tomorrow at the same time locale de at calendar day 709 now minus hour locale de at calendar day 709 yesterday at the same time locale de calendar day 729 today at the same time locale de calendar day 729 now plus 25 min locale de calendar day 729 now plus hour locale de calendar day 729 tomorrow at the same time locale de calendar day 729 now minus hour locale de calendar day 729 yesterday at the same time locale el calendar day 751 today at the same time locale el calendar day 751 now plus 25 min locale el calendar day 751 now plus hour locale el calendar day 751 tomorrow at the same time locale el calendar day 751 now minus hour locale el calendar day 751 yesterday at the same time locale en au calendar day 772 today at the same time locale en au calendar day 772 now plus 25 min locale en au calendar day 772 now plus hour locale en au calendar day 772 tomorrow at the same time locale en au calendar day 772 now minus hour locale en au calendar day 772 yesterday at the same time locale en ca calendar day 793 today at the same time locale en ca calendar day 793 now plus 25 min locale en ca calendar day 793 now plus hour locale en ca calendar day 793 tomorrow at the same time locale en ca calendar day 793 now minus hour locale en ca calendar day 793 yesterday at the same time locale en gb calendar day 814 today at the same time locale en gb calendar day 814 now plus 25 min locale en gb calendar day 814 now plus hour locale en gb calendar day 814 tomorrow at the same time locale en gb calendar day 814 now minus hour locale en gb calendar day 814 yesterday at the same time locale en calendar day 835 today at the same time locale en calendar day 835 now plus 25 min locale en calendar day 835 now plus hour locale en calendar day 835 tomorrow at the same time locale en calendar day 835 now minus hour locale en calendar day 835 yesterday at the same time locale eo calendar day 856 today at the same time locale eo calendar day 856 now plus 25 min locale eo calendar day 856 now plus hour locale eo calendar day 856 tomorrow at the same time locale eo calendar day 856 now minus hour locale eo calendar day 856 yesterday at the same time locale es calendar day 877 today at the same time locale es calendar day 877 now plus 25 min locale es calendar day 877 now plus hour locale es calendar day 877 tomorrow at the same time locale es calendar day 877 tomorrow minus hour locale es calendar day 877 now minus hour locale es calendar day 877 yesterday at the same time locale et calendar day 898 today at the same time locale et calendar day 898 now plus 25 min locale et calendar day 898 now plus hour locale et calendar day 898 tomorrow at the same time locale et calendar day 898 now minus hour locale et calendar day 898 yesterday at the same time locale eu calendar day 919 today at the same time locale eu calendar day 919 now plus 25 min locale eu calendar day 919 now plus hour locale eu calendar day 919 tomorrow at the same time locale eu calendar day 919 now minus hour locale eu calendar day 919 yesterday at the same time locale fa calendar day 940 today at the same time locale fa calendar day 940 now plus 25 min locale fa calendar day 940 now plus hour locale fa calendar day 940 tomorrow at the same time locale fa calendar day 940 now minus hour locale fa calendar day 940 yesterday at the same time locale fi calendar day 961 today at the same time locale fi calendar day 961 now plus 25 min locale fi calendar day 961 now plus hour locale fi calendar day 961 tomorrow at the same time locale fi calendar day 961 now minus hour locale fi calendar day 961 yesterday at the same time locale fr ca same day 998 today at the same time locale fr ca same day 998 now plus 25 min locale fr ca same day 998 now plus hour locale fr ca same day 998 tomorrow at the same time locale fr ca same day 998 now minus hour locale fr ca same day 998 yesterday at the same time locale fr same day 1018 today at the same time locale fr same day 1018 now plus 25 min locale fr same day 1018 now plus hour locale fr same day 1018 tomorrow at the same time locale fr same day 1018 now minus hour locale fr same day 1018 yesterday at the same time locale gl calendar day 1038 today at the same time locale gl calendar day 1038 now plus 25 min locale gl calendar day 1038 now plus hour locale gl calendar day 1038 tomorrow at the same time locale gl calendar day 1038 tomorrow minus hour locale gl calendar day 1038 now minus hour locale gl calendar day 1038 yesterday at the same time locale he calendar day 1059 today at the same time locale he calendar day 1059 now plus 25 min locale he calendar day 1059 now plus hour locale he calendar day 1059 tomorrow at the same time locale he calendar day 1059 now minus hour locale he calendar day 1059 yesterday at the same time locale hi calendar day 1080 today at the same time locale hi calendar day 1080 now plus 25 min locale hi calendar day 1080 now plus hour locale hi calendar day 1080 tomorrow at the same time locale hi calendar day 1080 now minus hour locale hi calendar day 1080 yesterday at the same time locale hr calendar day 1102 today at the same time locale hr calendar day 1102 now plus 25 min locale hr calendar day 1102 now plus hour locale hr calendar day 1102 tomorrow at the same time locale hr calendar day 1102 now minus hour locale hr calendar day 1102 yesterday at the same time locale hu calendar day 1124 today at the same time locale hu calendar day 1124 now plus 25 min locale hu calendar day 1124 now plus hour locale hu calendar day 1124 tomorrow at the same time locale hu calendar day 1124 now minus hour locale hu calendar day 1124 yesterday at the same time locale hy am calendar day 1150 today at the same time locale hy am calendar day 1150 now plus 25 min locale hy am calendar day 1150 now plus hour locale hy am calendar day 1150 tomorrow at the same time locale hy am calendar day 1150 now minus hour locale hy am calendar day 1150 yesterday at the same time locale id calendar day 1170 today at the same time locale id calendar day 1170 now plus 25 min locale id calendar day 1170 now plus hour locale id calendar day 1170 tomorrow at the same time locale id calendar day 1170 now minus hour locale id calendar day 1170 yesterday at the same time locale is calendar day 1191 today at the same time locale is calendar day 1191 now plus 25 min locale is calendar day 1191 now plus hour locale is calendar day 1191 tomorrow at the same time locale is calendar day 1191 now minus hour locale is calendar day 1191 yesterday at the same time locale it calendar day 1211 today at the same time locale it calendar day 1211 now plus 25 min locale it calendar day 1211 now plus hour locale it calendar day 1211 tomorrow at the same time locale it calendar day 1211 now minus hour locale it calendar day 1211 yesterday at the same time locale ja calendar day 1231 today at the same time locale ja calendar day 1231 now plus 25 min locale ja calendar day 1231 now plus hour locale ja calendar day 1231 tomorrow at the same time locale ja calendar day 1231 now minus hour locale ja calendar day 1231 yesterday at the same time locale ka calendar day 1252 locale ka calendar day 1252 25 locale ka calendar day 1252 locale ka calendar day 1252 locale ka calendar day 1252 locale ka calendar day 1252 locale km calendar day 1273 today at the same time locale km calendar day 1273 now plus 25 min locale km calendar day 1273 now plus hour locale km calendar day 1273 tomorrow at the same time locale km calendar day 1273 now minus hour locale km calendar day 1273 yesterday at the same time locale ko calendar day 1295 today at the same time locale ko calendar day 1295 now plus 25 min locale ko calendar day 1295 now plus hour locale ko calendar day 1295 tomorrow at the same time locale ko calendar day 1295 now minus hour locale ko calendar day 1295 yesterday at the same time locale lt calendar day 1325 today at the same time locale lt calendar day 1325 now plus 25 min locale lt calendar day 1325 now plus hour locale lt calendar day 1325 tomorrow at the same time locale lt calendar day 1325 now minus hour locale lt calendar day 1325 yesterday at the same time locale lv calendar day 1346 today at the same time locale lv calendar day 1346 now plus 25 min locale lv calendar day 1346 now plus hour locale lv calendar day 1346 tomorrow at the same time locale lv calendar day 1346 now minus hour locale lv calendar day 1346 yesterday at the same time locale mk calendar day 1367 today at the same time locale mk calendar day 1367 now plus 25 min locale mk calendar day 1367 now plus hour locale mk calendar day 1367 tomorrow at the same time locale mk calendar day 1367 now minus hour locale mk calendar day 1367 yesterday at the same time locale ml calendar day 1388 today at the same time locale ml calendar day 1388 now plus 25 min locale ml calendar day 1388 now plus hour locale ml calendar day 1388 tomorrow at the same time locale ml calendar day 1388 now minus hour locale ml calendar day 1388 yesterday at the same time locale mr calendar day 1410 today at the same time locale mr calendar day 1410 now plus 25 min locale mr calendar day 1410 now plus hour locale mr calendar day 1410 tomorrow at the same time locale mr calendar day 1410 now minus hour locale mr calendar day 1410 yesterday at the same time locale ms my calendar day 1432 hari ini pada waktu yang sama locale ms my calendar day 1432 sekarang tambah 25 minit locale ms my calendar day 1432 sekarang tambah jam locale ms my calendar day 1432 esok pada waktu yang sama locale ms my calendar day 1432 sekarang tolak jam locale ms my calendar day 1432 kelmarin pada waktu yang sama locale my calendar day 1453 locale my calendar day 1453 locale my calendar day 1453 locale my calendar day 1453 locale my calendar day 1453 locale my calendar day 1453 locale nb calendar day 1474 today at the same time locale nb calendar day 1474 now plus 25 min locale nb calendar day 1474 now plus hour locale nb calendar day 1474 tomorrow at the same time locale nb calendar day 1474 now minus hour locale nb calendar day 1474 yesterday at the same time locale ne calendar day 1495 today at the same time locale ne calendar day 1495 now plus 25 min locale ne calendar day 1495 now plus hour locale ne calendar day 1495 tomorrow at the same time locale ne calendar day 1495 now minus hour locale ne calendar day 1495 yesterday at the same time locale nl calendar day 1517 today at the same time locale nl calendar day 1517 now plus 25 min locale nl calendar day 1517 now plus hour locale nl calendar day 1517 tomorrow at the same time locale nl calendar day 1517 now minus hour locale nl calendar day 1517 yesterday at the same time locale nn calendar day 1539 today at the same time locale nn calendar day 1539 now plus 25 min locale nn calendar day 1539 now plus hour locale nn calendar day 1539 tomorrow at the same time locale nn calendar day 1539 now minus hour locale nn calendar day 1539 yesterday at the same time locale pl calendar day 1560 today at the same time locale pl calendar day 1560 now plus 25 min locale pl calendar day 1560 now plus hour locale pl calendar day 1560 tomorrow at the same time locale pl calendar day 1560 now minus hour locale pl calendar day 1560 yesterday at the same time locale pt br calendar day 1580 today at the same time locale pt br calendar day 1580 now plus 25 min locale pt br calendar day 1580 now plus hour locale pt br calendar day 1580 tomorrow at the same time locale pt br calendar day 1580 now minus hour locale pt br calendar day 1580 yesterday at the same time locale pt calendar day 1600 today at the same time locale pt calendar day 1600 now plus 25 min locale pt calendar day 1600 now plus hour locale pt calendar day 1600 tomorrow at the same time locale pt calendar day 1600 now minus hour locale pt calendar day 1600 yesterday at the same time locale ro calendar day 1621 today at the same time locale ro calendar day 1621 now plus 25 min locale ro calendar day 1621 now plus hour locale ro calendar day 1621 tomorrow at the same time locale ro calendar day 1621 now minus hour locale ro calendar day 1621 yesterday at the same time locale ru calendar day 1647 today at the same time locale ru calendar day 1647 now plus 25 min locale ru calendar day 1647 now plus hour locale ru calendar day 1647 tomorrow at the same time locale ru calendar day 1647 now minus hour locale ru calendar day 1647 yesterday at the same time locale sk calendar day 1669 today at the same time locale sk calendar day 1669 now plus 25 min locale sk calendar day 1669 now plus hour locale sk calendar day 1669 tomorrow at the same time locale sk calendar day 1669 now minus hour locale sk calendar day 1669 yesterday at the same time locale sl calendar day 1691 today at the same time locale sl calendar day 1691 now plus 25 min locale sl calendar day 1691 now plus hour locale sl calendar day 1691 tomorrow at the same time locale sl calendar day 1691 now minus hour locale sl calendar day 1691 yesterday at the same time locale sq calendar day 1713 today at the same time locale sq calendar day 1713 now plus 25 min locale sq calendar day 1713 now plus hour locale sq calendar day 1713 tomorrow at the same time locale sq calendar day 1713 now minus hour locale sq calendar day 1713 yesterday at the same time locale sr cyrl calendar day 1734 today at the same time locale sr cyrl calendar day 1734 now plus 25 min locale sr cyrl calendar day 1734 now plus hour locale sr cyrl calendar day 1734 tomorrow at the same time locale sr cyrl calendar day 1734 now minus hour locale sr cyrl calendar day 1734 yesterday at the same time locale sr calendar day 1755 today at the same time locale sr calendar day 1755 now plus 25 min locale sr calendar day 1755 now plus hour locale sr calendar day 1755 tomorrow at the same time locale sr calendar day 1755 now minus hour locale sr calendar day 1755 yesterday at the same time locale sv calendar day 1776 today at the same time locale sv calendar day 1776 now plus 25 min locale sv calendar day 1776 now plus hour locale sv calendar day 1776 tomorrow at the same time locale sv calendar day 1776 now minus hour locale sv calendar day 1776 yesterday at the same time locale ta calendar day 1797 02 00 locale ta calendar day 1797 02 25 locale ta calendar day 1797 03 00 locale ta calendar day 1797 02 00 locale ta calendar day 1797 01 00 locale ta calendar day 1797 02 00 locale th calendar day 1817 today at the same time locale th calendar day 1817 now plus 25 min locale th calendar day 1817 now plus hour locale th calendar day 1817 tomorrow at the same time locale th calendar day 1817 now minus hour locale th calendar day 1817 yesterday at the same time locale tl ph same day 1837 today at the same time locale tl ph same day 1837 now plus 25 min locale tl ph same day 1837 now plus hour locale tl ph same day 1837 tomorrow at the same time locale tl ph same day 1837 now minus hour locale tl ph same day 1837 yesterday at the same time locale tr calendar day 1858 today at the same time locale tr calendar day 1858 now plus 25 min locale tr calendar day 1858 now plus hour locale tr calendar day 1858 tomorrow at the same time locale tr calendar day 1858 now minus hour locale tr calendar day 1858 yesterday at the same time locale tzm latn calendar day 1879 today at the same time locale tzm latn calendar day 1879 now plus 25 min locale tzm latn calendar day 1879 now plus hour locale tzm latn calendar day 1879 tomorrow at the same time locale tzm latn calendar day 1879 now minus hour locale tzm latn calendar day 1879 yesterday at the same time locale tzm calendar day 1900 today at the same time locale tzm calendar day 1900 now plus 25 min locale tzm calendar day 1900 now plus hour locale tzm calendar day 1900 tomorrow at the same time locale tzm calendar day 1900 now minus hour locale tzm calendar day 1900 yesterday at the same time locale uk calendar day 1922 today at the same time locale uk calendar day 1922 now plus 25 min locale uk calendar day 1922 now plus hour locale uk calendar day 1922 tomorrow at the same time locale uk calendar day 1922 now minus hour locale uk calendar day 1922 yesterday at the same time locale uk calendar day 1922 same day at 11 clock locale uz calendar day 1943 today at the same time locale uz calendar day 1943 now plus 25 min locale uz calendar day 1943 now plus hour locale uz calendar day 1943 tomorrow at the same time locale uz calendar day 1943 now minus hour locale uz calendar day 1943 yesterday at the same time locale vi calendar day 1964 today at the same time locale vi calendar day 1964 now plus 25 min locale vi calendar day 1964 now plus hour locale vi calendar day 1964 tomorrow at the same time locale vi calendar day 1964 now minus hour locale vi calendar day 1964 yesterday at the same time locale zh cn calendar day 1984 today at the same time locale zh cn calendar day 1984 now plus 25 min locale zh cn calendar day 1984 now plus hour locale zh cn calendar day 1984 tomorrow at the same time locale zh cn calendar day 1984 now minus hour locale zh cn calendar day 1984 yesterday at the same time locale zh tw calendar day 2006 today at the same time locale zh tw calendar day 2006 now plus 25 min locale zh tw calendar day 2006 now plus hour locale zh tw calendar day 2006 tomorrow at the same time locale zh tw calendar day 2006 now minus hour locale zh tw calendar day 2006 yesterday at the same time >>>unit_test_failed
test failed locale el calendar last week 462 client info locale el calendar last week 753 18 today days one clock >>>unit_test_failed
regression moment can be cloned repro steps invoke `history replacestate moment window title window location href under chrome 38 version works fine version throws `uncaught datacloneerror failed to execute replacestate on history an object could not be cloned version fails as well the regression was introduced somewhere between version and >>>bug
month comparison currently broken in est morning if you try the following from somewhere set to 1pm est on oct 31 2014 `moment 11 14 mm yy diff moment months true you get negative number this appears to be because of the dst offset calculation in `diff` but haven been able to find the exact bug yet >>>bug
improve support for iso8601 compact format can parse this iso timestamp without specifying format string `2014 10 02t1526z`>>>enhancement
nanosecond precision momentjs should support nanosecond precision digits after the second at least for parsing and formatting the following code should output 2014 07 30 02 59 32 109590000 >>>new_feature
786 tests failed client info diff diff between utc and local 78 month diff diff diff between utc and local 78 week diff getterssetters setters strings 155 day full name getterssetters setters strings 155 day short name getterssetters setters strings 155 day minimal name getterssetters day setter 158 12 set from wednesday to last wednesday weekyear weekday first day of week thursday dow 310 jan 2000 is wednesday 6th day weekyear weekday first day of week saturday dow 312 jan 1970 is wednesday 4th day locale af parse 372 januarie should be month locale af parse 372 jan should be month locale af parse 372 januarie should be month locale af parse 372 jan should be month locale af parse 372 januarie should be month locale af parse 372 jan should be month locale af parse 372 januarie should be month locale af parse 372 jan should be month locale af format ordinal 374 5de locale af format week 376 woensdag woe wo locale ar ma parse 393 should be month locale ar ma parse 393 should be month locale ar ma parse 393 should be month locale ar ma parse 393 should be month locale ar ma parse 393 should be month locale ar ma parse 393 should be month locale ar ma parse 393 should be month locale ar ma parse 393 should be month locale ar ma format ordinal 395 locale ar ma format week 397 locale ar sa parse 414 should be month instead is month 11 locale ar sa parse 414 should be month instead is month 11 locale ar sa parse 414 should be month instead is month 11 locale ar sa parse 414 should be month instead is month 11 locale ar sa parse 414 should be month instead is month 11 locale ar sa parse 414 should be month instead is month 11 locale ar sa parse 414 should be month instead is month 11 locale ar sa parse 414 should be month instead is month 11 locale ar sa format ordinal 416 locale ar sa format week 418 locale ar parse 435 should be month instead is month 11 locale ar parse 435 should be month instead is month 11 locale ar parse 435 should be month instead is month 11 locale ar parse 435 should be month instead is month 11 locale ar parse 435 should be month instead is month 11 locale ar parse 435 should be month instead is month 11 locale ar parse 435 should be month instead is month 11 locale ar parse 435 should be month instead is month 11 locale ar format ordinal 437 locale ar format week 439 locale az parse 456 yanvar should be month locale az parse 456 yan should be month locale az parse 456 yanvar should be month locale az parse 456 yan should be month locale az parse 456 yanvar should be month locale az parse 456 yan should be month locale az parse 456 yanvar should be month locale az parse 456 yan should be month locale az format ordinal 458 5th locale az format week 460 rnb locale be parse 477 should be month locale be parse 477 should be month locale be parse 477 should be month locale be parse 477 should be month locale be parse 477 should be month locale be parse 477 should be month locale be parse 477 should be month locale be parse 477 should be month locale be format ordinal 480 locale be format week 484 locale bg parse 500 should be month locale bg parse 500 should be month locale bg parse 500 should be month locale bg parse 500 should be month locale bg parse 500 should be month locale bg parse 500 should be month locale bg parse 500 should be month locale bg parse 500 should be month locale bg format ordinal 502 locale bg format week 504 locale bn parse 521 should be month locale bn parse 521 should be month locale bn parse 521 should be month locale bn parse 521 should be month locale bn parse 521 should be month locale bn parse 521 should be month locale bn parse 521 should be month locale bn parse 521 should be month locale bn format ordinal 523 locale bn format week 525 locale bo parse 543 should be month locale bo parse 543 should be month locale bo parse 543 should be month locale bo parse 543 should be month locale bo parse 543 should be month locale bo parse 543 should be month locale bo parse 543 should be month locale bo parse 543 should be month locale bo format ordinal 545 locale bo format week 547 locale br parse 565 genver should be month locale br parse 565 gen should be month locale br parse 565 genver should be month locale br parse 565 gen should be month locale br parse 565 genver should be month locale br parse 565 gen should be month locale br parse 565 genver should be month locale br parse 565 gen should be month locale br format ordinal 567 5vet locale br format week 569 merc her mer mer locale bs parse 579 januar should be month locale bs parse 579 jan should be month locale bs parse 579 januar should be month locale bs parse 579 jan should be month locale bs parse 579 januar should be month locale bs parse 579 jan should be month locale bs parse 579 januar should be month locale bs parse 579 jan should be month locale bs format ordinal 581 locale bs format week 583 srijeda sri sr locale ca parse 600 gener should be month locale ca parse 600 gen should be month locale ca parse 600 gener should be month locale ca parse 600 gen should be month locale ca parse 600 gener should be month locale ca parse 600 gen should be month locale ca parse 600 gener should be month locale ca parse 600 gen should be month locale ca format ordinal 601 locale ca format week 603 dimecres dc dc locale cs parse 620 leden should be month locale cs parse 620 led should be month locale cs parse 620 leden should be month locale cs parse 620 led should be month locale cs parse 620 leden should be month locale cs parse 620 led should be month locale cs parse 620 leden should be month locale cs parse 620 led should be month locale cs format ordinal 622 locale cs format week 624 steda st st locale cv parse 643 should be month locale cv parse 643 should be month locale cv parse 643 should be month locale cv parse 643 should be month locale cv parse 643 should be month locale cv parse 643 should be month locale cv parse 643 should be month locale cv parse 643 should be month locale cv format ordinal 645 locale cv format week 647 locale cy parse 664 ionawr should be month locale cy parse 664 ion should be month locale cy parse 664 ionawr should be month locale cy parse 664 ion should be month locale cy parse 664 ionawr should be month locale cy parse 664 ion should be month locale cy parse 664 ionawr should be month locale cy parse 664 ion should be month locale cy format ordinal 666 5ed locale cy format week 668 dydd mercher mer me locale da parse 684 januar should be month locale da parse 684 jan should be month locale da parse 684 januar should be month locale da parse 684 jan should be month locale da parse 684 januar should be month locale da parse 684 jan should be month locale da parse 684 januar should be month locale da parse 684 jan should be month locale da format ordinal 686 locale da format week 688 onsdag ons on locale de at parse 701 jnner should be month locale de at parse 701 jn should be month locale de at parse 701 jnner should be month locale de at parse 701 jn should be month locale de at parse 701 jnner should be month locale de at parse 701 jn should be month locale de at parse 701 jnner should be month locale de at parse 701 jn should be month locale de at format ordinal 703 locale de at format week 705 mittwoch mi mi locale de parse 721 januar should be month locale de parse 721 jan should be month locale de parse 721 januar should be month locale de parse 721 jan should be month locale de parse 721 januar should be month locale de parse 721 jan should be month locale de parse 721 januar should be month locale de parse 721 jan should be month locale de format ordinal 723 locale de format week 725 mittwoch mi mi locale el parse 741 should be month locale el parse 741 should be month locale el parse 741 should be month locale el parse 741 should be month locale el parse 741 should be month locale el parse 741 should be month locale el parse 741 should be month locale el parse 741 should be month locale el format ordinal 744 locale el format week 746 locale en au parse 763 january should be month locale en au parse 763 jan should be month locale en au parse 763 january should be month locale en au parse 763 jan should be month locale en au parse 763 january should be month locale en au parse 763 jan should be month locale en au parse 763 january should be month locale en au parse 763 jan should be month locale en au format ordinal 765 5th locale en au format week 767 wednesday wed we locale en ca parse 784 january should be month locale en ca parse 784 jan should be month locale en ca parse 784 january should be month locale en ca parse 784 jan should be month locale en ca parse 784 january should be month locale en ca parse 784 jan should be month locale en ca parse 784 january should be month locale en ca parse 784 jan should be month locale en ca format ordinal 786 5th locale en ca format week 788 wednesday wed we locale en gb parse 805 january should be month locale en gb parse 805 jan should be month locale en gb parse 805 january should be month locale en gb parse 805 jan should be month locale en gb parse 805 january should be month locale en gb parse 805 jan should be month locale en gb parse 805 january should be month locale en gb parse 805 jan should be month locale en gb format ordinal 807 5th locale en gb format week 809 wednesday wed we locale en parse 826 january should be month locale en parse 826 jan should be month locale en parse 826 january should be month locale en parse 826 jan should be month locale en parse 826 january should be month locale en parse 826 jan should be month locale en parse 826 january should be month locale en parse 826 jan should be month locale en format ordinal 828 5th locale en format week 830 wednesday wed we locale eo parse 847 januaro should be month locale eo parse 847 jan should be month locale eo parse 847 januaro should be month locale eo parse 847 jan should be month locale eo parse 847 januaro should be month locale eo parse 847 jan should be month locale eo parse 847 januaro should be month locale eo parse 847 jan should be month locale eo format ordinal 849 5a locale eo format week 851 merkredo merk me locale es parse 868 enero should be month locale es parse 868 ene should be month locale es parse 868 enero should be month locale es parse 868 ene should be month locale es parse 868 enero should be month locale es parse 868 ene should be month locale es parse 868 enero should be month locale es parse 868 ene should be month locale es format ordinal 870 locale es format week 872 mircoles mi mi locale et parse 889 jaanuar peaks olema kuu locale et parse 889 jaan peaks olema kuu locale et parse 889 jaanuar peaks olema kuu locale et parse 889 jaan peaks olema kuu locale et parse 889 jaanuar peaks olema kuu locale et parse 889 jaan peaks olema kuu locale et parse 889 jaanuar peaks olema kuu locale et parse 889 jaan peaks olema kuu locale et format ordinal 891 locale et format week 893 kolmapev locale eu parse 910 urtarrila should be month locale eu parse 910 urt should be month locale eu parse 910 urtarrila should be month locale eu parse 910 urt should be month locale eu parse 910 urtarrila should be month locale eu parse 910 urt should be month locale eu parse 910 urtarrila should be month locale eu parse 910 urt should be month locale eu format ordinal 912 locale eu format week 914 asteazkena az az locale fa parse 931 should be month instead is month 11 locale fa parse 931 should be month instead is month 11 locale fa format ordinal 933 locale fa format week 935 locale fi parse 952 tammikuu should be month locale fi parse 952 tammi should be month locale fi parse 952 tammikuu should be month locale fi parse 952 tammi should be month locale fi parse 952 tammikuu should be month locale fi parse 952 tammi should be month locale fi parse 952 tammikuu should be month locale fi parse 952 tammi should be month locale fi format ordinal 954 5th locale fi format week 956 keskiviikko ke ke locale fo parse 973 januar should be month locale fo parse 973 jan should be month locale fo parse 973 januar should be month locale fo parse 973 jan should be month locale fo parse 973 januar should be month locale fo parse 973 jan should be month locale fo parse 973 januar should be month locale fo parse 973 jan should be month locale fo format ordinal 975 locale fo format week 977 mikudagur mik mi locale fr ca parse 990 janvier should be month locale fr ca parse 990 janv should be month locale fr ca parse 990 janvier should be month locale fr ca parse 990 janv should be month locale fr ca parse 990 janvier should be month locale fr ca parse 990 janv should be month locale fr ca parse 990 janvier should be month locale fr ca parse 990 janv should be month locale fr ca format ordinal 992 locale fr ca format week 994 mercredi mer me locale fr parse 1010 janvier should be month locale fr parse 1010 janv should be month locale fr parse 1010 janvier should be month locale fr parse 1010 janv should be month locale fr parse 1010 janvier should be month locale fr parse 1010 janv should be month locale fr parse 1010 janvier should be month locale fr parse 1010 janv should be month locale fr format ordinal 1012 locale fr format week 1014 mercredi mer me locale gl parse 1030 xaneiro should be month locale gl parse 1030 xan should be month locale gl parse 1030 xaneiro should be month locale gl parse 1030 xan should be month locale gl parse 1030 xaneiro should be month locale gl parse 1030 xan should be month locale gl parse 1030 xaneiro should be month locale gl parse 1030 xan should be month locale gl format ordinal 1031 locale gl format week 1033 mrcores mr locale he parse 1051 should be month locale he parse 1051 should be month locale he parse 1051 should be month locale he parse 1051 should be month locale he parse 1051 should be month locale he parse 1051 should be month locale he parse 1051 should be month locale he parse 1051 should be month locale he format week 1054 locale hi parse 1071 should be month locale hi parse 1071 should be month locale hi parse 1071 should be month locale hi parse 1071 should be month locale hi parse 1071 should be month locale hi parse 1071 should be month locale hi parse 1071 should be month locale hi parse 1071 should be month locale hi format ordinal 1073 locale hi format week 1075 locale hr parse 1093 sjeanj should be month locale hr parse 1093 sje should be month locale hr parse 1093 sjeanj should be month locale hr parse 1093 sje should be month locale hr parse 1093 sjeanj should be month locale hr parse 1093 sje should be month locale hr parse 1093 sjeanj should be month locale hr parse 1093 sje should be month locale hr format ordinal 1095 locale hr format week 1097 srijeda sri sr locale hu parse 1114 janur should be month locale hu parse 1114 jan should be month locale hu parse 1114 janur should be month locale hu parse 1114 jan should be month locale hu parse 1114 janur should be month locale hu parse 1114 jan should be month locale hu parse 1114 janur should be month locale hu parse 1114 jan should be month locale hu format ordinal 1117 locale hu format week 1119 szerda sze locale hy am parse 1136 should be month locale hy am parse 1136 should be month locale hy am parse 1136 should be month locale hy am parse 1136 should be month locale hy am parse 1136 should be month locale hy am parse 1136 should be month locale hy am parse 1136 should be month locale hy am parse 1136 should be month locale hy am format ordinal 1140 locale hy am format week 1146 locale id parse 1162 januari should be month locale id parse 1162 jan should be month locale id parse 1162 januari should be month locale id parse 1162 jan should be month locale id parse 1162 januari should be month locale id parse 1162 jan should be month locale id parse 1162 januari should be month locale id parse 1162 jan should be month locale id format week 1165 rabu rab rb locale is parse 1182 janar should be month locale is parse 1182 jan should be month locale is parse 1182 janar should be month locale is parse 1182 jan should be month locale is parse 1182 janar should be month locale is parse 1182 jan should be month locale is parse 1182 janar should be month locale is parse 1182 jan should be month locale is format ordinal 1184 locale is format week 1186 mivikudagur mi mi locale it parse 1203 gennaio should be month locale it parse 1203 gen should be month locale it parse 1203 gennaio should be month locale it parse 1203 gen should be month locale it parse 1203 gennaio should be month locale it parse 1203 gen should be month locale it parse 1203 gennaio should be month locale it parse 1203 gen should be month locale it format ordinal 1205 locale it format week 1207 mercoled mer me locale ja parse 1223 should be month locale ja parse 1223 should be month locale ja parse 1223 should be month locale ja parse 1223 should be month locale ja parse 1223 should be month locale ja parse 1223 should be month locale ja parse 1223 should be month locale ja parse 1223 should be month locale ja format week 1226 locale ka parse 1243 locale ka parse 1243 locale ka parse 1243 locale ka parse 1243 locale ka parse 1243 locale ka parse 1243 locale ka parse 1243 locale ka parse 1243 locale ka format ordinal 1245 locale ka format week 1247 locale km parse 1264 should be month locale km parse 1264 should be month locale km parse 1264 should be month locale km parse 1264 should be month locale km parse 1264 should be month locale km parse 1264 should be month locale km parse 1264 should be month locale km parse 1264 should be month locale km format ordinal 1266 5th locale km format week 1268 locale ko parse 1285 should be month locale ko parse 1285 should be month locale ko parse 1285 should be month locale ko parse 1285 should be month locale ko parse 1285 should be month locale ko parse 1285 should be month locale ko parse 1285 should be month locale ko parse 1285 should be month locale ko format ordinal 1288 locale ko format week 1290 locale lb parse 1307 januar should be month locale lb parse 1307 jan should be month locale lb parse 1307 januar should be month locale lb parse 1307 jan should be month locale lb parse 1307 januar should be month locale lb parse 1307 jan should be month locale lb parse 1307 januar should be month locale lb parse 1307 jan should be month locale lb format week 1310 mttwoch locale lt parse 1315 sausio should be month locale lt parse 1315 sau should be month locale lt parse 1315 sausio should be month locale lt parse 1315 sau should be month locale lt parse 1315 sausio should be month locale lt parse 1315 sau should be month locale lt parse 1315 sausio should be month locale lt parse 1315 sau should be month locale lt format ordinal 1317 oji locale lt format week 1319 treiadienis tre locale lt format week on us calendar 1320 treiadienis tre locale lv parse 1337 janvris should be month locale lv parse 1337 jan should be month locale lv parse 1337 janvris should be month locale lv parse 1337 jan should be month locale lv parse 1337 janvris should be month locale lv parse 1337 jan should be month locale lv parse 1337 janvris should be month locale lv parse 1337 jan should be month locale lv format ordinal 1339 locale lv format week 1341 trediena locale mk parse 1358 should be month locale mk parse 1358 should be month locale mk parse 1358 should be month locale mk parse 1358 should be month locale mk parse 1358 should be month locale mk parse 1358 should be month locale mk parse 1358 should be month locale mk parse 1358 should be month locale mk format ordinal 1360 locale mk format week 1362 locale ml parse 1379 should be month locale ml parse 1379 should be month locale ml parse 1379 should be month locale ml parse 1379 should be month locale ml parse 1379 should be month locale ml parse 1379 should be month locale ml parse 1379 should be month locale ml parse 1379 should be month locale ml format ordinal 1381 locale ml format week 1383 locale mr parse 1401 should be month locale mr parse 1401 should be month locale mr parse 1401 should be month locale mr parse 1401 should be month locale mr parse 1401 should be month locale mr parse 1401 should be month locale mr parse 1401 should be month locale mr parse 1401 should be month locale mr format ordinal 1403 locale mr format week 1405 locale ms my parse 1423 januari sepatutnya bulan locale ms my parse 1423 jan sepatutnya bulan locale ms my parse 1423 januari sepatutnya bulan locale ms my parse 1423 jan sepatutnya bulan locale ms my parse 1423 januari sepatutnya bulan locale ms my parse 1423 jan sepatutnya bulan locale ms my parse 1423 januari sepatutnya bulan locale ms my parse 1423 jan sepatutnya bulan locale ms my format ordinal 1425 locale ms my format week 1427 rabu rab rb locale my parse 1444 should be month locale my parse 1444 should be month locale my parse 1444 should be month locale my parse 1444 should be month locale my parse 1444 should be month locale my parse 1444 should be month locale my parse 1444 should be month locale my parse 1444 should be month locale my format ordinal 1446 locale my format week 1448 locale nb parse 1465 januar should be month locale nb parse 1465 jan should be month locale nb parse 1465 januar should be month locale nb parse 1465 jan should be month locale nb parse 1465 januar should be month locale nb parse 1465 jan should be month locale nb parse 1465 januar should be month locale nb parse 1465 jan should be month locale nb format ordinal 1467 locale nb format week 1469 onsdag ons on locale ne parse 1486 should be month locale ne parse 1486 should be month locale ne parse 1486 should be month locale ne parse 1486 should be month locale ne parse 1486 should be month locale ne parse 1486 should be month locale ne parse 1486 should be month locale ne parse 1486 should be month locale ne format ordinal 1488 locale ne format week 1490 locale nl parse 1508 januari should be month locale nl parse 1508 jan should be month locale nl parse 1508 januari should be month locale nl parse 1508 jan should be month locale nl parse 1508 januari should be month locale nl parse 1508 jan should be month locale nl parse 1508 januari should be month locale nl parse 1508 jan should be month locale nl format ordinal 1510 5de locale nl format week 1512 woensdag wo wo locale nn parse 1530 januar should be month locale nn parse 1530 jan should be month locale nn parse 1530 januar should be month locale nn parse 1530 jan should be month locale nn parse 1530 januar should be month locale nn parse 1530 jan should be month locale nn parse 1530 januar should be month locale nn parse 1530 jan should be month locale nn format ordinal 1532 locale nn format week 1534 onsdag ons on locale pl parse 1551 stycze should be month locale pl parse 1551 sty should be month locale pl parse 1551 stycze should be month locale pl parse 1551 sty should be month locale pl parse 1551 stycze should be month locale pl parse 1551 sty should be month locale pl parse 1551 stycze should be month locale pl parse 1551 sty should be month locale pl format ordinal 1553 locale pl format week 1555 roda locale pt br parse 1572 janeiro should be month locale pt br parse 1572 jan should be month locale pt br parse 1572 janeiro should be month locale pt br parse 1572 jan should be month locale pt br parse 1572 janeiro should be month locale pt br parse 1572 jan should be month locale pt br parse 1572 janeiro should be month locale pt br parse 1572 jan should be month locale pt br format ordinal 1574 locale pt br format week 1576 quarta feira qua locale pt parse 1592 janeiro should be month locale pt parse 1592 jan should be month locale pt parse 1592 janeiro should be month locale pt parse 1592 jan should be month locale pt parse 1592 janeiro should be month locale pt parse 1592 jan should be month locale pt parse 1592 janeiro should be month locale pt parse 1592 jan should be month locale pt format ordinal 1594 locale pt format week 1596 quarta feira qua locale ro parse 1612 ianuarie should be month locale ro parse 1612 ian should be month locale ro parse 1612 ianuarie should be month locale ro parse 1612 ian should be month locale ro parse 1612 ianuarie should be month locale ro parse 1612 ian should be month locale ro parse 1612 ianuarie should be month locale ro parse 1612 ian should be month locale ro format ordinal 1614 locale ro format week 1616 miercuri mie mi locale ru parse 1633 should be month locale ru parse 1633 should be month locale ru parse 1633 should be month locale ru parse 1633 should be month locale ru parse 1633 should be month locale ru parse 1633 should be month locale ru parse 1633 should be month locale ru parse 1633 should be month locale ru format ordinal 1637 locale ru format week 1643 locale sk parse 1659 janur should be month locale sk parse 1659 jan should be month locale sk parse 1659 janur should be month locale sk parse 1659 jan should be month locale sk parse 1659 janur should be month locale sk parse 1659 jan should be month locale sk parse 1659 janur should be month locale sk parse 1659 jan should be month locale sk format ordinal 1661 locale sk format week 1663 streda st st locale sl parse 1682 januar should be month locale sl parse 1682 jan should be month locale sl parse 1682 januar should be month locale sl parse 1682 jan should be month locale sl parse 1682 januar should be month locale sl parse 1682 jan should be month locale sl parse 1682 januar should be month locale sl parse 1682 jan should be month locale sl format ordinal 1684 locale sl format week 1686 sreda sre sr locale sq parse 1703 janar should be month locale sq parse 1703 jan should be month locale sq parse 1703 janar should be month locale sq parse 1703 jan should be month locale sq parse 1703 janar should be month locale sq parse 1703 jan should be month locale sq parse 1703 janar should be month locale sq parse 1703 jan should be month locale sq format ordinal 1706 locale sq format week 1708 mrkur mr locale sr cyrl parse 1725 should be month locale sr cyrl parse 1725 should be month locale sr cyrl parse 1725 should be month locale sr cyrl parse 1725 should be month locale sr cyrl parse 1725 should be month locale sr cyrl parse 1725 should be month locale sr cyrl parse 1725 should be month locale sr cyrl parse 1725 should be month locale sr cyrl format ordinal 1727 locale sr cyrl format week 1729 locale sr parse 1746 januar should be month locale sr parse 1746 jan should be month locale sr parse 1746 januar should be month locale sr parse 1746 jan should be month locale sr parse 1746 januar should be month locale sr parse 1746 jan should be month locale sr parse 1746 januar should be month locale sr parse 1746 jan should be month locale sr format ordinal 1748 locale sr format week 1750 sreda sre sr locale sv parse 1767 januari should be month locale sv parse 1767 jan should be month locale sv parse 1767 januari should be month locale sv parse 1767 jan should be month locale sv parse 1767 januari should be month locale sv parse 1767 jan should be month locale sv parse 1767 januari should be month locale sv parse 1767 jan should be month locale sv format ordinal 1769 5e locale sv format week 1771 onsdag ons on locale ta parse 1788 should be month locale ta parse 1788 should be month locale ta parse 1788 should be month locale ta parse 1788 should be month locale ta parse 1788 should be month locale ta parse 1788 should be month locale ta parse 1788 should be month locale ta parse 1788 should be month locale ta format ordinal 1790 locale ta format week 1792 locale th parse 1809 should be month locale th parse 1809 should be month locale th parse 1809 should be month locale th parse 1809 should be month locale th parse 1809 should be month locale th parse 1809 should be month locale th parse 1809 should be month locale th parse 1809 should be month locale th format week 1812 locale tl ph parse 1829 enero should be month locale tl ph parse 1829 ene should be month locale tl ph parse 1829 enero should be month locale tl ph parse 1829 ene should be month locale tl ph parse 1829 enero should be month locale tl ph parse 1829 ene should be month locale tl ph parse 1829 enero should be month locale tl ph parse 1829 ene should be month locale tl ph format ordinal 1831 locale tl ph format week 1833 miyerkules miy mi locale tr parse 1849 ocak should be month locale tr parse 1849 oca should be month locale tr parse 1849 ocak should be month locale tr parse 1849 oca should be month locale tr parse 1849 ocak should be month locale tr parse 1849 oca should be month locale tr parse 1849 ocak should be month locale tr parse 1849 oca should be month locale tr format ordinal 1851 5th locale tr format week 1853 aramba ar locale tzm latn parse 1870 innayr should be month locale tzm latn parse 1870 innayr should be month locale tzm latn parse 1870 innayr should be month locale tzm latn parse 1870 innayr should be month locale tzm latn parse 1870 innayr should be month locale tzm latn parse 1870 innayr should be month locale tzm latn parse 1870 innayr should be month locale tzm latn parse 1870 innayr should be month locale tzm latn format ordinal 1872 locale tzm latn format week 1874 akras akras akras locale tzm parse 1891 should be month locale tzm parse 1891 should be month locale tzm parse 1891 should be month locale tzm parse 1891 should be month locale tzm parse 1891 should be month locale tzm parse 1891 should be month locale tzm parse 1891 should be month locale tzm parse 1891 should be month locale tzm format ordinal 1893 locale tzm format week 1895 locale uk parse 1912 should be month locale uk parse 1912 should be month locale uk parse 1912 should be month locale uk parse 1912 should be month locale uk parse 1912 should be month locale uk parse 1912 should be month locale uk parse 1912 should be month locale uk parse 1912 should be month locale uk format ordinal 1915 locale uk format week 1918 locale uz parse 1934 should be month locale uz parse 1934 should be month locale uz parse 1934 should be month locale uz parse 1934 should be month locale uz parse 1934 should be month locale uz parse 1934 should be month locale uz parse 1934 should be month locale uz parse 1934 should be month locale uz format ordinal 1936 locale uz format week 1938 locale vi parse 1955 thng should be month locale vi parse 1955 th01 should be month locale vi parse 1955 thng should be month locale vi parse 1955 th01 should be month locale vi parse 1955 thng should be month locale vi parse 1955 th01 should be month locale vi parse 1955 thng should be month locale vi parse 1955 th01 should be month locale vi format ordinal 1957 locale vi format week 1959 th t4 t4 locale zh cn parse 1976 should be month locale zh cn parse 1976 should be month locale zh cn parse 1976 should be month locale zh cn parse 1976 should be month locale zh cn parse 1976 should be month locale zh cn parse 1976 should be month locale zh cn parse 1976 should be month locale zh cn parse 1976 should be month locale zh cn format week 1979 locale zh tw parse 1998 should be month locale zh tw parse 1998 should be month locale zh tw parse 1998 should be month locale zh tw parse 1998 should be month locale zh tw parse 1998 should be month locale zh tw parse 1998 should be month locale zh tw parse 1998 should be month locale zh tw parse 1998 should be month locale zh tw format week 2001 >>>unit_test_failed
locale is not loaded automatically with browserify with browserify http browserify org setting locale does not work have found this workaround it is probably not easily fixable but at least it can be mentioned in docs >>>documentation up-for-grabs
diff does not support quarter diff does not support quarter screen shot 2014 10 16 at 55 31 pm https cloud githubusercontent com assets 304902 4669460 6996d2a6 556e 11e4 90a5 b4e3fe8761b5 png >>>bug
change format of japanese minutes to `mm` change format of japanese minutes to `mm`>>>language
add localization for swahili any chance of this don have the translations myself and will keep looking but if anyone can find an appropriate localization it would be helpful for my current project >>>language up-for-grabs
falling back to browser when parsing utc can give local time when parsing with `moment utc moment might fall back to the browser parser when it does the result is local time not utc example moment utc 10 14 2014 30 00 am format on my machine in the us pacific time zone it returns 2014 10 14t12 30 00 00 00 even though the offset is zero the time has been shifted by my local hour offset found on stack overflow http stackoverflow com 26350652 634824 >>>bug
change month names to persian change month names so the persian guys like me can actually use this in their project>>>needs_tests
add kazakh locale added native language of kazakhstan originated from turks >>>language needs_tests
encoding issue while integrating library for languages such as japanese chinese korean faced encoding issue with ie and junk characters were shown sometimes simple charset utf in the script tag solved the problem maybe the documentation could be changed bit so that it help newbies like me so link http stackoverflow com questions 26215002 encoding issue while integrating moment js library>>>documentation
create rw js add rwandan kinyarwanda language this translation is only partially complete full translation should be complete in few days >>>needs_tests
99 tests failed isbefore is before month 172 issame is same month 182 endstartof start of quarter 279 endstartof start of quarter 279 endstartof start of quarter 279 endstartof start of quarter 279 endstartof end of quarter 280 locale af format month 375 locale ar ma format month 396 locale ar sa format month 417 locale ar format month 438 locale ar format month 438 locale az format month 459 locale be format month 481 locale be format month case 482 locale be format month case 482 locale bg format month 503 locale bn format month 524 locale bo format month 546 locale br format month 568 locale bs format month 582 locale ca format month 602 locale cs format month 623 locale cv format month 646 locale cy format month 667 locale da format month 687 locale de at format month 704 locale de format month 724 locale el format month 745 locale en au format month 766 locale en ca format month 787 client info isbefore is before month 172 start of next month issame is same month 182 start of next month endstartof start of quarter 279 keep the quarter endstartof start of quarter 279 strip out the month endstartof start of quarter 279 strip out the day endstartof start of quarter 279 strip out the hours endstartof end of quarter 280 set the hours locale af format month 375 april apr locale ar ma format month 396 locale ar sa format month 417 locale ar format month 438 locale ar format month 438 locale az format month 459 aprel apr locale be format month 481 locale be format month case 482 locale be format month case 482 locale bg format month 503 locale bn format month 524 locale bo format month 546 locale br format month 568 ebrel ebr locale bs format month 582 april apr locale ca format month 602 abril abr locale cs format month 623 duben dub locale cv format month 646 locale cy format month 667 ebrill ebr locale da format month 687 april apr locale de at format month 704 april apr locale de format month 724 april apr locale el format month 745 locale en au format month 766 april apr locale en ca format month 787 april apr locale en gb format month 808 april apr locale en format month 829 april apr locale eo format month 850 aprilo apr locale es format month 871 abril abr locale et format month 892 aprill apr locale eu format month 913 apirila api locale fa format month 934 locale fi format month 955 huhtikuu huhti locale fo format month 976 aprl apr locale fr ca format month 993 avril avr locale fr format month 1013 avril avr locale gl format month 1032 abril abr locale he format month 1053 locale hi format month 1074 locale hr format month 1096 travanj tra locale hu format month 1118 prilis pr locale hy am format month 1141 locale hy am format month case 1142 locale hy am format month case 1142 locale hy am format month short case 1143 locale hy am format month short case 1143 locale id format month 1164 april apr locale is format month 1185 aprl apr locale it format month 1206 aprile apr locale ja format month 1225 locale ka format month 1246 locale km format month 1267 locale ko format month 1289 locale lb format month 1309 abrll abr locale lt format month 1318 balandio bal locale lv format month 1340 aprlis apr locale mk format month 1361 locale ml format month 1382 locale mr format month 1404 locale ms my format month 1426 april apr locale my format month 1447 locale nb format month 1468 april apr locale ne format month 1489 locale nl format month 1511 april apr locale nn format month 1533 april apr locale pl format month 1554 kwiecie kwi locale pt br format month 1575 abril abr locale pt format month 1595 abril abr locale ro format month 1615 aprilie apr locale ru format month 1638 locale ru format month case 1639 locale ru format month case 1639 locale ru format month short case 1640 locale ru format month short case 1640 locale sk format month 1662 aprl apr locale sl format month 1685 april apr locale sq format month 1707 prill pri locale sr cyrl format month 1728 locale sr format month 1749 april apr locale sv format month 1770 april apr locale ta format month 1791 locale th format month 1811 locale tl ph format month 1832 abril abr locale tr format month 1852 nisan nis locale tzm latn format month 1873 ibrir ibrir locale tzm format month 1894 locale uk format month 1916 locale uk format month case 1917 locale uk format month case 1917 locale uz format month 1937 locale vi format month 1958 thng th04 locale zh cn format month 1978 locale zh tw format month 2000 >>>troubleshooting unit_test_failed
unified interface for locale functions between global moment and moment instances moved months short weekdays short min to localedata made the originals call the localedata methods renamed original methods that get single month or weekdays names from plural to singular updated localedata set so that locale definitions with months weekdays would continue to work fixes 1945 >>>todo
fix parsing of meridiem in locales that have meridiem there were many locales that supported meridiem output but did not support parsing meridiemparse and ispm locale keys also some locales can not be parsed with simple ispm function because the variants are not different around noon new ispm function with new name fixpm is needed that also takes an hour and returns whether you should add 12 hours or not >>>todo
add subtract workdays hey needed way to step over weekends and created small helper method to achieve this tried to make it into pull request but found the code bit intimidating on the first sight so thought should ask first if this is something that has its place in the library ideally guess it should be available as moment add workdays or so let me know if this is useful or maybe already covered somehow jsfiddle demo http jsfiddle net dain 5xrr79h0 >>>new_feature
alias locale to another notice that zh and zh cn display different dates would like for zh to render as zh cn and am wondering if there is way to alias locale to another locale thank you >>>enhancement
formats mmm and mmmm treated the same in strict mode the format guide states mmmm january december mmm jan dec however the following statements return true moment january 2001 mmmm yyyy true isvalid true correct moment january 2001 mmm yyyy true isvalid true incorrect moment jan 2001 mmm yyyy true isvalid true correct moment jan 2001 mmmm yyyy true isvalid true incorrect using version 3>>>bug
moment object form inconsistency think there is an inconsistency when creating moment from object where `date` has to be specified as `day` for example but the following won work as `date` is not used by object form constructor basically one has to differentiate between `day` in object constructor and `day` in moment instance and also to remember to pass `date` as `day` when creating moment from object is this an expected behavior >>>bug
moment isbefore isafter difference in year problem when create two moment objects there is problem with moment comparisons 30 august 2014 is later than september 2014 september is later than september also between 30 august 2013 and september 2014 there is less than year difference but momentjs results more than year difference between september 2013 and september 2014 >>>troubleshooting
different behavior in different timezones am using moment js and getting issue with how library works in different timezones item 21 14 in est moment item format 21 14 in pst moment item format 22 14 >>>troubleshooting
localized date parsing errors using moment removing the periods from the abbreviated months and weekdays fixes the issue also >>>bug
manipulation docu outdated example code in http momentjs com docs manipulating is outdated should be this difference seems to run through the whole docu also in other code examples >>>documentation
calling endof with no argument raises no error but returns dodgy result calling endof with no argument subtracts ms from the date this should either default to day or throw an error instead you get dodgy result >>>bug
update zh cn js add to minutes in chinese >>>needs_tests
update zh cn js append minute to ahmm in longdateformat>>>needs_tests
performance optimization isbefore isafter issame optimized performance of isbefore isafter issame by using valueof and not momentizing cloning already existing moment objects 90 performance improvement when using without specific unit and the input is already moment object reviewed by patrickbic tscheinecker>>>performance
unexpected results from issame isbefore and isafter when zone is used to modify offset hoping someone can help me make sense of this output it looks like bug to me but maybe just misunderstanding how these methods work even so wouldn expect issame and isbefore isafter to ever both return true when comparing the same moments with the same granularity which seems to be the case in the last statements date moment isamomentobject true isutc false pf object locale thu aug 28 2014 17 11 10 gmt 0100 gmt daylight time date clone isamomentobject true isutc false pf object locale thu aug 28 2014 17 11 10 gmt 0100 gmt daylight time date zone 60 zone 60 issame date day true isbefore date day false isafter date day false zone isamomentobject true isutc true pf object locale thu aug 28 2014 17 11 10 gmt 0100 gmt daylight time date zone 60 zone issame date day true isbefore date day false isafter date day true thanks stephen>>>bug
days with ordinal suffix are not parsed in strict mode `moment july 6th 2014 mmm do yyyy true isvalid returns `false` however `moment july 6th 2014 mmm do yyyy isvalid returns `true` >>>bug
use case for changing the moment duration units relationships the refactor of the duration object in moment js version changed the relationship between moment duration units before version duration year was equal to 365 days and duration month was equal to 30 days version changed those relationships to define duration year as 365 days hours 49 minutes and 12 seconds duration month is now 30 days 10 hours 29 minutes and seconds from the comments in the code it appears that the rationale for this change is improving the accuracy of the conversions by defining year as 365 2425 days which accounts for leap year rules making 400 years have 146097 days the update might make sense if the primary use case for durations involved long timescales in the century range but don think that the case feel that the primary duration use case is for timescales in the year month day and shorter ranges and that the change actually hurts the accuracy of the conversion there are many times when year is 365 days there are many times when month is 30 days from human perspective year or month is never composed of fractional days year can be exactly 365 or 366 days and month can be exactly 28 29 30 or 31 days there is never time when any given year is exactly 365 2425 days or any given month is exactly 30 436875 days as an end user seeing one month duration output as 30 days was acceptable and easy to understand confused now seeing that same one month duration output as 30 days 10 hours 29 minutes and seconds >>>bug
is `localedata` chainable as previously mentioned in 1819 fwiw my fix does chain see the test and it slightly cleaner because it uses the new method to do the set and the chain at openuserjs openuserjs org 315 we re seeing chain issue that this patch seems to have been fixed here moment moment pull 1819 but wasn merged into this project we re setting our module globally to use custom en locale called `en tiny` and then setting the date from stored date it little unclear if we should be doing or using and ends up being nothing on our end please advise tia>>>bug
moment utc string fmt1 fmt2 not working believe there is bug in moment utc when an array of format strings are passed in somewhat familiar with the parsing fallback and walked the code in the debugging to confirm it isn related didn have time to figure out the exact cause but did notice that the temporary config created when walking the format array does not copy the useutc` field should it >>>bug
problem with august 31 2014 with moment 2014 31 tostring sun aug 31 2014 00 00 00 gmt 0100 ok moment 2014 31 tostring invalid date not ok but moment 2014 31 tostring thu jul 31 2014 00 00 00 gmt 0100 ok why does august only fail with the string arguments >>>bug
duration asmilliseconds regression from v2 to v2 moment duration minutes 17 seconds 25 milliseconds 900 asmilliseconds 1045900 v2 60 1045899 9999999999 v2 1>>>bug
update homepage `deprecation warning moment subtract period number is deprecated please use moment subtract number period used to follow the homepage code and it output this warning to console>>>documentation
months diff bug am seeing an issue with running months diff between dates was expecting to see sequence but am getting the diff for 2013 07 20 and 2013 03 20 is only months which it should be months is there reason that this is returning months rather than months between these dates >>>bug
added uyghur language hi thanks for the great library here is uyghur translation of moment hope you can merge it thanks lot best alim>>>language needs_tests
new getter and setter for dow with reference to https github com dangrossman bootstrap daterangepicker issues 401 would say that moment js needs way to get and possibly also set dow first day of week don know is moment weekday can somehow be used for this but moment dow firstdayofweek or similar seems to be missing and quite simple to implement >>>todo
add subtract report deprecation with durations can submit pr if you want just wanted to make sure this is actually bug first when using add or subtract with durations the below deprecation warning is shown deprecation warning moment subtract period number is deprecated please use moment subtract number period >>>bug
release process v2 make sure there are no unmerged prs or unresolved critical bugs that should be part of the release run tests on sauce `grunt test sauce browser` and karma `grunt test browser` `git checkout make sure tests pass inside momentjs com locally this tests against latest `moment timezone` update `moment timezone` if necessary `cd libs moment git fetch local git checkout local develop npm install grunt release cd moment timezone git fetch origin git co origin master cd grunt server` 2h go through the commit history and write down the changelog each item should have the pr that was merged or at least commit hash publish the changelog in gist like https gist github com ichernev ac3899324a5fa6c8c9b4 make sure breaking changes are highly visible 3h update momentjs com add documentation about new features and deprecations use `grunt server` and develop on localhost update `changelog md` file with shorter summary of the changelog point to the gist commit with message `update changelog for 3` bump version with `grunt bump version 3` commit `bump version to 3` run `grunt release` to build all files that need building commit with `build 3` push develop not yet released moment github repo 10 update moment reference in momentjs com libs moment and make sure the references to the new version are working on localhost 11 check if the develop travis built is successful 12 merge develop into master tag and push 13 update momentjs com moment dependency commit and push the changes grunt deploy 14 npm publish scripts npm prepublish sh cd moment npm npm publish cd 15 spm publish `cd moment npm spm publish cd 16 nuget publish `grunt nuget publish` 17 meteor publish `grunt test meteor meteor publish` 18 tweet about the new release passing link to the extended changelog in the gist some suggested improvements publish beta versions before actually doing the website changes this will enable the release person to kind of spread the release over some time because right now it takes long uninterrupted chunk of time and errors happen often and its bad user experience support browsing old versions of the docs on the website most other big projects let you do that because the changes are sometimes big from version to version and you want to be reading the accurate docs related to have section in the docs about what to do for the new release like hints on how to use the new functionality over the old one deprecation explanations not really release add faq section for the web>>>build/release
support invalid durations there is currently no way to determine whether duration parse was successful even by inspecting the fields >>>enhancement
added dutch language file added dutch language file >>>language needs_tests
momentjs com is not in local language currently `moment lang zh tw so you ll get some interesting output if you re trying the library in the console could it be made to default to the local language >>>bug
add global meta locale continued from 1761 we should have task that allows moments to be pinned to the global locale so that they ll change with global setting something like >>>new_feature
fix up definelocale for continued from 1761 we want to clean up locale setting for make `definelocale` not set the global locale remove the hack around lazy loaded locales in node remove the hack to set the locale back to english in the `embedlocales` task>>>enhancement
feature round to unit by given offset round up down or to the nearest unit usage moment roundto units offset midpoint roundto minute 15 round the moment to the nearest 15 minutes roundto minute 15 up round the moment up to the nearest 15 minutes roundto minute 15 down round the moment down to the nearest 15 minutes >>>es6_rework new_feature todo
add moment to moment opts returning duration currently the following methods create duration and then call method on it `diff` `from` `fromnow` but there is no method to actually create duration from two moments we should add method named `to` or similar that returns duration object given two moments also it can support both ways of interpreting the difference human and exact human will try to extract month and day information accurately as `duration from to where exact would just get the number of milliseconds and bubble up the two would yield the same result for durations less than one month >>>enhancement
expose isdate method would be handy and save some boilerplate or other dependencies when working with dates and moments >>>new_feature
fromnow should behave better for invalid dates this isn very clear behavior `format just prints invalid date perhaps we should do something similar in this case >>>enhancement
added afrikaans translation>>>needs_tests
optimize clone 49x improvement took crack at optimizing cloning on my box tests are benchmark js in node on an mbp got this pre optimization bigger is better did two passes in the first one replaced the `momentproperties` object with an array of strings reorganized the clone so that it doesn sort of do it twice once in `clonemoment` and once in `extend` and then changed the clone to copy the fields over results so 6x the second pass made `momentproperties` into an empty list can still be added to by plugins and then made the clone function actually just look at each field and copy them old school results so 49x the original caveats broke plugin compat probably just tz `momentproperties` is now an array not an object which makes it bit faster to iterate through we can either switch it back to an object and take the perf hit for moment tz or we can fix moment tz need to write test for the plugin field cloning broke one thing the lang` object is defined on the prototype and can be overriden by the instance since we don check `hasownprototype the reference gets copied on clone either way it gets promoted from prototype property to instance property don think that has any practical effect unless you redefine the language in the prototype weird so deleted the test but could be missing something we could either use `hasownproperty in this one place or we could live with it haven tested on you know actual browsers >>>performance
moment constructor http jsfiddle net qzbcw am trying to understand why this is considered to be valid date would expect the format that define to be the constraining factor is this because of the fall back onto date as mentioned in issue https github com moment moment issues 1407 if so and this will be false in the next major release when is that release scheduled for thanks >>>forgiving_parsing
zone offset while we re deprecating and renaming things maybe it time to be consistent with our use of zone and offset kind of tired of explaining that `moment zone isn quite what it says on the tin and almost sure mj1856 is too what do you think ichernev >>>deprecate todo
duration tostring returns object object javascript moment duration tostring object object >>>bug
replace fallback deprecation link with an faq using 1407 is maybe not the best way to handle this going to write up an faq that explains why the change is happening and what end users should do about it ll then just replace the link in the code doesn matter too much if we don do another pre release but guessing we will in order to have some of the other deprecations in the wild for bit >>>documentation
comparing timezone dates with issame produces wrong result moment tz 2014 06 06 europe london issame moment tz 2014 06 06 europe berlin year false though this was adressed in https github com moment moment pull 1371 but it seems it still is an issue not sure if should post here or in moment timezone>>>bug
isvalid issue when using char sometimes isvalid fail when parse not number characters moment 01 xx xxxx dd mm yyyy isvalid true must be false moment xx 01 xxxx dd mm yyyy isvalid true must be false moment xx xx 2014 dd mm yyyy isvalid false this one is ok tests with version on chrome 35 fiddle http jsfiddle net bcur3 >>>forgiving_parsing
generate package json with gruntfile looks like we have list of all locales in `package json` for spm we need to make grunt task that generates the file on release same way we generate `component json` >>>bug
parsing object month unexpected behavior moment years 2010 months 12 days 15 would return invalid date cause months counting begin from it is unexpected and undocumented in moment easy parsing context >>>documentation
make moment mostly immutable there has been lot of discussions https github com moment moment search immutable ref cmdform type issues about this here the proposal the following mutable methods will become immutable in `utc` `local` `zone` `add` `subtract` `startof` `endof` `lang` also in `duration` `add` `subtract` and `lang` as start all methods will be duplicated with `methodnamemute` variants we also need immutable variants named `methodnameimmute` from the plain old methods will start using the immutable option by default what is debatable is should `lang` be made immutable should all the getters setters including `get` `set` be made immutable too naming of the mutable and immutable versions of the methods and of course should we do the switch or just stop at the immutable api the good part is we can make immutable versions of the methods today and decide later on what to do if we switch it would also mean the `2 x` branch would be around for quite some time after `3 x` is out icambron timrwood gregwebs yang lfnavess soswow langalex>>>enhancement
rename day and weekday these are terrible names they mean the same thing except that weekday is locale aware it cares when your locale week starts while day does not so maybe `dayofweek` and `localedayofweek` way more verbose but so much clearer we could introduce the new names and deprecate the old ones >>>deprecate
should be an option to return local times from toisostring `toisostring` always returns utc times we should support flag that lets you return the local time instead of requiring the user to do >>>enhancement todo
instance level locale leaks to other instances works fine in the browser but in node this is not good also does that in node program so it not just some weird repl issue >>>bug
i18n vietnamese language vi with format method wrote the code it correct but in vietnamese when display date first letter of the day of week at the beginning should be capitalized like this think it better >>>language
array of formats parsing order the documentation for parsing date with an array of formats states starting in moment uses some simple heuristics to determine which format to use in order prefer formats resulting in valid dates over invalid ones prefer formats that parse more of the string than less and use more of the format more of the format than less prefer stricter parsing so would expect the following to return 05 05 2045 as the first format does not match the input but the second one does `moment 05 05 45 dd mm yyyy dd mm yy format dd mm yyyy however the date is incorrectly parsed as 05 05 0045 >>>enhancement todo
02 31 1995 is valid date as per moment how to work around this issue >>>troubleshooting
19 tests failed lang ca format month 407 lang ca format month 407 lang ca format month 407 lang ca format month 407 lang ca format month 407 lang ca format month 407 lang ca format month 407 lang ca format month 407 lang ca format month 407 lang ca format month 407 10 lang ca format month 407 11 lang ca format month 407 12 lang ca format week 408 lang ca format week 408 lang ca format week 408 lang ca format week 408 lang ca format week 408 lang ca format week 408 lang ca format week 408 client info lang ca format month 407 gener gen lang ca format month 407 febrer febr lang ca format month 407 mar mar lang ca format month 407 abril abr lang ca format month 407 maig mai lang ca format month 407 juny jun lang ca format month 407 juliol jul lang ca format month 407 agost ag lang ca format month 407 setembre set lang ca format month 407 10 octubre oct lang ca format month 407 11 novembre nov lang ca format month 407 12 desembre des lang ca format week 408 diumenge dg dg lang ca format week 408 dilluns dl dl lang ca format week 408 dimarts dt dt lang ca format week 408 dimecres dc dc lang ca format week 408 dijous dj dj lang ca format week 408 divendres dv dv lang ca format week 408 dissabte ds ds >>>unit_test_failed
weekday for en gb and en us behaving odd am missing something or `moment lang en gb weekday format dddd should return monday and not sunday am off base >>>troubleshooting
13 tests failed diff diff key after 68 diff diff key after 68 diff diff key after 68 diff diff key before 69 diff diff key before 69 diff diff key before 69 diff diff key before singular 70 diff diff key before singular 70 diff diff key before singular 70 diff diff key before abbreviated 71 diff diff key before abbreviated 71 diff diff key before abbreviated 71 diff diff floored 76 client info diff diff key after 68 week diff diff diff key after 68 week diff diff diff key after 68 day diff diff diff key before 69 day diff diff diff key before 69 week diff diff diff key before 69 week diff diff diff key before singular 70 day diff singular diff diff key before singular 70 week diff singular diff diff key before singular 70 week diff singular diff diff key before abbreviated 71 day diff abbreviated diff diff key before abbreviated 71 week diff abbreviated diff diff key before abbreviated 71 week diff abbreviated diff diff floored 76 24 hours day >>>unit_test_failed
isvalid issue strict mode validation fails according to docs there are several options to specify time format pattern hh 24 hour time hh 12 hour time use in conjunction with or hence following check has to result in false but the outcome is true moment 06 20 2014 23 51 pm mm dd yyyy hh mm true isvalid >>>bug
yy returns 20 isntead of 14 `format yy retuns 20 instead of 14 for the year 2014 >>>troubleshooting
deprecate add subtract unit value right now we support both `moment add days and `moment add days lets deprecate the second original form and get rid of it in the next major version >>>deprecate
arabic ar relative time not using correct plurals we ve been getting feedback from small number of arabic speaking end users that relative time display isn being written appropriately for some integers looked at the library and the ar logic doesn include cldr style plural tests to support the different ways relative time might be written for different numbers the russian relative time does this though don think it can be easily adapted to how arabic would work russian always assumes an integer will be in the returned string which isn the case for arabic told sometimes it just words for contributors to the arabic support here do you have any thoughts on this feedback we re right on the edge of this being called bug in our system but sure this must ve crossed someone else mind here at least once in the past if there reason why arabic uses simple other plurals here it be helpful info to have thanks >>>language
two digit time zone offsets should be parseable usually we see time zone offset as either hhmm` or hh mm` however the iso 8601 spec allows for the minutes to be omitted for whole hour offsets there is currently not way to express this is in moment see http stackoverflow com 24295354 634824 adding zeros is only good workaround when you are certain that every value will have only two digits if some have two and some have four then by adding zeros you could end up trying to parse six digits >>>enhancement up-for-grabs
support for http dates rfc 2616 issue 1407 mentions that non iso dates are deprecated but what about other ubiquitous date formats defined by standards rfc 2616 http www w3 org protocols rfc2616 rfc2616 sec3 html sec3 which defines the date format used in http headersdoes not appear to be supported by moment at this time is support for this format on the roadmap >>>enhancement todo
africa cairo time is not correct hi am using moment js for timezones and conversions and found that when convert newyork time to africa cairo the conversion is not correct its still considering day light saving for cairo which is stopped few years back even on the timezone world map on momentjs website the cairo time is not shown correctly 1hour late please fix this bug >>>bug
moment zone value keeptime true does not keep time updating changing completely the issue as debugging made things clearer it seems that if moment object is in the timezone and we change it to timezone with argument keeptime true the time is converted to utc and then the offset is applied it means the timezone changes as one would expect but the time changes too example my date was moved to utc before the shift >>>bug
duration missing tojson feature hi detected that the moment object don implement the standar to json function http en wikipedia org wiki iso 8601 durations in this link stated that it should return iso8601 format `pnynmndtnhnmns` https google styleguide googlecode com svn trunk jsoncstyleguide xml time duration property values so for example it could be corrected like this >>>enhancement
perf makedatefrominput no need to match regex if input is date the moment constructor when passed date should be the fastest there is no need to match the aspnetjsonregex before testing if the `input` is date >>>performance
test failed diff diff between utc and local 64 client info diff diff between utc and local 64 year diff >>>unit_test_failed
date day inconsistent between constructor and getter var moment year 2063 month day >>>enhancement
duration format meta overview duration format has been requested multiple times 1436 1048 https github com jsmreese moment duration format 892 463 the main problem is localization almost any hack api can be made to work on english but proper translation can be impossible even cldr doesn provide joining information how do you concatenate hours and minutes for example on the other hand something that just lets you format without locale should be fairly straight forward check this https github com moment moment issues 1048 issuecomment 24492305 the plugin listed above seems to do that it has some weird issues and not whole lot of stars forks so not sure if its worth reimplementing merging into moment we might make it an official plugin like timezone because as 463 there are lot of 1` for it icambron oire what do you think >>>enhancement
moment duration p30d toisostring p1m in general iso durations of months and days aren comparable due to the varying number of days in month the culprit is the bubble function which gets called on duration construction can anyone explain the rationale for why 30 day periods always get bubbled into month is there some piece of the library or use case that depends on this >>>todo
possible conflict with kendo hi found problem when trying to use version with ie8 tried to make working example in jsfiddle or similar program but couldnt find one that works in ie8 but will try to explain the problem im facing here when do var moment everything works like charm but if do var moment where is moment js object gets an object with null properties this works in all other browsers tested firefox chrome ie11 but not with ie8 please help >>>troubleshooting
proposal for new parsing api currently `moment`s can only be created through one overloaded function to support all input methods string string format object formats when format or list of formats is present the situation is simple but we need different functions for the single string argument case so lets add few more methods for the particular use cases about `parse` we need function that is dependable stable across browsers but also handles more user friendly formats only found the rfc2822 link in the mdn docs https developer mozilla org en us docs web javascript reference global objects date parse but browsers parse whole lot more than that we need to read some browser code and fetch few formats that make sense not sure about localized versions we can try to parse `l presets of the selected language guess for backwards compatibility we can assume `fromany` and urge users to use the more descriptive format so there is less shooting in the foot not sure how the lang strict arguments will play with the absence of format for extra credit also it makes sense to add those two special forms of parsing iso moment human formats for parse and date constructor and let the user select them as formats in the format case 1680 explains this well of course this can be made extensible so others can add formats that are not mere tokens but list of formats or even code >>>enhancement
can parse do in strict mode version there is some problem while validating the dates consider the snippet below moment may 7th 2014 mmmm do yyyy true isvalid this always return false it should return true >>>bug
is there way to refer to iso 8601 when passing an array of dates in format would like to do something like this `moment 12 25 1995 hh mm iso 8601 essentially use the format hh mm otherwise parse using iso 8601 the thing is don want to have to enter the 20 ish variations of the iso 8601 formats it would be nice if it was possible to refer to the standard while parsing is there anyway way to do this >>>new_feature
implement meridiemparse and ispm in russian this is pr for part of the bug described in 1640>>>needs_tests
14 tests failed diff diff key after 57 diff diff key after 57 diff diff key after 57 diff diff key before 58 diff diff key before 58 diff diff key before 58 diff diff key before singular 59 diff diff key before singular 59 diff diff key before singular 59 diff diff key before abbreviated 60 diff diff key before abbreviated 60 diff diff key before abbreviated 60 diff diff between utc and local 64 diff diff floored 65 client info diff diff key after 57 week diff diff diff key after 57 week diff diff diff key after 57 day diff diff diff key before 58 day diff diff diff key before 58 week diff diff diff key before 58 week diff diff diff key before singular 59 day diff singular diff diff key before singular 59 week diff singular diff diff key before singular 59 week diff singular diff diff key before abbreviated 60 day diff abbreviated diff diff key before abbreviated 60 week diff abbreviated diff diff key before abbreviated 60 week diff abbreviated diff diff between utc and local 64 year diff diff diff floored 65 24 hours day >>>unit_test_failed
test failed diff diff between utc and local 64 client info diff diff between utc and local 64 year diff >>>unit_test_failed
wrong year calculation for iso dates before 1970 when try to parse iso dates before 1970 the year caluclation is wrong it will add one year which results in following very strange result moment 1970 01 01t00 00 00 000 01 00 issame moment 1969 01 01t00 00 00 000 01 00 true used moment version >>>bug
accept singular object in setter it would be very convenient to pass single units hash to set method same as with add subtract is it possible to implement >>>enhancement
add the ability to set the formatting language as part of the format method this pull request adds the ability to configure the language as part of the format method instead of changing it globally the change is primarily for node js server side uses when rendering date for client it not desirable to modify the global language but only for that call on the server side this change could be used alongside the locale https github com jed locale module to negotiate the correct language for displaying dates >>>es6_rework todo
fromnow returns the wrong number of years until this is fixed fromnow should be considered broken and unreliable it should certainly not be so prominent on the front page of momentjs com given that it is guaranteed to return incorrect results there stackoverflow thread documenting the bug http stackoverflow com questions 14057497 moment js how do get the number of years since date not rounded up but here quick demonstration of it moment format 2014 04 23t10 49 03 05 00 so we know what now is moment 11 30 1983 mm dd yyyy fromnow 30 years ago this is correct moment 10 30 1983 mm dd yyyy fromnow 31 years ago this is incorrect and very dangerous behavior for date manipulation library>>>bug
test failed isbefore is before day 150 10 client info isbefore is before day 150 10 exact end of day >>>unit_test_failed
test failed diff diff between utc and local 64 client info diff diff between utc and local 64 year diff >>>unit_test_failed
test failed add add across dst 10 client info add add across dst 10 adding days over dst difference should result in the same hour >>>unit_test_failed
content missing from cdnjs there note http momentjs com docs use it browser for using moment in browser that states moment js is available on cdnjs com http cdnjs com remember though cool kids concatenate their scripts to minimize http requests there another note in the i18n docs for loading languages into browser http momentjs com docs i18n loading into browser that states note the files in the lang folder are optimized for use in node js if you want to use language files in the browser use the minified version that are included in min lang however min lang is not included on cdnjs only lang here direct link http cdnjs com libraries moment js to the cdnjs listing for moment so you can see for yourself should browsers be using lang or min lang if the docs referencing the latter are correct can this please be added to cdnjs >>>documentation
bug with hours format on diff moment object getting bad data back when trying to do difference between two moment date objects only appears to occur for the hour format ve attached the debug code that is working for me so you can simulate the issue could be bad code but couldn find anything wrong with this after looking through the documentation for few hours and only have problem trying to use moment to get back the remainder hours >>>troubleshooting
added roundto method round up down or to the nearest unit usage moment roundto units offset midpoint roundto minute 15 round the moment to the nearest 15 minutes roundto minute 15 up round the moment up to the nearest 15 minutes roundto minute 15 down round the moment down to the nearest 15 minutes >>>needs_tests new_feature todo
dst change correct is this behavior correct moment 2014 30 sun mar 30 2014 00 00 00 gmt 0100 cet moment 2014 30 30 sun mar 30 2014 00 30 00 gmt 0100 cet moment 2014 30 sun mar 30 2014 00 00 00 gmt 0100 cet moment 2014 30 30 sun mar 30 2014 00 30 00 gmt 0100 cet moment 2014 30 sun mar 30 2014 01 00 00 gmt 0100 cet moment 2014 30 30 sun mar 30 2014 01 30 00 gmt 0100 cet moment 2014 30 sun mar 30 2014 03 00 00 gmt 0200 cest http www timeanddate com worldclock city html 259 dst started on sunday 30th march 2014 02 00 local standard time but why is 30 2014 01 00 sun mar 30 2014 00 00 00 gmt 0100 cet for moment js adding one hour instead seems to return correct results test moment 2014 30 test sun mar 30 2014 00 00 00 gmt 0100 cet test add hours test sun mar 30 2014 01 00 00 gmt 0100 cet test add hours test sun mar 30 2014 03 00 00 gmt 0200 cest >>>troubleshooting
set number doesn work this should be http momentjs com docs get set set `5` but instead the day stays at `8` units are case insensitive and support plural and short forms year years month months date dates hour hours minute minutes second seconds millisecond milliseconds ms see also http jsfiddle net emb7q >>>documentation
test failed lang gl regression tests 848 client info lang gl regression tests 848 clock bug >>>unit_test_failed
isvalid returning false hi guys we re using version know we should update to the latest but im having problems validating certain date for some weird reason validating march 31 2014 is returning an invalid date moment 2014 02 31 isvalid returns overflow and any march 31 in other years returns back an invalid date too thanks and looking forward to your response >>>troubleshooting
30 of march 2014 returns very weird result unfortunately for very mistaken reason we re using moment js for our companies calendar and came up with this date being strangely wrong and messing up with our entire schedule for the wrong date 30 march 2014 this moment 2014 03 30 format dd returns 29 this issue is only on chrome 33 as far as am aware of the bug does not happens on firefox >>>troubleshooting
test failed lang zh cn calendar next week 1768 client info lang zh cn calendar next week 1768 today days beginning of day >>>unit_test_failed
test failed lang zh cn calendar next week 1768 client info lang zh cn calendar next week 1768 today days beginning of day >>>unit_test_failed
test failed lang zh cn calendar next week 1768 client info lang zh cn calendar next week 1768 today days beginning of day >>>unit_test_failed
test failed lang zh cn calendar next week 1768 client info lang zh cn calendar next week 1768 today days beginning of day >>>unit_test_failed
test failed lang zh cn calendar next week 1768 client info lang zh cn calendar next week 1768 today days beginning of day >>>unit_test_failed
test failed lang zh cn calendar next week 1768 client info lang zh cn calendar next week 1768 today days beginning of day >>>unit_test_failed
test failed lang zh cn calendar next week 1768 client info lang zh cn calendar next week 1768 today days beginning of day >>>unit_test_failed
test failed lang zh cn calendar next week 1768 client info lang zh cn calendar next week 1768 today days beginning of day >>>unit_test_failed
test failed lang zh cn calendar next week 1768 client info lang zh cn calendar next week 1768 today days beginning of day >>>unit_test_failed
moment 2014 03 20 dd mm yyyy true isvalid returns true moment 2014 03 20 dd mm yyyy true isvalid this is returning true was expecting it to return false am mistaken >>>troubleshooting
19 tests failed client info lang ca format month 407 gener gen lang ca format month 407 febrer febr lang ca format month 407 mar mar lang ca format month 407 abril abr lang ca format month 407 maig mai lang ca format month 407 juny jun lang ca format month 407 juliol jul lang ca format month 407 agost ag lang ca format month 407 setembre set lang ca format month 407 10 octubre oct lang ca format month 407 11 novembre nov lang ca format month 407 12 desembre des lang ca format week 408 diumenge dg dg lang ca format week 408 dilluns dl dl lang ca format week 408 dimarts dt dt lang ca format week 408 dimecres dc dc lang ca format week 408 dijous dj dj lang ca format week 408 divendres dv dv lang ca format week 408 dissabte ds ds >>>unit_test_failed
test failed add add across dst 10 client info add add across dst 10 adding days over dst difference should result in the same hour >>>unit_test_failed
67 tests failed preparse postformat calendar day 226 lang ar ma calendar day 314 lang ar calendar day 336 lang bg calendar day 358 lang br calendar day 380 lang bs calendar day 395 lang ca calendar day 416 lang cs calendar day 439 lang cv calendar day 462 lang cy same day 483 lang de calendar day 522 lang el calendar day 544 lang en au calendar day 566 lang en ca calendar day 588 lang en gb calendar day 610 lang en calendar day 632 lang eo calendar day 653 lang es calendar day 675 lang et calendar day 697 lang eu calendar day 719 lang fa calendar day 741 lang fi calendar day 763 lang fr ca same day 802 lang fr same day 823 lang gl calendar day 844 lang he calendar day 866 lang hi calendar day 888 lang hr calendar day 911 lang hu calendar day 933 lang hy am calendar day 960 lang id calendar day 981 lang is calendar day 1003 lang it calendar day 1024 lang ja calendar day 1045 client info preparse postformat calendar day 226 yesterday at the same time lang ar ma calendar day 314 yesterday at the same time lang ar calendar day 336 yesterday at the same time lang bg calendar day 358 yesterday at the same time lang br calendar day 380 yesterday at the same time >>>unit_test_failed
diff returns incorrect number if you do var tenyearsago moment subtract years 10 todate var yearsago moment diff tenyearsago years most of the time it returns 10 as you would expect however today mon mar 10 2014 10 21 40 gmt 0700 pdt noticed that it can sometimes return do understand that diff rounds down however even when there is 0ms between the date generation and the diff calculation there should still be exactly 10 years between the generated date and the current moment unless subtract has bug so there should never be any need to round down if subtract an extra hour from tenyearsago it fixes the bug given that daylight savings time just ended yesterday it really looks like this is some sort of dst related issue >>>troubleshooting
timezone offset wrong for central chicago days before daylight savings change my os time is four localhost date sat mar 22 14 55 cst 2014 four localhost utc time is currently sun mar 04 09 22 utc 2014 but in chromium browser with the code zone timedisplay format zz get zone 0500 this issue started happening about days ago have screen shots from my app that uses moment taken days ago to verify daylight savings time is happening tomorrow which brought my attention to it in which found after much investigation >>>troubleshooting
68 tests failed preparse postformat calendar day 226 lang ar ma calendar day 314 lang ar calendar day 336 lang bg calendar day 358 lang br calendar day 380 lang bs calendar day 395 lang ca calendar day 416 lang cs calendar day client info preparse postformat calendar day 226 tomorrow at the same time lang ar ma calendar day 314 tomorrow at the same time lang ar calendar day 336 tomorrow at the same time lang bg calendar day 358 tomorrow at the same time lang br calendar day 380 tomorrow at the same time >>>unit_test_failed
test failed lang zh cn calendar next week 1768 client info lang zh cn calendar next week 1768 today days beginning of day >>>unit_test_failed
test failed is before is before day 149 10 client info is before is before day 149 10 exact end of day >>>unit_test_failed
test failed lang zh cn calendar next week 1768 client info lang zh cn calendar next week 1768 today days beginning of day >>>unit_test_failed
invalid date parsing format not honoured was quite amazed parsing resulted in valid date when the format dd mm yyyy was given shouldn this give an invalid date what the use of parsing it to january 0000 http jsfiddle net kkby3 >>>forgiving_parsing
tests failed add add across dst 10 lang zh cn calendar next week 1768 client info add add across dst 10 adding days over dst difference should result in the same hour lang zh cn calendar next week 1768 today days beginning of day >>>unit_test_failed
test failed lang zh cn calendar next week 1768 client info lang zh cn calendar next week 1768 today days beginning of day >>>unit_test_failed
test failed add add across dst 10 client info add add across dst 10 adding days over dst difference should result in the same hour >>>unit_test_failed
more quarter support see that there some support for quarters it would be nice to also support this `moment startof quarter also would be nice to be able to parse string in format like yyyy but don see any quarter options listed on http momentjs com docs parsing string format >>>new_feature
test failed add add across dst 10 client info add add across dst 10 adding days over dst difference should result in the same hour >>>unit_test_failed
test failed add add across dst 10 client info add add across dst 10 adding days over dst difference should result in the same hour >>>unit_test_failed
add subtract issue hey not sure if anyone else had this issue but can seem to get any method of `moment` objects working if `console log` something like `moment subtract weeks it works fine but as soon as do variable assignment `var test moment subtract weeks it will throw an error `has no method subtract` any insight into why this is >>>troubleshooting
test failed diff diff between utc and local 63 client info diff diff between utc and local 63 year diff >>>unit_test_failed
error isoweekday weekday and day index and shows the same date 2014 10 11 and would have to show 2014 10 11 and 2014 10 12 example moment 2014 10 08 day format yyyy mm dd moment 2014 10 08 day format yyyy mm dd moment 2014 10 08 isoweekday format yyyy mm dd moment 2014 10 08 isoweekday format yyyy mm dd >>>troubleshooting
tests failed create string with format years 36 week year weekday first day of week sunday dow 253 client info create string with format years 36 70 1970 week year weekday first day of week sunday dow 253 jan 1970 is thursday 4th day >>>unit_test_failed
creating new utc moment without specifying hours produces non zero default hour moment 2013 07 14 minute moment 2013 07 14 utc minute moment 2013 07 14 hour moment utc 2013 07 14 hour 7>>>bug
cannot output partial dates when created with partial date creating moment an incomplete date but only want to output incomplete information as well get unexpected issues expected feb `moment feb mmm isvalid does correctly return false though just thought that moment would be able to handle imperfect data when asked for incomplete data out >>>troubleshooting
typo in documentation validation refers to flag unusedinput as unusedinputs the validation section http momentjs com docs parsing is valid of the documentation refers to the flag `unusedinput` as `unusedinputs` >>>documentation
add strip function to remove non critical moment properties we ve been adding properties to the moment object here and there and now most of them are used only at the parsing stage revealing information about what exactly got parsed and how but most users don care and if you happen to have big array of objects this also leads to higher memory footprint so lets add function `moment fn strip that would remove all unnecessary properties and keep only isamomentobject` isutc` l` d` offset` >>>enhancement
non gregorian calendars inside moment js on mediawiki date formatter easily can generate non gregorian calendars output this is copy of the related parts of mediawiki documentation https www mediawiki org wiki help extension parserfunctions 23time non gregorian calendars islamic xmj day of the month xmf full month name xmn month index xmy full year iranian jalaly xij day of the month xif full month name xin month index xiy full year xiy digit year hebrew xjj day of the month xjf full month name xjt number of days in month xjx genitive form of the month name xjn month number xjy full year thai solar xky full year minguo juche year xoy full year japanese nengo xty full year with considering this https github com wikimedia mediawiki core blob c2318e9d6b58d9191ce43588a82db8407e05170e languages language php l1116 and an example calendar algorithm https github com wikimedia mediawiki core blob c2318e9d6b58d9191ce43588a82db8407e05170e languages language php l1434 from mediawiki this is my proposal define separate folder script inside moment js project for implementing the actual calendar algorithm `xij` `xif` but do not affecting size of minimal default moment js original modules of extension calendars just include the english translation and locales modules handle the translation of needed calendars for locale fallback to english which provided by the algorithm itself when translation not available on specific locale module locale module defines their default date format with their related calendars similar to mediawiki date format convention what available on above table or same moment jalaali https github com jalaali moment jalaali with this design using iranian calendar on english and gregorian calendar on persian for example both use cases are important would be easy think if we decide about design implementing the needed change will be easier globalize also has https github com jquery globalize blob 195f3f4b3725c9fd9cdc0014f61016de34b0076a lib cultures globalize culture fa ir js support of persian calendar for example thank you and sorry about spell grammar facts errors available>>>enhancement
optimize the two hottest functions speedup roughly 25 on the unit tests >>>performance
add option to default to highest possible date when parsing incomplete dates such as 2014 or 2014 05 moment will always default to the lowest possible date so 2014 becomes 2014 01 01 00 00 etc would it be sensible to add an option to instead default it to the highest possible value so that 2014 becomes 2014 12 13 23 59 59 and 2014 06 becomes 2014 06 30 23 59 59 etc one use case have in mind in mind is when you have deadlines in various date formats and of various completeness and you want to order them by earliest deadline first in this case if when someone says deadline may 2014 it probably makes more sense at least for sorting to interpret it as 2014 05 31 instead of as 2014 05 01 perhaps this is outside the scope of momentjs though just an idea >>>enhancement
startof day endof day not correct with utc when using local time the startof day endof day function works as expected but when use utc time the value is treated like local time http jsfiddle net 3d9eu moment lang nl var t1 moment localtime var t2 t1 clone utc utc console log loc valueof t1 valueof 1390557395517 ok console log utc valueof t2 valueof 1390557395517 ok console log loc end of day valueof t1 endof day valueof 1390604399999 ok console log utc end of day valueof t2 endof day valueof 1390607999999 not ok console log loc end of day t1 endof day fri jan 24 2014 23 59 59 gmt 0100 europe standard time ok console log utc end of day t2 endof day sat jan 25 2014 00 59 59 gmt 0100 europe standard time not ok best regards bjrn>>>troubleshooting
add days returns same date in gmt 03 00 but not in other timezones given this code var moment new date 2014 18 console log tostring console log add days tostring outputs as expected in gmt and gmt but in gmt the following output occurs sat oct 18 2014 00 00 00 gmt 0300 script js sat oct 18 2014 00 00 00 gmt 0300 script js here is plunker to evaluate http plnkr co edit ipjuoghmiwomvn4qb0ge preview in reference to this stack overflow question http stackoverflow com 21318357 1085699 >>>troubleshooting
tests failed create string with format years 36 week year weekday first day of week sunday dow 253 client info create string with format years 36 70 1970 week year weekday first day of week sunday dow 253 jan 1970 is thursday 4th day >>>unit_test_failed
add usage instructions with webpack add to the section where to use it http momentjs com docs use it instructions for properly integrating moment js with webpack http webpack github io docs `require momentjs moment js causes several errors like this `require momentjs min moment with langs js causes this warning >>>documentation
more natural time ago expression for european portuguese locale it seems more natural to express the concept of times in the past as something like dez anos ten years ago rather than the somewhat formal sounding dez anos atrs which also gives the impression that it is the beginning of phrase and not standalone would welcome discussion >>>language
tests failed format toisostring 112 format toisostring 112 format toisostring 112 client info format toisostring 112 iso8601 format on big positive year format toisostring 112 iso8601 format on big positive year format toisostring 112 iso8601 format on big positive year >>>unit_test_failed
tests failed format toisostring 112 format toisostring 112 format toisostring 112 client info format toisostring 112 iso8601 format on big positive year format toisostring 112 iso8601 format on big positive year format toisostring 112 iso8601 format on big positive year >>>unit_test_failed
test failed create parsing week and weekday information 50 50 client info create parsing week and weekday information 50 50 compare small years work >>>unit_test_failed
danish date time formats needs adjustment the internationalization formats use the wrong separators and punction needs adjustment it should read 19 01 2014 19 2014 19 januar 2014 19 jan 2014 19 januar 2014 12 35 19 jan 2014 12 35 sndag 19 januar 2014 12 35 sn 19 jan 2014 12 35>>>language
changed longdateformat of lt to right format used in czech language and renamed vteina to sekunda because vteina is not time unit but unit of arc >>>language
litunanian day names in calendars with weeks not starting on monday in the lithuanian localization the weekday names logic is different for the full day names and the shortened day names due to declination this is ok when the lithuanian weekdays numbering is used week starts on monday however when calendar is used where the week starts on another day the full weekday names are shifted the abbreviated names stay correct the change uses the isoweekday for the weekday name declination >>>language
chrome crash aw snap error chrome version 32 1700 77 moment js version moment timezone js version run below code in chrome browser multiple page refreshes could be required to reproduce error this has something to do with js execution optimizations if you change order of properties in moment makemoment function call to the same as in moment utc function problem is gone think this is bug in chrome but you can fix it easily in your library >>>bug
tests failed add add across dst 10 create parsing week and weekday information 50 50 client info add add across dst 10 adding days over dst difference should result in the same hour create parsing week and weekday information 50 50 compare small years work >>>bug unit_test_failed
calendar displays wrong relative date using moment with languages the unix time 1389172279000 is `wed jan 08 2014 09 11 19` today is `fri jan 10 2014 05 54 54` when supplied to `moment calendar 1389172279000 the output is `last wednesday at 11 pm` in local gmt time in english 11` same gmt but in korean `` means last week not this week which in the current context is not correct it should be this week wednesday even in english `last` refers to last week doubted this so checked your source code which has the follow code moment lang en calendar lastday yesterday at lt sameday today at lt nextday tomorrow at lt lastweek last dddd at lt nextweek dddd at lt sameelse korean localization has similar code calendar sameday lt nextday lt nextweek dddd lt lastday lt lastweek dddd lt sameelse the code clearly points that the word `last` means `lastweek` thus wednesday 08 two days ago from today friday is definitely not last week >>>bug language troubleshooting
be careful when falling back to date constructor if you clicked on the warning link and landed here `moment` construction using non iso string is deprecated what this means is you can safely do but you can do reliably therefore its being deprecated in the upcoming releases few more well defined formats might be added but the general idea of using any random string to construct date is no more if you really want that behavior just do `moment new date random string that contains date but `moment` won be responsible for such convertions read below for the rationale about the change as described in https github com moment moment issues 1403 issuecomment 31961590 but also recent debugging c4d9f6e and 94d6c90 caused by https travis ci org moment moment builds 16672288 brings me to the conclusion that using `date` to create moment from string passed from the user is extremely unpredictable and it turns out to work somewhat and then bite you in an edge case when you re not careful so think we need an option to disable it for tests at the very least ve debugged that numerous times thank to our old friend ie6 and friends you pass string only hoping that it would hit one of the predefined formats but instead it hits date and it sort of works sometimes think it should be clear to users when they re hitting this case and that it might not work well on all browsers the only use case for using date to parse input is when it is entered by web user moment user user and the web user can see how we re interpreting the date entered every other case is just silently waiting to break at some point >>>enhancement
adding one month to date doesn seem to account for dst properly if you add one month one month to date that pushes it over dst boundry it doesn seem to calculate things right var example moment tz europe london month date hour minute second millisecond example tostring wed oct 01 2014 00 00 00 gmt 0100 example add months example tostring fri oct 31 2014 00 00 00 gmt 0000 was expecting the result to be sat nov 01 2014 00 00 00 gmt 0000 cheers dave >>>bug
rangeerror when creating moment from cloned object if you clone moment using other libraries such as underscorejs clone method or knockoutjs tojs method and then try to convert this back to moment you get an infinite recursion steps to reproduce example more realistic case where this happens is if you use something like knockout postbox which internally calls json stringify ko tojs value ko tojs clones the moment to an object but retains the tojson method json stringify then tries to call the tojson method moment tojson method then tries to clone this before converting to utc unfortunately this is no longer moment the code for this would look something like this this makes it far less obvious that the moment has been cloned to plain object expected behaviour either moment should support moments that have been cloned incorrectly by other libraries or more meaningful exception should be thrown rather than causing stack overflow >>>bug
format string broken in strict parsing hit an unexpected error when using to parse 24h time values without leading zero var moment require moment undefined moment version moment format 17 var parsed moment 17 undefined parsed isvalid true var parsed moment 17 true undefined parsed isvalid false would expect `h` to be usable here so that the code can also work with times before noon >>>bug
cannot find node binary installed node locally to home opt node` when run `npm install moment` get the following error all other node modules install fine >>>troubleshooting
tests failed format toisostring 112 format toisostring 112 format toisostring 112 client info format toisostring 112 iso8601 format on big positive year format toisostring 112 iso8601 format on big positive year format toisostring 112 iso8601 format on big positive year >>>unit_test_failed
tests failed getters setters setters programatic with weeks iso 131 getters setters setters programatic with weeks iso 131 client info getters setters setters programatic with weeks iso 131 getters setters setters programatic with weeks iso 131 >>>unit_test_failed
tests failed getters setters setters programatic with weeks 130 getters setters setters programatic with weeks iso 131 getters setters setters programatic with weeks iso 131 client info getters setters setters programatic with weeks 130 getters setters setters programatic with weeks iso 131 getters setters setters programatic with weeks iso 131 >>>unit_test_failed
tests failed getters setters setters programatic with weeks iso 131 getters setters setters programatic with weeks iso 131 client info getters setters setters programatic with weeks iso 131 getters setters setters programatic with weeks iso 131 >>>unit_test_failed
tests failed format toisostring 112 format toisostring 112 format toisostring 112 getters setters setters programatic with weeks 130 getters setters setters programatic with weeks iso 131 getters setters setters programatic with wee client info format toisostring 112 iso8601 format on big positive year format toisostring 112 iso8601 format on big positive year format toisostring 112 iso8601 format on big positive year getters setters setters programatic with weeks 130 getters setters setters programatic with weeks iso 131 getters setters setters programatic with weeks iso 131 >>>unit_test_failed
tests failed create parsing week and weekday information 50 50 getters setters setters programatic with weeks 130 client info create parsing week and weekday information 50 50 compare small years work getters setters setters programatic with weeks 130 >>>unit_test_failed
test failed getters setters setters programatic with weeks 130 client info getters setters setters programatic with weeks 130 >>>unit_test_failed
weekyear setter is wrong the logic in weekyear year is get the current weekyear subtract `current week year year` years think this particular setter should preserve the week and the weekday as the `year` setter preserves `month` and `date` then rewrite the test to first set `weekday` then `week` then `weekyear` moreover we should provide setter for all three because certain combinations are impossible >>>bug
tests failed create parsing week and weekday information 50 50 is before is before day 150 10 client info create parsing week and weekday information 50 50 compare small years work is before is before day 150 10 exact end of day >>>unit_test_failed
tests failed format toisostring 112 format toisostring 112 format toisostring 112 not sure if it being addressed already so here it is client info format toisostring 112 iso8601 format on big positive year format toisostring 112 iso8601 format on big positive year format toisostring 112 iso8601 format on big positive year >>>unit_test_failed
tests failed format toisostring 112 format toisostring 112 format toisostring 112 client info format toisostring 112 iso8601 format on big positive year format toisostring 112 iso8601 format on big positive year format toisostring 112 iso8601 format on big positive year >>>unit_test_failed
converting to json and back gives wrong date ran into scenario where was getting the start of the day converting to json then later creating new moment object from the json string the new object is off by the timezone that you are in think the following code illustrates what trying to say var moment var json startof day tojson var m2 moment json date m2 date the final line returns false in chrome but true in ie >>>troubleshooting
meridiem parser support for korean found that almost of language datas can support parse meridiem correctly now made fix and test case for korean language data before this fix pm value moment ko format hh 02 with this fix pm value moment ko format hh 14>>>language
parsezone issame inconsistency hello am in `europe london` timezone we have to make sure that whatever date we receive from ajax calls will be displayed according to their set time zone with the offset visible we use `parsezone` to do that using momentjs we observed that when using `parsezone` the `issame` comparison with another date is not working if the compared to date is not in the same time zone even if the comparison would hold true please find the fiddle here http jsfiddle net f44c6 one workaround would be to convert both times to utc before doing the comparison but feel that this behaviour is not intuitive could the `issame` code compare the dates using utc by default or is there reason to not do so >>>bug
test failed lang zh cn calendar next week 1655 client info lang zh cn calendar next week 1655 today days beginning of day >>>unit_test_failed
test failed add add across dst 10 client info add add across dst 10 adding days over dst difference should result in the same hour >>>unit_test_failed
tests failed create string with format years 35 week year weekday first day of week sunday dow 248 client info create string with format years 35 70 1970 week year weekday first day of week sunday dow 248 jan 1970 is thursday 4th day >>>troubleshooting unit_test_failed
test failed lang zh cn calendar next week 1655 client info lang zh cn calendar next week 1655 today days beginning of day >>>unit_test_failed
test failed utc creating with utc 242 client info utc creating with utc 242 calling moment utc should default to the current time >>>bug unit_test_failed
armenian language>>>language needs_tests
setting day of week to prevents correct formatting of do under normal usage using moment format do results in the documented results 2nd or 26th however specifying day of week using will result in moment format do producing unexpected output the output is seems to be essentially the same as using moment format example http jsfiddle net sh86a >>>bug
italian months should not be written in upper case this links proves it http wiki answers com are the italian months written in upper case slide2 also my native italian colleague translator says exactly the same can just send pull request or somebody needs to approve it any italian devs here >>>language todo
format returns one week less for years 100 why is ``m 0098 52 yyyy ww format yyyy ww 0098 51 `` between year and 100 format yyyy ww returns one week less than actually set is this bug >>>bug
diff between utc and local failed locale is asia kolkata ist >>>bug
changed longdateformat of lt to right format used in czech republic see http en wikipedia org wiki date and time notation in the czech republic>>>language
test failed is before is before day 147 10 client info is before is before day 147 10 exact end of day >>>troubleshooting unit_test_failed
tests failed create string with format years 35 week year weekday first day of week sunday dow 248 client info create string with format years 35 70 1970 week year weekday first day of week sunday dow 248 jan 1970 is thursday 4th day >>>troubleshooting unit_test_failed
clarify isoweekday documentation think we should rephrase the documentation to clarify what isoweekday does because at least one other person excluding myself has thought it sets the starting day of the week instead of changing the date current gets or sets the iso day of the week with being monday and being sunday proposed gets or sets the date according to the iso day of the week with being monday and being sunday thanks >>>documentation
add support for quarters in format string if the current date is november 25th 2013 moment format yyyy should give q4 2013 currently don see any way to print the quarter using just format strings >>>new_feature
test failed lang zh cn calendar next week 1655 client info lang zh cn calendar next week 1655 today days beginning of day >>>unit_test_failed
test failed lang zh cn calendar next week 1655 client info lang zh cn calendar next week 1655 today days beginning of day >>>unit_test_failed
supported way to retrieve language data there should be something in the api to retrieve the localized formats from the language data for example if have moment 01 02 2013 like to know based on the current global language settings if this is mm dd yyyy or dd mm yyyy might want to display that near textbox so the user has hint of what to enter can get at this right now with moment langdata longdateformat but that seems like hack there should be something built in >>>documentation
update it js few seconds translate to alcuni secondi >>>language needs_tests
weeksinyear hi is there weeks in year function we use this internally at the moment weekcount function year var moment year 01 04 00 00 000 yyyy mm dd hh mm subtract days return isoweek kasper>>>new_feature todo
rename language lang to locale language lang should be renamed to locale because we are not really dealing with languages here the same language can be used in different countries but still have different requirements for date formatting depending on the location this is exactly what locales are for they are combination of language and location the current language system actually already uses locales but they are called languages which is wrong and may cause confusion of course this would cause some backwards incompatibility so perhaps it makes sense to alias `locale` function to `lang` for some time >>>enhancement
documentation file sizes are approx 3x bigger than announced on the main page announced moment min js 9kb real 24kb announced moment with langs min js 30 6kb real 109kb >>>documentation
test failed add add across dst 10 client info add add across dst 10 adding days over dst difference should result in the same hour >>>unit_test_failed
romanian add to short month names romanians use to show abbreviations so it should be ian instead of ian for january pull request coming >>>language
romanian fix short month names these changes should be made ll create pull request soon feb febr http dexonline ro definitie februarie mar mart http dexonline ro definitie martie sep sept http dexonline ro definitie septembrie noi nov http dexonline ro definitie noiembrie links to online romanian dictionary search for abr abbreviation ll create pull request soon le added all of the linkes>>>language
test failed lang zh cn calendar next week 1655 client info lang zh cn calendar next week 1655 today days beginning of day >>>unit_test_failed
test failed lang zh cn calendar next week 1655 client info lang zh cn calendar next week 1655 today days beginning of day >>>unit_test_failed
test failed lang zh cn calendar next week 1655 client info lang zh cn calendar next week 1655 today days beginning of day >>>unit_test_failed
test failed add add across dst 10 client info add add across dst 10 adding days over dst difference should result in the same hour >>>unit_test_failed
972 tests failed moment timezone 972 tests failed africa juba 1981 255 africa juba 1981 255 africa juba 1982 256 africa juba 1982 256 africa juba 1983 257 africa juba 1983 257 africa juba 1984 258 africa juba 1984 258 africa khartoum 1981 277 africa khartoum 1981 277 africa khartoum 1982 278 africa khartoum 1982 278 africa khartoum 1983 279 africa khartoum 1983 279 africa khartoum 1984 280 africa khartoum 1984 280 america adak 1981 440 america adak 1981 440 america adak 1982 441 america adak 1982 441 america adak 1983 442 america adak 1983 442 america adak 1984 443 america adak 1984 443 america anchorage 1981 512 america anchorage 1981 512 america anchorage 1982 513 america anchorage 1982 513 america anchorage 1983 514 america anchorage 1983 514 america anchorage 1984 515 america anchorage 1984 515 america boise 1981 1294 america boise 1981 1294 america boise 1982 1295 america boise 1982 1295 america boise 1983 1296 america boise 1983 1296 america boise 1984 1297 america boise 1984 1297 america cambridge bay 1981 1357 america cambridge bay 1981 1357 america cambridge bay 1982 1358 america cambridge bay 1982 1358 america cambridge bay 1983 1359 america cambridge bay 1983 1359 america cambridge bay 1984 1360 america cambridge bay 1984 1360 america chicago 1925 1539 america chicago 1925 1539 america chicago 1928 1542 america chicago 1928 1542 america chicago 1931 1545 america chicago 1931 1545 america chicago 1953 1565 america chicago 1953 1565 america chicago 1956 1568 america chicago 1956 1568 america chicago 1959 1571 america chicago 1959 1571 america chicago 1981 1593 america chicago 1981 1593 america chicago 1982 1594 america chicago 1982 1594 america chicago 1983 1595 america chicago 1983 1595 america chicago 1984 1596 america chicago 1984 1596 america danmarkshavn 1981 1776 america danmarkshavn 1981 1776 america danmarkshavn 1982 1777 america danmarkshavn 1982 1777 america danmarkshavn 1983 1778 america danmarkshavn 1983 1778 america danmarkshavn 1984 1779 america danmarkshavn 1984 1779 america dawson 1981 1799 america dawson 1981 1799 america dawson 1982 1800 america dawson 1982 1800 america dawson 1983 1801 america dawson 1983 1801 america dawson 1984 1802 america dawson 1984 1802 america dawson creek 1953 1865 america dawson creek 1953 1865 america dawson creek 1956 1868 america dawson creek 1956 1868 america dawson creek 1959 1871 america dawson creek 1959 1871 america denver 1981 1907 america denver 1981 1907 america denver 1982 1908 america denver 1982 1908 america denver 1983 1909 america denver 1983 1909 america denver 1984 1910 america denver 1984 1910 america detroit 1981 1978 america detroit 1981 1978 america detroit 1982 1979 america detroit 1982 1979 america detroit 1983 1980 america detroit 1983 1980 america detroit 1984 1981 america detroit 1984 1981 america edmonton 1981 2057 america edmonton 1981 2057 america edmonton 1982 2058 america edmonton 1982 2058 america edmonton 1983 2059 america edmonton 1983 2059 america edmonton 1984 2060 america edmonton 1984 2060 america glace bay 1953 2168 america glace bay 1953 2168 america glace bay 1981 2178 america glace bay 1981 2178 america glace bay 1982 2179 america glace bay 1982 2179 america glace bay 1983 2180 america glace bay 1983 2180 america glace bay 1984 2181 america glace bay 1984 2181 america godthab 1981 2237 america godthab 1981 2237 america godthab 1982 2238 america godthab 1982 2238 america godthab 1983 2239 america godthab 1983 2239 america godthab 1984 2240 america godthab 1984 2240 america goose bay 1953 2311 america goose bay 1953 2311 america goose bay 1956 2314 america goose bay 1956 2314 america goose bay 1959 2317 america goose bay 1959 2317 america goose bay 1981 2339 america goose bay 1981 2339 america goose bay 1982 2340 america goose bay 1982 2340 america goose bay 1983 2341 america goose bay 1983 2341 america goose bay 1984 2342 america goose bay 1984 2342 america grand turk 1981 2399 america grand turk 1981 2399 america grand turk 1982 2400 america grand turk 1982 2400 america grand turk 1983 2401 america grand turk 1983 2401 america grand turk 1984 2402 america grand turk 1984 2402 america halifax 1953 2502 america halifax 1953 2502 america halifax 1956 2504 america halifax 1956 2504 america halifax 1959 2507 america halifax 1959 2507 america halifax 1981 2527 america halifax 1981 2527 america halifax 1982 2528 america halifax 1982 2528 america halifax 1983 2529 america halifax 1983 2529 america halifax 1984 2530 america halifax 1984 2530 america indiana indianapolis 1953 2686 america indiana indianapolis 1953 2686 america indiana knox 1953 2735 america indiana knox 1953 2735 america indiana knox 1956 2738 america indiana knox 1956 2738 america indiana knox 1959 2741 america indiana knox 1959 2741 america indiana knox 1981 2760 america indiana knox 1981 2760 america indiana knox 1982 2761 america indiana knox 1982 2761 america indiana knox 1983 2762 america indiana knox 1983 2762 america indiana knox 1984 2763 america indiana knox 1984 2763 america indiana marengo 1956 2810 america indiana marengo 1956 2810 america indiana marengo 1959 2813 america indiana marengo 1959 2813 america indiana petersburg 1956 2860 america indiana petersburg 1956 2860 america indiana petersburg 1959 2863 america indiana petersburg 1959 2863 america indiana tell city 1953 2919 america indiana tell city 1953 2919 america indiana tell city 1956 2922 america indiana tell city 1956 2922 america indiana tell city 1959 2925 america indiana tell city 1959 2925 america indiana vincennes 1953 3011 america indiana vincennes 1953 3011 america indiana vincennes 1956 3014 america indiana vincennes 1956 3014 america indiana vincennes 1959 3017 america indiana vincennes 1959 3017 america indiana winamac 1953 3068 america indiana winamac 1953 3068 america indiana winamac 1956 3071 america indiana winamac 1956 3071 america indiana winamac 1959 3074 america indiana winamac 1959 3074 america inuvik 1981 3116 america inuvik 1981 3116 america inuvik 1982 3117 america inuvik 1982 3117 america inuvik 1983 3118 america inuvik 1983 3118 america inuvik 1984 3119 america inuvik 1984 3119 america iqaluit 1981 3177 america iqaluit 1981 3177 america iqaluit 1982 3178 america iqaluit 1982 3178 america iqaluit 1983 3179 america iqaluit 1983 3179 america iqaluit 1984 3180 america iqaluit 1984 3180 america jamaica 1981 3242 america jamaica 1981 3242 america jamaica 1982 3243 america jamaica 1982 3243 america jamaica 1983 3244 america jamaica 1983 3244 america juneau 1981 3259 america juneau 1981 3259 america juneau 1982 3260 america juneau 1982 3260 america juneau 1983 3261 america juneau 1983 3261 america juneau 1984 3262 america juneau 1984 3262 america kentucky louisville 1953 3327 america kentucky louisville 1953 3327 america kentucky louisville 1956 3330 america kentucky louisville 1956 3330 america kentucky louisville 1959 3333 america kentucky louisville 1959 3333 america kentucky louisville 1981 3349 america kentucky louisville 1981 3349 america kentucky louisville 1982 3350 america kentucky louisville 1982 3350 america kentucky louisville 1983 3351 america kentucky louisville 1983 3351 america kentucky louisville 1984 3352 america kentucky louisville 1984 3352 america kentucky monticello 1981 3423 america kentucky monticello 1981 3423 america kentucky monticello 1982 3424 america kentucky monticello 1982 3424 america kentucky monticello 1983 3425 america kentucky monticello 1983 3425 america kentucky monticello 1984 3426 america kentucky monticello 1984 3426 america los angeles 1953 3499 america los angeles 1953 3499 america los angeles 1956 3502 america los angeles 1956 3502 america los angeles 1959 3505 america los angeles 1959 3505 america los angeles 1981 3527 america los angeles 1981 3527 america los angeles 1982 3528 america los angeles 1982 3528 america los angeles 1983 3529 america los angeles 1983 3529 america los angeles 1984 3530 america los angeles 1984 3530 america menominee 1981 3753 america menominee 1981 3753 america menominee 1982 3754 america menominee 1982 3754 america menominee 1983 3755 america menominee 1983 3755 america menominee 1984 3756 america menominee 1984 3756 america metlakatla 1981 3869 america metlakatla 1981 3869 america metlakatla 1982 3870 america metlakatla 1982 3870 america metlakatla 1983 3871 america metlakatla 1983 3871 america moncton 1953 3998 america moncton 1953 3998 america moncton 1956 4001 america moncton 1956 4001 america moncton 1959 4004 america moncton 1959 4004 america moncton 1981 4025 america moncton 1981 4025 america moncton 1982 4026 america moncton 1982 4026 america moncton 1983 4027 america moncton 1983 4027 america moncton 1984 4028 america moncton 1984 4028 america montreal 1928 4208 america montreal 1928 4208 america montreal 1931 4211 america montreal 1931 4211 america montreal 1953 4230 america montreal 1953 4230 america montreal 1956 4233 america montreal 1956 4233 america montreal 1959 4236 america montreal 1959 4236 america montreal 1981 4258 america montreal 1981 4258 america montreal 1982 4259 america montreal 1982 4259 america montreal 1983 4260 america montreal 1983 4260 america montreal 1984 4261 america montreal 1984 4261 america nassau 1981 4334 america nassau 1981 4334 america nassau 1982 4335 america nassau 1982 4335 america nassau 1983 4336 america nassau 1983 4336 america nassau 1984 4337 america nassau 1984 4337 america new york 1925 4398 america new york 1925 4398 america new york 1928 4401 america new york 1928 4401 america new york 1931 4404 america new york 1931 4404 america new york 1953 4424 america new york 1953 4424 america new york 1956 4427 america new york 1956 4427 america new york 1959 4430 america new york 1959 4430 america new york 1981 4452 america new york 1981 4452 america new york 1982 4453 america new york 1982 4453 america new york 1983 4454 america new york 1983 4454 america new york 1984 4455 america new york 1984 4455 america nipigon 1981 4520 america nipigon 1981 4520 america nipigon 1982 4521 america nipigon 1982 4521 america nipigon 1983 4522 america nipigon 1983 4522 america nipigon 1984 4523 america nipigon 1984 4523 america nome 1981 4592 america nome 1981 4592 america nome 1982 4593 america nome 1982 4593 america nome 1983 4594 america nome 1983 4594 america nome 1984 4595 america nome 1984 4595 america north dakota beulah 1981 4692 america north dakota beulah 1981 4692 america north dakota beulah 1982 4693 america north dakota beulah 1982 4693 america north dakota beulah 1983 4694 america north dakota beulah 1983 4694 america north dakota beulah 1984 4695 america north dakota beulah 1984 4695 america north dakota center 1981 4767 america north dakota center 1981 4767 america north dakota center 1982 4768 america north dakota center 1982 4768 america north dakota center 1983 4769 america north dakota center 1983 4769 america north dakota center 1984 4770 america north dakota center 1984 4770 america north dakota new salem 1981 4842 america north dakota new salem 1981 4842 america north dakota new salem 1982 4843 america north dakota new salem 1982 4843 america north dakota new salem 1983 4844 america north dakota new salem 1983 4844 america north dakota new salem 1984 4845 america north dakota new salem 1984 4845 america pangnirtung 1981 4953 america pangnirtung 1981 4953 america pangnirtung 1982 4954 america pangnirtung 1982 4954 america pangnirtung 1983 4955 america pangnirtung 1983 4955 america pangnirtung 1984 4956 america pangnirtung 1984 4956 america port au prince 1984 5022 america port au prince 1984 5022 america rainy river 1981 5097 america rainy river 1981 5097 america rainy river 1982 5098 america rainy river 1982 5098 america rainy river 1983 5099 america rainy river 1983 5099 america rainy river 1984 5100 america rainy river 1984 5100 america rankin inlet 1981 5158 america rankin inlet 1981 5158 america rankin inlet 1982 5159 america rankin inlet 1982 5159 america rankin inlet 1983 5160 america rankin inlet 1983 5160 america rankin inlet 1984 5161 america rankin inlet 1984 5161 america regina 1953 5261 america regina 1953 5261 america regina 1956 5264 america regina 1956 5264 america regina 1959 5266 america regina 1959 5266 america resolute 1981 5271 america resolute 1981 5271 america resolute 1982 5272 america resolute 1982 5272 america resolute 1983 5273 america resolute 1983 5273 america resolute 1984 5274 america resolute 1984 5274 america santa isabel 1956 5359 america santa isabel 1956 5359 america santa isabel 1959 5362 america santa isabel 1959 5362 america santa isabel 1981 5369 america santa isabel 1981 5369 america santa isabel 1982 5370 america santa isabel 1982 5370 america santa isabel 1983 5371 america santa isabel 1983 5371 america santa isabel 1984 5372 america santa isabel 1984 5372 america scoresbysund 1981 5609 america scoresbysund 1981 5609 america scoresbysund 1982 5610 america scoresbysund 1982 5610 america scoresbysund 1983 5611 america scoresbysund 1983 5611 america scoresbysund 1984 5612 america scoresbysund 1984 5612 america sitka 1981 5680 america sitka 1981 5680 america sitka 1982 5681 america sitka 1982 5681 america sitka 1983 5682 america sitka 1983 5682 america sitka 1984 5683 america sitka 1984 5683 america st johns 1953 5771 america st johns 1953 5771 america st johns 1956 5774 america st johns 1956 5774 america st johns 1959 5777 america st johns 1959 5777 america st johns 1981 5799 america st johns 1981 5799 america st johns 1982 5800 america st johns 1982 5800 america st johns 1983 5801 america st johns 1983 5801 america st johns 1984 5802 america st johns 1984 5802 america swift current 1959 5869 america swift current 1959 5869 america thunder bay 1981 5938 america thunder bay 1981 5938 america thunder bay 1982 5939 america thunder bay 1982 5939 america thunder bay 1983 5940 america thunder bay 1983 5940 america thunder bay 1984 5941 america thunder bay 1984 5941 america tijuana 1956 6006 america tijuana 1956 6006 america tijuana 1959 6009 america tijuana 1959 6009 america tijuana 1981 6016 america tijuana 1981 6016 america tijuana 1982 6017 america tijuana 1982 6017 america tijuana 1983 6018 america tijuana 1983 6018 america tijuana 1984 6019 america tijuana 1984 6019 america toronto 1928 6083 america toronto 1928 6083 america toronto 1931 6086 america toronto 1931 6086 america toronto 1953 6105 america toronto 1953 6105 america toronto 1956 6108 america toronto 1956 6108 america toronto 1959 6111 america toronto 1959 6111 america toronto 1981 6133 america toronto 1981 6133 america toronto 1982 6134 america toronto 1982 6134 america toronto 1983 6135 america toronto 1983 6135 america toronto 1984 6136 america toronto 1984 6136 america vancouver 1953 6201 america vancouver 1953 6201 america vancouver 1956 6204 america vancouver 1956 6204 america vancouver 1959 6207 america vancouver 1959 6207 america vancouver 1981 6229 america vancouver 1981 6229 america vancouver 1982 6230 america vancouver 1982 6230 america vancouver 1983 6231 america vancouver 1983 6231 america vancouver 1984 6232 america vancouver 1984 6232 america whitehorse 1981 6293 america whitehorse 1981 6293 america whitehorse 1982 6294 america whitehorse 1982 6294 america whitehorse 1983 6295 america whitehorse 1983 6295 america whitehorse 1984 6296 america whitehorse 1984 6296 america winnipeg 1953 6362 america winnipeg 1953 6362 america winnipeg 1956 6365 america winnipeg 1956 6365 america winnipeg 1959 6368 america winnipeg 1959 6368 america winnipeg 1981 6386 america winnipeg 1981 6386 america winnipeg 1982 6387 america winnipeg 1982 6387 america winnipeg 1983 6388 america winnipeg 1983 6388 america winnipeg 1984 6389 america winnipeg 1984 6389 america yakutat 1981 6457 america yakutat 1981 6457 america yakutat 1982 6458 america yakutat 1982 6458 america yakutat 1983 6459 america yakutat 1983 6459 america yakutat 1984 6460 america yakutat 1984 6460 america yellowknife 1981 6520 america yellowknife 1981 6520 america yellowknife 1982 6521 america yellowknife 1982 6521 america yellowknife 1983 6522 america yellowknife 1983 6522 america yellowknife 1984 6523 america yellowknife 1984 6523 antarctica macquarie 1982 6613 antarctica macquarie 1982 6613 antarctica macquarie 1983 6614 antarctica macquarie 1983 6614 asia hong kong 1953 7455 asia hong kong 1953 7455 asia nicosia 1981 7834 asia nicosia 1981 7834 asia nicosia 1982 7835 asia nicosia 1982 7835 asia nicosia 1983 7836 asia nicosia 1983 7836 asia nicosia 1984 7837 asia nicosia 1984 7837 atlantic azores 1953 8489 atlantic azores 1953 8489 atlantic azores 1956 8492 atlantic azores 1956 8492 atlantic azores 1959 8495 atlantic azores 1959 8495 atlantic azores 1981 8507 atlantic azores 1981 8507 atlantic azores 1982 8508 atlantic azores 1982 8508 atlantic azores 1983 8509 atlantic azores 1983 8509 atlantic azores 1984 8510 atlantic azores 1984 8510 atlantic bermuda 1981 8572 atlantic bermuda 1981 8572 atlantic bermuda 1982 8573 atlantic bermuda 1982 8573 atlantic bermuda 1983 8574 atlantic bermuda 1983 8574 atlantic bermuda 1984 8575 atlantic bermuda 1984 8575 atlantic canary 1981 8632 atlantic canary 1981 8632 atlantic canary 1982 8633 atlantic canary 1982 8633 atlantic canary 1983 8634 atlantic canary 1983 8634 atlantic canary 1984 8635 atlantic canary 1984 8635 atlantic faroe 1981 8694 atlantic faroe 1981 8694 atlantic faroe 1982 8695 atlantic faroe 1982 8695 atlantic faroe 1983 8696 atlantic faroe 1983 8696 atlantic faroe 1984 8697 atlantic faroe 1984 8697 atlantic madeira 1953 8783 atlantic madeira 1953 8783 atlantic madeira 1956 8786 atlantic madeira 1956 8786 atlantic madeira 1959 8789 atlantic madeira 1959 8789 atlantic madeira 1981 8801 atlantic madeira 1981 8801 atlantic madeira 1982 8802 atlantic madeira 1982 8802 atlantic madeira 1983 8803 atlantic madeira 1983 8803 atlantic madeira 1984 8804 atlantic madeira 1984 8804 atlantic reykjavik 1953 8875 atlantic reykjavik 1953 8875 atlantic reykjavik 1956 8878 atlantic reykjavik 1956 8878 atlantic reykjavik 1959 8881 atlantic reykjavik 1959 8881 atlantic stanley 1984 8901 atlantic stanley 1984 8901 australia broken hill 1982 9030 australia broken hill 1982 9030 australia currie 1982 9103 australia currie 1982 9103 australia currie 1983 9104 australia currie 1983 9104 australia hobart 1982 9201 australia hobart 1982 9201 australia hobart 1983 9202 australia hobart 1983 9202 australia sydney 1982 9433 australia sydney 1982 9433 cet 1981 9501 cet 1981 9501 cet 1982 9502 cet 1982 9502 cet 1983 9503 cet 1983 9503 cet 1984 9504 cet 1984 9504 cst6cdt 1981 9576 cst6cdt 1981 9576 cst6cdt 1982 9577 cst6cdt 1982 9577 cst6cdt 1983 9578 cst6cdt 1983 9578 cst6cdt 1984 9579 cst6cdt 1984 9579 eet 1981 9637 eet 1981 9637 eet 1982 9638 eet 1982 9638 eet 1983 9639 eet 1983 9639 eet 1984 9640 eet 1984 9640 est5edt 1981 9712 est5edt 1981 9712 est5edt 1982 9713 est5edt 1982 9713 est5edt 1983 9714 est5edt 1983 9714 est5edt 1984 9715 est5edt 1984 9715 europe amsterdam 1981 9802 europe amsterdam 1981 9802 europe amsterdam 1982 9803 europe amsterdam 1982 9803 europe amsterdam 1983 9804 europe amsterdam 1983 9804 europe amsterdam 1984 9805 europe amsterdam 1984 9805 europe athens 1981 9926 europe athens 1981 9926 europe athens 1982 9927 europe athens 1982 9927 europe athens 1983 9928 europe athens 1983 9928 europe athens 1984 9929 europe athens 1984 9929 europe belgrade 1983 9988 europe belgrade 1983 9988 europe belgrade 1984 9989 europe belgrade 1984 9989 europe berlin 1981 10056 europe berlin 1981 10056 europe berlin 1982 10057 europe berlin 1982 10057 europe berlin 1983 10058 europe berlin 1983 10058 europe berlin 1984 10059 europe berlin 1984 10059 europe brussels 1981 10148 europe brussels 1981 10148 europe brussels 1982 10149 europe brussels 1982 10149 europe brussels 1983 10150 europe brussels 1983 10150 europe brussels 1984 10151 europe brussels 1984 10151 europe bucharest 1981 10216 europe bucharest 1981 10216 europe bucharest 1982 10217 europe bucharest 1982 10217 europe bucharest 1983 10218 europe bucharest 1983 10218 europe bucharest 1984 10219 europe bucharest 1984 10219 europe budapest 1981 10293 europe budapest 1981 10293 europe budapest 1982 10294 europe budapest 1982 10294 europe budapest 1983 10295 europe budapest 1983 10295 europe budapest 1984 10296 europe budapest 1984 10296 europe copenhagen 1981 10432 europe copenhagen 1981 10432 europe copenhagen 1982 10433 europe copenhagen 1982 10433 europe copenhagen 1983 10434 europe copenhagen 1983 10434 europe copenhagen 1984 10435 europe copenhagen 1984 10435 europe dublin 1925 10498 europe dublin 1925 10498 europe dublin 1928 10501 europe dublin 1928 10501 europe dublin 1931 10504 europe dublin 1931 10504 europe dublin 1953 10521 europe dublin 1953 10521 europe dublin 1956 10524 europe dublin 1956 10524 europe dublin 1959 10527 europe dublin 1959 10527 europe dublin 1981 10547 europe dublin 1981 10547 europe dublin 1982 10548 europe dublin 1982 10548 europe dublin 1983 10549 europe dublin 1983 10549 europe dublin 1984 10550 europe dublin 1984 10550 europe gibraltar 1925 10613 europe gibraltar 1925 10613 europe gibraltar 1928 10616 europe gibraltar 1928 10616 europe gibraltar 1931 10619 europe gibraltar 1931 10619 europe gibraltar 1942 10630 europe gibraltar 1942 10630 europe gibraltar 1953 10641 europe gibraltar 1953 10641 europe gibraltar 1956 10644 europe gibraltar 1956 10644 europe gibraltar 1982 10646 europe gibraltar 1982 10646 europe gibraltar 1983 10647 europe gibraltar 1983 10647 europe gibraltar 1984 10648 europe gibraltar 1984 10648 europe helsinki 1981 10704 europe helsinki 1981 10704 europe helsinki 1982 10705 europe helsinki 1982 10705 europe helsinki 1983 10706 europe helsinki 1983 10706 europe helsinki 1984 10707 europe helsinki 1984 10707 europe istanbul 1981 10791 europe istanbul 1981 10791 europe istanbul 1982 10792 europe istanbul 1982 10792 europe lisbon 1953 10979 europe lisbon 1953 10979 europe lisbon 1956 10982 europe lisbon 1956 10982 europe lisbon 1959 10985 europe lisbon 1959 10985 europe lisbon 1981 10998 europe lisbon 1981 10998 europe lisbon 1982 10999 europe lisbon 1982 10999 europe lisbon 1983 11000 europe lisbon 1983 11000 europe lisbon 1984 11001 europe lisbon 1984 11001 europe london 1925 11064 europe london 1925 11064 europe london 1928 11067 europe london 1928 11067 europe london 1931 11070 europe london 1931 11070 europe london 1942 11081 europe london 1942 11081 europe london 1953 11092 europe london 1953 11092 europe london 1956 11095 europe london 1956 11095 europe london 1959 11098 europe london 1959 11098 europe london 1981 11118 europe london 1981 11118 europe london 1982 11119 europe london 1982 11119 europe london 1983 11120 europe london 1983 11120 europe london 1984 11121 europe london 1984 11121 europe luxembourg 1981 11210 europe luxembourg 1981 11210 europe luxembourg 1982 11211 europe luxembourg 1982 11211 europe luxembourg 1983 11212 europe luxembourg 1983 11212 europe luxembourg 1984 11213 europe luxembourg 1984 11213 europe madrid 1981 11292 europe madrid 1981 11292 europe madrid 1982 11293 europe madrid 1982 11293 europe madrid 1983 11294 europe madrid 1983 11294 europe madrid 1984 11295 europe madrid 1984 11295 europe malta 1981 11377 europe malta 1981 11377 europe malta 1982 11378 europe malta 1982 11378 europe malta 1983 11379 europe malta 1983 11379 europe malta 1984 11380 europe malta 1984 11380 europe monaco 1981 11506 europe monaco 1981 11506 europe monaco 1982 11507 europe monaco 1982 11507 europe monaco 1983 11508 europe monaco 1983 11508 europe monaco 1984 11509 europe monaco 1984 11509 europe oslo 1981 11615 europe oslo 1981 11615 europe oslo 1982 11616 europe oslo 1982 11616 europe oslo 1983 11617 europe oslo 1983 11617 europe oslo 1984 11618 europe oslo 1984 11618 europe paris 1981 11707 europe paris 1981 11707 europe paris 1982 11708 europe paris 1982 11708 europe paris 1983 11709 europe paris 1983 11709 europe paris 1984 11710 europe paris 1984 11710 europe prague 1981 11778 europe prague 1981 11778 europe prague 1982 11779 europe prague 1982 11779 europe prague 1983 11780 europe prague 1983 11780 europe prague 1984 11781 europe prague 1984 11781 europe rome 1981 11927 europe rome 1981 11927 europe rome 1982 11928 europe rome 1982 11928 europe rome 1983 11929 europe rome 1983 11929 europe rome 1984 11930 europe rome 1984 11930 europe sofia 1981 12086 europe sofia 1981 12086 europe sofia 1982 12087 europe sofia 1982 12087 europe sofia 1983 12088 europe sofia 1983 12088 europe sofia 1984 12089 europe sofia 1984 12089 europe stockholm 1981 12145 europe stockholm 1981 12145 europe stockholm 1982 12146 europe stockholm 1982 12146 europe stockholm 1983 12147 europe stockholm 1983 12147 europe stockholm 1984 12148 europe stockholm 1984 12148 europe vaduz 1981 12395 europe vaduz 1981 12395 europe vaduz 1982 12396 europe vaduz 1982 12396 europe vaduz 1983 12397 europe vaduz 1983 12397 europe vaduz 1984 12398 europe vaduz 1984 12398 europe vienna 1981 12465 europe vienna 1981 12465 europe vienna 1982 12466 europe vienna 1982 12466 europe vienna 1983 12467 europe vienna 1983 12467 europe vienna 1984 12468 europe vienna 1984 12468 europe warsaw 1981 12646 europe warsaw 1981 12646 europe warsaw 1982 12647 europe warsaw 1982 12647 europe warsaw 1983 12648 europe warsaw 1983 12648 europe warsaw 1984 12649 europe warsaw 1984 12649 europe zurich 1981 12767 europe zurich 1981 12767 europe zurich 1982 12768 europe zurich 1982 12768 europe zurich 1983 12769 europe zurich 1983 12769 europe zurich 1984 12770 europe zurich 1984 12770 met 1981 12853 met 1981 12853 met 1982 12854 met 1982 12854 met 1983 12855 met 1983 12855 met 1984 12856 met 1984 12856 mst7mdt 1981 12928 mst7mdt 1981 12928 mst7mdt 1982 12929 mst7mdt 1982 12929 mst7mdt 1983 12930 mst7mdt 1983 12930 mst7mdt 1984 12931 mst7mdt 1984 12931 pst8pdt 1981 13358 pst8pdt 1981 13358 pst8pdt 1982 13359 pst8pdt 1982 13359 pst8pdt 1983 13360 pst8pdt 1983 13360 pst8pdt 1984 13361 pst8pdt 1984 13361 wet 1981 13419 wet 1981 13419 wet 1982 13420 wet 1982 13420 wet 1983 13421 wet 1983 13421 wet 1984 13422 wet 1984 13422 body >>>unit_test_failed
61 tests failed lang ar ma calendar last week 306 lang ar calendar last week 328 lang bg calendar last week 350 lang br calendar last week 372 lang bs calendar last week 387 lang ca calendar last week 408 lang cs calendar last wee client info lang ar ma calendar last week 306 today days end of day lang ar calendar last week 328 today days end of day lang bg calendar last week 350 today days end of day lang br calendar last week 372 today days end of day >>>unit_test_failed
63 tests failed lang ar ma calendar next week 305 lang ar calendar next week 327 lang bg calendar next week 349 lang br calendar next week 371 lang bs calendar next week 386 lang ca calendar next week 407 lang cs calendar next wee client info lang ar ma calendar next week 305 today days beginning of day lang ar calendar next week 327 today days beginning of day lang bg calendar next week 349 today days beginning of day lang br calendar next week 371 today days beginning of day lang bs calendar next week 386 today days beginning of day lang ca calendar next week 407 today days beginning of day lang cs calendar next week 430 today days beginning of day lang cv calendar next week 453 today days beginning of day lang cy same next week 474 today days beginning of day lang de calendar next week 513 today days beginning of day lang el calendar next week 535 today days beginning of day lang en au calendar next week 557 today days beginning of day lang en ca calendar next week 579 today days beginning of day lang en gb calendar next week 601 today days beginning of day lang en calendar next week 623 today days beginning of day lang eo calendar next week 644 today days beginning of day lang es calendar next week 666 today days beginning of day lang et calendar next week 688 today days beginning of day lang eu calendar next week 710 today days beginning of day lang fa calendar next week 732 today days beginning of day lang fi calendar next week 754 today days beginning of day lang fr ca same next week 793 today days beginning of day lang fr same next week 814 today days beginning of day lang gl calendar next week 835 today days beginning of day lang he calendar next week 857 today days beginning of day lang hi calendar next week 879 today days beginning of day lang hr calendar next week 902 today days beginning of day lang hu calendar next week 924 today days beginning of day lang id calendar next week 945 today days beginning of day lang is calendar next week 967 today days beginning of day lang it calendar next week 988 today days beginning of day lang ja calendar next week 1009 today days beginning of day lang ka calendar next week 1031 lang kr calendar next week 1053 today days beginning of day lang lt calendar next week 1075 today days beginning of day lang lv calendar next week 1097 today days beginning of day lang ml calendar next week 1119 today days beginning of day lang mr calendar next week 1142 today days beginning of day lang ms my calendar next week 1165 hari ini hari permulaan hari lang nb calendar next week 1187 today days beginning of day lang ne calendar next week 1209 today days beginning of day lang nl calendar next week 1232 today days beginning of day lang nn calendar next week 1255 today days beginning of day lang pl calendar next week 1277 today days beginning of day lang pt br calendar next week 1298 today days beginning of day lang pt calendar next week 1319 today days beginning of day lang ro calendar next week 1341 today days beginning of day lang ru calendar next week 1368 today days beginning of day lang sk calendar next week 1391 today days beginning of day lang sl calendar next week 1414 today days beginning of day lang sq calendar next week 1436 today days beginning of day lang sv calendar next week 1458 today days beginning of day lang th calendar next week 1479 today days beginning of day lang tl ph same next week 1500 today days beginning of day lang tr calendar next week 1522 today days beginning of day lang tzm la calendar next week 1544 today days beginning of day lang tzm calendar next week 1566 today days beginning of day lang uk calendar next week 1589 today days beginning of day lang uz calendar next week 1611 today days beginning of day lang vn calendar next week 1633 today days beginning of day lang zh cn calendar next week 1655 today days beginning of day lang zh cn calendar next week 1655 today days beginning of day lang zh tw calendar next week 1677 today days beginning of day >>>unit_test_failed
collaboration with globalize on cldr this is not code issue but stackoverflow is inappropriate for this request and didn yet want to email committers individually on the jquery team and we re working on project called globalize globalize has lot of overlap with moment js one major difference is the source for locales as far as can tell moment builds on user contributed translations by now 63 in total globalize started by importing locale data from net giving as about 350 cultures naming is hard so far not too interesting we re currently in the process of moving to cldr https github com jquery globalize pull 172 using their database of locales as the new base for globalize this requires lot of groundwork to make the data usable in javascript we re also reporting back issues to them like missing documentation ve had bit of communication with tim wood in the past see 315 about using cldr that was year ago since then it looks like the project is now standing on more shoulders so hopefully adopting cldr along with some form of collaboration with the jquery team is something worth revisiting on our end rxaviers and scottgonzalez are the other two people most involved we re generally around on irc freenode jqueryui dev for some ad hoc discussions can also make introductions per email if that is preferred over this issue tracker my email address is in my github profile >>>new_feature
since the global `moment` in commonjs does not have static functions since 1214 in commonjs environment global `moment` does not have static functions anymore such as `ismoment` for instance in node js that applies also to utc unix duration version defaultformat updateoffset lang langdata ismoment isduration weekdaysmin weekdaysshort weekdays monthsshort months normalizeunits invalid parsezone and tz either we fully drop support either we do full support but let not do partial support >>>bug
spanish don add after short month day names format dd mmm yyyy for spanish will translate in 29 nov 2013 but in 29 nov 2013 in windows and java >>>language
albanian pd md instead of am pm from http www microsoft com resources msdn goglobal default mspx submitted 041c os windows 207 am symbol 	pd pm symbol 	md java formats the time also using md instead of pm >>>language
new getter setter moment weekofmonth it would be convenient to have new getter setter called `weekofmonth ve been maintaining an answer http stackoverflow com 9608670 221867 on stackoverflow for while now on how to calculate date week of month using vanilla javascript however it would be nice if `moment`s had this property as far as implementation goes mine is reasonably flexible if you want to remove the flexibility in favor of consistency with other methods perfectly fine with that if one were to use the setter would think it could mean two different things start of week specified maintain the day of week and time of day but just adjust the date would think you go with option it seems more consistent with other setters not sure what out of bounds values should indicate say you pass in `7` does that mean the 1st week of the next month or should an error be thrown also indifferent on the setter behavior ll let the experts agree on decision >>>todo
61 tests failed lang ar ma calendar last week 306 lang ar calendar last week 328 lang bg calendar last week 350 lang br calendar last week 372 lang bs calendar last week 387 lang ca calendar last week 408 lang cs calendar last wee client info lang ar ma calendar last week 306 today days end of day lang ar calendar last week 328 today days end of day lang bg calendar last week 350 today days end of day lang br calendar last week 372 today days end of day >>>unit_test_failed
61 tests failed lang ar ma calendar last week 306 lang ar calendar last week 328 lang bg calendar last week 350 lang br calendar last week 372 lang bs calendar last week 387 lang ca calendar last week 408 lang cs calendar last wee client info lang ar ma calendar last week 306 today days end of day lang ar calendar last week 328 today days end of day lang bg calendar last week 350 today days end of day lang br calendar last week 372 today days end of day lang bs calendar last week 387 today days end of day lang ca calendar last week 408 today days end of day lang cs calendar last week 431 today days end of day lang cv calendar last week 454 today days end of day lang cy same last week 475 today days end of day lang de calendar last week 514 today days end of day lang el calendar last week 536 today days end of day lang en au calendar last week 558 today days end of day lang en ca calendar last week 580 today days end of day lang en gb calendar last week 602 today days end of day lang en calendar last week 624 today days end of day lang eo calendar last week 645 today days end of day lang es calendar last week 667 today days end of day lang et calendar last week 689 today days end of day lang eu calendar last week 711 today days end of day lang fa calendar last week 733 today days end of day lang fi calendar last week 755 today days end of day lang fr ca same last week 794 today days end of day lang fr same last week 815 today days end of day lang gl calendar last week 836 today days end of day lang he calendar last week 858 today days end of day lang hi calendar last week 880 today days end of day lang hr calendar last week 903 today days end of day lang hu calendar last week 925 today days end of day lang id calendar last week 946 today days end of day lang is calendar last week 968 today days end of day lang it calendar last week 989 today days end of day lang ja calendar last week 1010 today days end of day lang ka calendar last week 1032 lang kr calendar last week 1054 today days end of day lang lt calendar last week 1076 today days end of day lang lv calendar last week 1098 today days end of day lang ml calendar last week 1120 today days end of day lang mr calendar last week 1143 today days end of day lang ms my calendar last week 1166 hari ini hari tamat hari lang nb calendar last week 1188 today days end of day lang ne calendar last week 1210 today days end of day lang nl calendar last week 1233 today days end of day lang nn calendar last week 1256 today days end of day lang pl calendar last week 1278 today days end of day lang pt br calendar last week 1299 today days end of day lang pt calendar last week 1320 today days end of day lang ro calendar last week 1342 today days end of day lang ru calendar last week 1369 today days end of day lang sk calendar last week 1392 today days end of day lang sl calendar last week 1415 today days end of day lang sq calendar last week 1437 today days end of day lang sv calendar last week 1459 today days end of day lang th calendar last week 1480 today days end of day lang tl ph same last week 1501 today days end of day lang tr calendar last week 1523 today days end of day lang tzm la calendar last week 1545 today days end of day lang tzm calendar last week 1567 today days end of day lang uk calendar last week 1590 today days end of day lang uz calendar last week 1612 today days end of day lang vn calendar last week 1634 today days end of day lang zh tw calendar last week 1678 today days end of day >>>unit_test_failed
129 tests failed preparse postformat calendar day 223 and many others running on windows time zone set to almost any european zone london paris several others all browsers ie10 ff24 chrome 30 are failing with multiple errors starting with preparse postformat calendar day 223 now plus hour then followed by these errors in every language showing the english ones lang en calendar day 622 now plus hour lang en calendar next week 623 today days beginning of day >>>unit_test_failed
tests failed lang el parse 525 23 lang el parse 525 39 lang el parse 525 47 lang el parse 525 55 lang el parse 525 63 lang el parse 525 87 lang zh cn calendar next week 1655 client info lang el parse 525 23 should be month lang el parse 525 39 should be month lang el parse 525 47 should be month lang el parse 525 55 should be month lang el parse 525 63 should be month lang >>>unit_test_failed
test failed lang zh cn calendar next week 1655 client info lang zh cn calendar next week 1655 today days beginning of day >>>unit_test_failed
62 tests failed create string without format 22 create parsing iso with 39 lang ar ma returns the name of the language 314 client info create string without format 22 2013 09 13 26 am create parsing iso with 39 including trailing utc in the input should work lang ar ma returns the name of the language 314 module should export ar ma lang ar returns the name of the language 336 module should export ar lang bg returns the name of the language 358 module should export bg lang br returns the name of the language 373 module should export br lang bs returns the name of the language 395 module should export bs lang ca returns the name of the language 416 module should export ca lang cs returns the name of the language 440 module should export cs lang cv returns the name of the language 462 module should export cv lang da returns the name of the language 480 module should export da lang de returns the name of the language 501 module should export de lang el returns the name of the language 523 module should export el lang en au returns the name of the language 545 module should export en au lang en ca returns the name of the language 567 module should export en ca lang en gb returns the name of the language 589 module should export en gb lang eo returns the name of the language 632 module should export eo lang es returns the name of the language 654 module should export es lang et returns the name of the language 676 module should export et lang eu returns the name of the language 698 module should export eu lang fa returns the name of the language 720 module should export fa lang fi returns the name of the language 742 module should export fi lang fr ca returns the name of the language 763 module should export fr ca lang fr returns the name of the language 784 module should export fr lang gl returns the name of the language 806 module should export gl lang he returns the name of the language 827 module should export he lang hi returns the name of the language 850 module should export hi lang hr returns the name of the language 872 module should export hr lang hu returns the name of the language 894 module should export hu lang id returns the name of the language 915 module should export id lang is returns the name of the language 937 module should export is lang it returns the name of the language 958 module should export it lang ja returns the name of the language 979 module should export ja lang ka returns the name of the language 1001 module should export ka lang kr returns the name of the language 1023 module should export ko lang lt returns the name of the language 1045 module should export lt lang lv returns the name of the language 1067 module should export lv lang ml returns the name of the language 1090 module should export ml lang mr returns the name of the language 1113 module should export mr lang ms my returns the name of the language 1135 module should export ms my lang nb returns the name of the language 1157 module should export nb lang ne returns the name of the language 1180 module should export ne lang nl returns the name of the language 1203 module should export nl lang nn returns the name of the language 1225 module should export nn lang pl returns the name of the language 1247 module should export pl lang pt br returns the name of the language 1268 module should export pt br lang pt returns the name of the language 1289 module should export pt lang ro returns the name of the language 1311 module should export ro lang ru returns the name of the language 1336 module should export ru lang sk returns the name of the language 1360 module should export sk lang sl returns the name of the language 1382 module should export sl lang sq returns the name of the language 1404 module should export sq lang sv returns the name of the language 1426 module should export sv lang th returns the name of the language 1447 module should export th lang tr returns the name of the language 1469 module should export tr lang tzm la returns the name of the language 1491 module should export tzm la lang tzm returns the name of the language 1513 module should export tzm lang uk returns the name of the language 1536 module should export uk lang uz returns the name of the language 1558 module should export uz lang vn returns the name of the language 1580 module should export vn lang zh cn returns the name of the language 1602 module should export zh cn lang zh tw returns the name of the language 1624 module should export zh tw >>>unit_test_failed
62 tests failed create string without format 22 create parsing iso with 39 lang ar ma returns the name of the language 314 lang ar returns the name of the language 336 lang bg returns the name of the language 358 lang br returns the client info create string without format 22 2013 09 13 26 am create parsing iso with 39 including trailing utc in the input should work lang ar ma returns the name of the language 314 module should export ar ma lang ar returns the name of the language 336 module should export ar lang bg returns the name of the language 358 module should export bg lang br returns the name of the language 373 module should export br lang bs returns the name of the language 395 module should export bs lang ca returns the name of the language 416 module should export ca lang cs returns the name of the language 440 module should export cs lang cv returns the name of the language 462 module should export cv lang da returns the name of the language 480 module should export da lang de returns the name of the language 501 module should export de lang el returns the name of the language 523 module should export el lang en au returns the name of the language 545 module should export en au lang en ca returns the name of the language 567 module should export en ca lang en gb returns the name of the language 589 module should export en gb lang eo returns the name of the language 632 module should export eo lang es returns the name of the language 654 module should export es lang et returns the name of the language 676 module should export et lang eu returns the name of the language 698 module should export eu lang fa returns the name of the language 720 module should export fa lang fi returns the name of the language 742 module should export fi lang fr ca returns the name of the language 763 module should export fr ca lang fr returns the name of the language 784 module should export fr lang gl returns the name of the language 806 module should export gl lang he returns the name of the language 827 module should export he lang hi returns the name of the language 850 module should export hi lang hr returns the name of the language 872 module should export hr lang hu returns the name of the language 894 module should export hu lang id returns the name of the language 915 module should export id lang is returns the name of the language 937 module should export is lang it returns the name of the language 958 module should export it lang ja returns the name of the language 979 module should export ja lang ka returns the name of the language 1001 module should export ka lang kr returns the name of the language 1023 module should export ko lang lt returns the name of the language 1045 module should export lt lang lv returns the name of the language 1067 module should export lv lang ml returns the name of the language 1090 module should export ml lang mr returns the name of the language 1113 module should export mr lang ms my returns the name of the language 1135 module should export ms my lang nb returns the name of the language 1157 module should export nb lang ne returns the name of the language 1180 module should export ne lang nl returns the name of the language 1203 module should export nl lang nn returns the name of the language 1225 module should export nn lang pl returns the name of the language 1247 module should export pl lang pt br returns the name of the language 1268 module should export pt br lang pt returns the name of the language 1289 module should export pt lang ro returns the name of the language 1311 module should export ro lang ru returns the name of the language 1336 module should export ru lang sk returns the name of the language 1360 module should export sk lang sl returns the name of the language 1382 module should export sl lang sq returns the name of the language 1404 module should export sq lang sv returns the name of the language 1426 module should export sv lang th returns the name of the language 1447 module should export th lang tr returns the name of the language 1469 module should export tr lang tzm la returns the name of the language 1491 module should export tzm la lang tzm returns the name of the language 1513 module should export tzm lang uk returns the name of the language 1536 module should export uk lang uz returns the name of the language 1558 module should export uz lang vn returns the name of the language 1580 module should export vn lang zh cn returns the name of the language 1602 module should export zh cn lang zh tw returns the name of the language 1624 module should export zh tw >>>unit_test_failed
60 tests failed lang ar ma returns the name of the language 314 lang ar returns the name of the language 336 lang bg returns the name of the language 358 lang br returns the name of the language 373 lang bs returns the name of the languag client info lang ar ma returns the name of the language 314 module should export ar ma lang ar returns the name of the language 336 module should export ar lang bg returns the name of the language 358 module should export bg lang br returns the name of the language 373 module should export br lang bs returns the name of the language 395 module should export bs lang ca returns the name of the language 416 module should export ca lang cs returns the name of the language 440 module should export cs lang cv returns the name of the language 462 module should export cv lang da returns the name of the language 480 module should export da lang de returns the name of the language 501 module should export de lang el returns the name of the language 523 module should export el lang en au returns the name of the language 545 module should export en au lang en ca returns the name of the language 567 module should export en ca lang en gb returns the name of the language 589 module should export en gb lang eo returns the name of the language 632 module should export eo lang es returns the name of the language 654 module should export es lang et returns the name of the language 676 module should export et lang eu returns the name of the language 698 module should export eu lang fa returns the name of the language 720 module should export fa lang fi returns the name of the language 742 module should export fi lang fr ca returns the name of the language 763 module should export fr ca lang fr returns the name of the language 784 module should export fr lang gl returns the name of the language 806 module should export gl lang he returns the name of the language 827 module should export he lang hi returns the name of the language 850 module should export hi lang hr returns the name of the language 872 module should export hr lang hu returns the name of the language 894 module should export hu lang id returns the name of the language 915 module should export id lang is returns the name of the language 937 module should export is lang it returns the name of the language 958 module should export it lang ja returns the name of the language 979 module should export ja lang ka returns the name of the language 1001 module should export ka lang kr returns the name of the language 1023 module should export ko lang lt returns the name of the language 1045 module should export lt lang lv returns the name of the language 1067 module should export lv lang ml returns the name of the language 1090 module should export ml lang mr returns the name of the language 1113 module should export mr lang ms my returns the name of the language 1135 module should export ms my lang nb returns the name of the language 1157 module should export nb lang ne returns the name of the language 1180 module should export ne lang nl returns the name of the language 1203 module should export nl lang nn returns the name of the language 1225 module should export nn lang pl returns the name of the language 1247 module should export pl lang pt br returns the name of the language 1268 module should export pt br lang pt returns the name of the language 1289 module should export pt lang ro returns the name of the language 1311 module should export ro lang ru returns the name of the language 1336 module should export ru lang sk returns the name of the language 1360 module should export sk lang sl returns the name of the language 1382 module should export sl lang sq returns the name of the language 1404 module should export sq lang sv returns the name of the language 1426 module should export sv lang th returns the name of the language 1447 module should export th lang tr returns the name of the language 1469 module should export tr lang tzm la returns the name of the language 1491 module should export tzm la lang tzm returns the name of the language 1513 module should export tzm lang uk returns the name of the language 1536 module should export uk lang uz returns the name of the language 1558 module should export uz lang vn returns the name of the language 1580 module should export vn lang zh cn returns the name of the language 1602 module should export zh cn lang zh tw returns the name of the language 1624 module should export zh tw >>>unit_test_failed
moment incorrectly formats extended years it looks like moment incorrectly formats extended years 15 15 extended years ecmascript requires the ability to specify digit years extended years approximately 285 426 years either forward or backward from 01 january 1970 utc to represent years before or after 9999 iso 8601 permits the expansion of the year representation but only by prior agreement between the sender and the receiver in the simplified ecmascript format such an expanded year representation shall have extra year digits and is always prefixed with or sign the year is considered positive and hence prefixed with sign >>>bug
63 tests failed create string without format 22 create parsing iso with 39 diff diff between utc and local 60 lang ar ma returns the name of the language 314 lang ar returns the name of the language 336 lang bg returns the name of client info create string without format 22 2013 09 13 26 am create parsing iso with 39 including trailing utc in the input should work diff diff between utc and local 60 year diff lang ar ma returns the name of the language 314 module should export ar ma lang ar returns the name of the language 336 module should export ar lang bg returns the name of the language 358 module should export bg lang br returns the name of the language 373 module should export br lang bs returns the name of the language 395 module should export bs lang ca returns the name of the language 416 module should export ca lang cs returns the name of the language 440 module should export cs lang cv returns the name of the language 462 module should export cv lang da returns the name of the language 480 module should export da lang de returns the name of the language 501 module should export de lang el returns the name of the language 523 module should export el lang en au returns the name of the language 545 module should export en au lang en ca returns the name of the language 567 module should export en ca lang en gb returns the name of the language 589 module should export en gb lang eo returns the name of the language 632 module should export eo lang es returns the name of the language 654 module should export es lang et returns the name of the language 676 module should export et lang eu returns the name of the language 698 module should export eu lang fa returns the name of the language 720 module should export fa lang fi returns the name of the language 742 module should export fi lang fr ca returns the name of the language 763 module should export fr ca lang fr returns the name of the language 784 module should export fr lang gl returns the name of the language 806 module should export gl lang he returns the name of the language 827 module should export he lang hi returns the name of the language 850 module should export hi lang hr returns the name of the language 872 module should export hr lang hu returns the name of the language 894 module should export hu lang id returns the name of the language 915 module should export id lang is returns the name of the language 937 module should export is lang it returns the name of the language 958 module should export it lang ja returns the name of the language 979 module should export ja lang ka returns the name of the language 1001 module should export ka lang kr returns the name of the language 1023 module should export ko lang lt returns the name of the language 1045 module should export lt lang lv returns the name of the language 1067 module should export lv lang ml returns the name of the language 1090 module should export ml lang mr returns the name of the language 1113 module should export mr lang ms my returns the name of the language 1135 module should export ms my lang nb returns the name of the language 1157 module should export nb lang ne returns the name of the language 1180 module should export ne lang nl returns the name of the language 1203 module should export nl lang nn returns the name of the language 1225 module should export nn lang pl returns the name of the language 1247 module should export pl lang pt br returns the name of the language 1268 module should export pt br lang pt returns the name of the language 1289 module should export pt lang ro returns the name of the language 1311 module should export ro lang ru returns the name of the language 1336 module should export ru lang sk returns the name of the language 1360 module should export sk lang sl returns the name of the language 1382 module should export sl lang sq returns the name of the language 1404 module should export sq lang sv returns the name of the language 1426 module should export sv lang th returns the name of the language 1447 module should export th lang tr returns the name of the language 1469 module should export tr lang tzm la returns the name of the language 1491 module should export tzm la lang tzm returns the name of the language 1513 module should export tzm lang uk returns the name of the language 1536 module should export uk lang uz returns the name of the language 1558 module should export uz lang vn returns the name of the language 1580 module should export vn lang zh cn returns the name of the language 1602 module should export zh cn lang zh tw returns the name of the language 1624 module should export zh tw >>>unit_test_failed
iso 8601 parsing fails on windows xp ie8 using version the following iso date related unit tests fail on xp ie8 vanilla install from http www modern ie en us virtualization tools downloads 40 2010 11 08t18 04z 40 2010 11 08t18 04 20z 40 2010 11 08t18 04 20 111z 41 2010 11 08t18 04 20 111z into local version parses these dates ok >>>bug ie8
is there any workaround for handle datetime format as 24 00 previous version of momentjs that handle 24 00 as day but after the format has been changed as below so need to know how to handle this situation previous now >>>bug todo
fixes component json generator the component json file is not listing moment js under scripts and the module is therefore not usable with require>>>build/release
moment min and moment max methods are backwards the moment min and moment max methods documentation and results are misleading from the documentation `moment max moment string number date array retrieves the greater of two moment values `moment min moment string number date array retrieves the lesser of two moment values which is what intuitively expected the actual outcomes of the functions however seem to be backwards can probably write pr for this but wanted to make sure not missing something >>>documentation
parse string format does not work possibly due to month format this does not work `moment 10 2013 01 00 dd mmm yyyy hh mm mm dd yyyy hh mm isvalid even if date is valid and this works `moment 10 2013 01 00 mm dd yyyy hh mm dd mmm yyyy hh mm isvalid and this works too even if the second format is matching `moment 04 oct 2013 01 00 mm dd yyyy hh mm dd mmm yyyy hh mm isvalid the two time formats are completely different so the first code should return true but it does not the second code returns true because it encounters first format at the beginning >>>bug
iso issues you can currently do this moment format yyyy and get back 2013 w40 and get great response but doing this moment 2013 40 comes back as an invalid date >>>enhancement
test failed add add across dst 10 client info add add across dst 10 adding days over dst difference should result in the same hour >>>unit_test_failed
test failed utc creating with utc 196 client info utc creating with utc 196 calling moment utc should default to the current time >>>troubleshooting unit_test_failed
test failed diff diff between utc and local 57 client info diff diff between utc and local 57 year diff >>>unit_test_failed
ie8 calendar method broken normally using the calendar method with configuration like you could intercept today yesterday and tomorrow etc in ie8 it ignores the configuration and just displays the normal default format an example would be in google chrome it shows today october 2013 but in ie8 it displays tuesday october 2013 ve attached some screenshots from ie8 of the moment js homepage examples screen shot 2013 10 01 at 10 39 23 https cloud github com assets 864846 1244167 b23eaf1e 2a7d 11e3 96d1 3dcefdcd89bd png screen shot 2013 10 01 at 10 40 16 https cloud github com assets 864846 1244168 b23f6c88 2a7d 11e3 89b9 e2670ec4dc21 png >>>ie8
fix longdateformat for bulgarian language bulgaria uses 24 hour http en wikibooks org wiki bulgarian time time format therefore the `lt` property of `longdateformat` in `bg js` has to be changed to `h mm` example http jsfiddle net ygczm >>>language
added bosnian bs translation >>>needs_tests
uncaught typeerror exception when passed very long string this line moment system administrator and database assistant 2011 system administrator and database assistant 2011 database coordinator 2011 vice president 2011 system administrator and database assistant 31 2012 database coordinator 2012 system administrator and database assistant 2013 mm dd yyyy mm dd yyyy yyyy mm dd yyyy mm ddthh mm ssz isvalid causes an uncaught typeerror exception at line 1256 of this isvalid isnan this gettime fiddle http jsfiddle net grahampcharles mzqj4 >>>bug
validation with string string gives inconsistent results using an array of format strings expect that isvalid returns true if any of the strings match however the first expression returns true and the second one false moment 06 15 hh mm true moment 06 15 mm dd yyyy mm dd yyyy yyyy mm dd hh mm hh mm ss yyyy mm ddthh mm ssz false note that this returns true as would be expected moment 06 00 mm dd yyyy mm dd yyyy yyyy mm dd hh mm hh mm ss yyyy mm ddthh mm ssz true fiddle http jsfiddle net grahampcharles rd7gx >>>forgiving_parsing
en au locale same as en gb just am pm instead of 24h for time formatting >>>needs_tests
ios safari compatibility ve run unit tests on both ios with ipad and iphone 4s and generate the following failed unit tests clicking to generate the issue seemed to be failing so have pasted the output manually https github com moment moment issues new title 30 tests failed add add across dst 10 is valid string formats bad date 147 is valid string formats bad date 147 is valid string formats bad date 147 is valid invalid string iso 8601 152 is valid invalid string iso 8601 152 is valid invalid string iso 8601 152 is valid invalid string iso 8601 152 is valid invalid string iso 8601 152 is valid invalid string iso 8601 152 is valid invalid string iso 8601 152 is valid invalid string iso 8601 152 is valid invalid string iso 8601 152 is valid invalid string iso 8601 152 10 is valid invalid string iso 8601 152 11 is valid invalid string iso 8601 152 12 is valid invalid string iso 8601 timezone 153 is valid invalid string iso 8601 timezone 153 is valid invalid string iso 8601 timezone 153 is valid invalid string iso 8601 timezone 153 is valid invalid string iso 8601 timezone 153 is valid invalid string iso 8601 timezone 153 is valid invalid string iso 8601 timezone 153 is valid invalid string iso 8601 timezone 153 is valid invalid string iso 8601 timezone 153 is valid invalid string iso 8601 timezone 153 10 is valid invalid string iso 8601 timezone 153 11 is valid invalid string iso 8601 timezone 153 12 is valid invalid string iso 8601 timezone 153 13 is valid invalid string iso 8601 timezone 153 14 body client info add add across dst 10 adding days over dst difference should result in the same hour is valid string formats bad date 147 month rollover is valid string formats bad date 147 month rollover is valid string formats bad date 147 day rollover is valid invalid string iso 8601 152 2010 00 00 should be invalid is valid invalid string iso 8601 152 2010 00 00 should be invalid is valid invalid string iso 8601 152 2010 01 00 should be invalid is valid invalid string iso 8601 152 2010 01 00 should be invalid is valid invalid string iso 8601 152 2010 01 40 should be invalid is valid invalid string iso 8601 152 2010 01 40 should be invalid is valid invalid string iso 8601 152 2010 01 01t24 should be invalid is valid invalid string iso 8601 152 2010 01 01t24 should be invalid is valid invalid string iso 8601 152 2010 01 01t23 60 should be invalid is valid invalid string iso 8601 152 10 2010 01 01t23 60 should be invalid is valid invalid string iso 8601 152 11 2010 01 01t23 59 60 should be invalid is valid invalid string iso 8601 152 12 2010 01 01t23 59 60 should be invalid is valid invalid string iso 8601 timezone 153 2010 00 00 00 00 should be invalid is valid invalid string iso 8601 timezone 153 2010 00 00 00 00 should be invalid is valid invalid string iso 8601 timezone 153 2010 01 00 00 00 should be invalid is valid invalid string iso 8601 timezone 153 2010 01 00 00 00 should be invalid is valid invalid string iso 8601 timezone 153 2010 01 40 00 00 should be invalid is valid invalid string iso 8601 timezone 153 2010 01 40 00 00 should be invalid is valid invalid string iso 8601 timezone 153 2010 01 40t24 00 00 should be invalid is valid invalid string iso 8601 timezone 153 2010 01 40t24 00 00 should be invalid is valid invalid string iso 8601 timezone 153 2010 01 40t23 60 00 00 should be invalid is valid invalid string iso 8601 timezone 153 10 2010 01 40t23 60 00 00 should be invalid is valid invalid string iso 8601 timezone 153 11 2010 01 40t23 59 60 00 00 should be invalid is valid invalid string iso 8601 timezone 153 12 2010 01 40t23 59 60 00 00 should be invalid is valid invalid string iso 8601 timezone 153 13 2010 01 40t23 59 59 9999 00 00 should be invalid is valid invalid string iso 8601 timezone 153 14 2010 01 40t23 59 59 9999 00 00 should be invalid >>>troubleshooting
test failed min max min 171 client info min max min 171 past date with the minimum of implied now should be now >>>unit_test_failed
parsing mm hh mm do not produce valid dates it seems when trying to parse `h mm` and `hh mm` dates the resulting moment object has `isvalid` of `false` one would expect it to be `true` particularly since the `hh mma` and `h mma` variants do produce moment objects where `isvalid` is true example from the console jsfiddle http jsfiddle net q7gya >>>bug
false date parsing when try to create moment object with this command it result is so not working also from the moment home page command result is not ok but when use `new date 2012 09 28 like this it working using google chrome version 29 1547 65 and firefox 23 for ubuntu >>>troubleshooting
what is valid date while working on somewhat nicer version of 1098 discovered we have lot of `isvalid issues they all basically have the property that there are moments that work perfectly and we expect to work perfectly but which are considered invalid they fall into two categories dates that trip our input matches output check these include `moment 300 ddd and `moment 2009 13 this is because we re comparing the input array to `toarray which breaks when we wrap units big part of the issue is that the array comparison check in `isvalid is useful in that it tells you that the date may be valid in calendar sense but that it didn match your input which comes up for dsts that different question than whether we failed to parse the input or not and it their conflation that makes things weird inputs where the parser has failed but we have good date anyway for example `moment sss 1234567890 123 which is used in test produces the right value and even round trips with `format but isn valid that because `x` as parser token eats the decimals and sss can match but the time including the decimals worked just fine and sss is the right formatting token to print it this stuff doesn use the code in `isvalid when the parser runs out text but still has tokens it just sets the isvalid` property to `false` which short circuits the check here my proposal which ll fold into 1098 if there enough agreement `isvalid just means do we have real date no array comparison new function `matchesinput tries to tell you if the input matches the output basically it does the array comparison we re removing from `isvalid but we ll keep track if the input is weird like ddd or months 12 and skip the array check in those case what unsure about is whether `matchesinput` should return true or false for those guess true and then `matchesinput could be called `isdstshifted or somesuch instead when the parser can match some of the tokens but still produces date it short circuits matchesinput to false but leaves `isvalid true unless `strict` is set in which case it forces them both to false we can do really ungentle things with moments where `isvalid` returns false like just have `format return localized version of invalid date discovered all this by implementing that actually what do you guys think >>>bug enhancement
file name for nuget ve just get your last version of moment from nuget package but when register the file which contains moment core and language have an error becasue the file name is not correct could you rename the following file as bellow moment langs js moment langs js or moment with langs js moment langs min moment langs min js or moment with langs min js thanks lot best regards >>>build/release
generating languages on the fly just floater idea mj1856 just linked me to http norbertlindenberg com 2012 12 ecmascript internationalization api index html which currently works in my copy of chrome not sure where else we could use that generate languages on the fly if the language is available and we don have it we couldn get the `calendar` and `relativetime` stuff but we could get lot of the rest anyway it wouldn be whole lot of code though worry about feature detection supporting it since most browsers don this is broken in ie what gives how this relates to our idea of progressively enhancing languages based on how specific the locale is suspect we would only use this if we can find the user anything so when the user asks for es ar we prefer to give them our `es` than the our automagically generated `es ar` how to deal with the fact that some methods won localize like `calendar maybe it would have to be completely optional like `moment lang lang willingtouseemca anyone have some thoughts on this >>>enhancement language
using extend with moment prototypes breaks ie was doing some browser checks and noticed that ie8 wasn working correctly in addition the unit tests http momentjs com test were returning ton of failures bisected the issue back to https github com moment moment commit 762f16ff8415ec693a3222c390194c438bf99ba3 believe the issues comes from the extend function and the jscript dontenum bug https developer mozilla org en us docs ecmascript dontenum attribute jscript dontenum bug in which ie skips over any property in any object where this same named property in the object prototype chain that has the `dontenum` attribute in my case the moment method valueof was not being iterated through during the extend method for in loop ve only verified the moment object so far but believe the language and duration objects are equally susceptible tried to make simple jsfiddle but ie8 was pitching fit if support for ie has been dropped adding requirements message would be helpful and if such message exists ve completely overlooked it and apologize >>>bug
added iso duration parsing serialization requested by icambron to continue 941 >>>new_feature
half units in relative time in several languages half units such as half minute half an hour etc and sometimes one and half units are referred with special words in russian half an hour polchas one and half hour poltor chas etc do you think it possible and necessary to implement in moment js such units in relative time >>>new_feature
don localize tostring since `tostring is mainly used for logging debugging believe it should not localize otherwise switching languages breaks logging and makes debugging harder for example many applications especially in node are going to be parsing their logs and it weird to have different formats since the docs and api are in english think it makes sense to use it in `tostring too that said welcome feedback to the effect of this will make it painful for me others to debug since want that in my own language this is basically the opposite of 1018>>>enhancement
should try language code substrings we can probably do better than this we should try en us and failing that try en >>>enhancement language
return true or false based on whether the `lang did its job currently the user has no way to know if `lang gobbledygook worked we should return true or false >>>enhancement language
pie in the sky ideas for future thought first want to stress that this completely unauthoritative list that just made up not an official roadmap it mostly just place to capture stuff that comes up in frequent discussions so we can have central place to point to rather than ending up with bunch of tangential discussions on other tickets ll add to it as we go so this is living list so here goes immutability see 390 pluggable calendar systems see 854 and 394 alternative underlying date implementation see 961 in context duration addition subtraction see 345 all of these ideas have both serious merits and drawbacks >>>new_feature
adding parsezone as discussed in 887>>>enhancement
possible fix moment returns null when passing an empty string https github com moment moment issues 716>>>enhancement
added ability to create invalid moments added way to create invalid moments which is useful in general and then used it to fix 716 punted on the question of what we should do with invalid moments >>>enhancement new_feature
list months and weekdays allows for and they work for languages for where the monthsshort string is decided by function fixes for example 1053 >>>new_feature
node repl and moment new date there seems to be an issue with passing in date objects in the node repl the problem does not occur in an actual node program which is why the tests pass and also why we haven been lynched yet but it very confusing anyway the problem appears to be caused by 1055 which has us explicitly check if the input is date in order to differentiate it from some random object for some reason it not tripping that and instead passing the date into `datefromobject` this appears to have to do with node contexts specifically in that the repl has its own and so the `date` type in the repl isn the `date` type in moment node has utility to help with this `utils isdate so think ll write an `isdate helper that does the right thing >>>bug
format bug with parsing mm into hh mm moment 2013 13 26 am format hh mm 07 26 am moment 2013 13 07 26 am format hh mm 07 26 am moment 2013 09 13 07 26 am format hh mm 07 26 am moment 2013 09 13 26 am format hh mm 12 00 am this was using version can tell if this behavior is intentional or not but it looks like it unintentional since it parses in the first three correctly but not the last one >>>bug
test failed min max max 172 client info min max max 172 future date with the maximum of implied now should be now >>>unit_test_failed
update lang zh cn js update lang zh cn js which is more corresponding to the chinese expression lang zh cn js >>>language
problem with parsing unixtime format this problem is moment 1371065286 isvalid false>>>bug
would be really great if moment js had precise setinterval function according to this so page http stackoverflow com questions 985670 will setinterval drift not the best source know setinterval and naive settimeout recursion can drift see on your home page you have clock showing the current time lines 82 85 here http momentjs com static js core home js would be silly if someone came back to the computer some time later and saw the second hand off >>>new_feature
support two digit time zone designator according to wikipedia iso 8601 states http en wikipedia org wiki iso 8601 time offsets from utc 0700 and 07 00 and 07 are all totally fair ways to describe seven hour offset momentjs does not support 07 http jsfiddle net bangarang cbmeq as side note handling 00 vs 00 is open for interpretation rfc 3339 http tools ietf org html rfc3339 date and time on the internet timestamps says 00 means timezone is unknown and 00 means no offset but wikipedia claims iso 8601 doesn recognize this innuendo and considers 00 invalid have no idea what the source of truth is for momentjs >>>enhancement
update hu js added weekdaysmin value added weekdaysmin value so that it can be used with ion calendar >>>language needs_tests
tests failed zones same before after 220 zones same before after 220 client info zones same before after 220 two moments with different offsets should be the same hour zones same before after 220 two moments with different offsets should be the same hour >>>tz_testing unit_test_failed
documentation unclear or behaviour of min max are inconsistent with other setters the documentation describes min max as setters and while the example suggests that it does not set it only does so obliquely by declaring them as setters one expects it to work like add and other setters which modify the object called on it that is `date max other should change `date` not return `date` or `other` alternatively the documentation should be clear that min max do not change the called object since moments can change feel that min max should set the called moment but if not then it should be clearly documented that the result of `min max is to return one of two objects `date` or `other` but this seems counter active to the method chaining approach that moment employs elsewhere for example if min max are not setters you may not write as method chain since this would actually add one day to either `date` `start` or possibly `end` though `date` would be itself `start` and `end` would be new copies instead you would have to write jsfiddle as requested by your guidelines http jsfiddle net t3yga >>>documentation new_feature
toisostring is causing problems for me javascript toisostring function return formatmoment moment this utc yyyy mm dd hh mm ss sss >>>enhancement
duration formatting we ve touched on this before in 463 and 879 but never really talked about it directly in its own issue we need method for formatting durations similar to how we format dates it should be as simple as note that the formatting tokens would have to carry slightly different meaning since we re representing an elapsed duration of time rather than time of day suggest the following `hh` would mean hours remainder after accounting for days `h` would be the single digit form of `hh` `hh` would mean total whole hours `h` would be the single digit form of `hh` `hhh` would mean total hours including decimals although that can currently be done with `duration ashours so this might not be necessary similar formatting would apply for other units in this context the highest unit would be day which would be standard day consisting of 24 standard hours it wouldn make sense to measure years or months with this due to calendaring issues note this came up recently again on stackoverflow in this question http stackoverflow com 18623783 634824 the user was looking for something like `duration format mm ss this is the workaround math floor duration ashours moment utc duration asmilliseconds format mm ss this works but it feels hacky this should be built in >>>new_feature todo
test failed lang eo format 487 15 client info lang eo format 487 15 2010 02 14 >>>unit_test_failed
tests failed zones same before after 220 zones same before after 220 client info zones same before after 220 two moments with different offsets should be the same hour zones same before after 220 two moments with different offsets should be the same hour >>>tz_testing unit_test_failed
build and push nuget package using grunt ve been manually creating the package and pushing to nuget for while now but think grunt may be able to automate this while don have the time to tackle this right now figured post this to get feedback on the idea and the following approach to adding task to the release task would there be any opposition to adding task to build and push to nuget http blog greatrexpectations com 2013 08 09 creating nuget packages with grunt >>>build/release
new version release process write documentation for all changes document changes in the `readme md` make sure breaking changes are highly visible edit the following files with the new version number run the release grunt task commit the changes merge into master tag the release push the tag to github publish on npm release on momentjs com >>>build/release
test failed lang eo format 487 15 client info lang eo format 487 15 2010 02 14 >>>unit_test_failed
tests failed zones same before after 220 zones same before after 220 lang eo format 487 15 client info zones same before after 220 two moments with different offsets should be the same hour zones same before after 220 two moments with different offsets should be the same hour lang eo format 487 15 2010 02 14 >>>tz_testing unit_test_failed
test failed lang eo format 487 15 client info lang eo format 487 15 2010 02 14 >>>unit_test_failed
expose moment in demandware environment working on site built using demandware hosted ecommerce platform demandware is built on java and has rhino included for scripting es4th edition proposal is supported with js but there seem to be limitations bugs in some of the native es functionality scripts are given the extension ds variables are not exported only functions to get moment working within demandware renamed the file to moment ds and added the following to the top of the file then in any script that includes moment ds have to add `var moment getmoment if you could add this information somewhere or somehow use it to further expose moment for closed environments such as demandware that would be excellent >>>documentation
tests failed zones same before after 220 zones same before after 220 client info zones same before after 220 two moments with different offsets should be the same hour zones same before after 220 two moments with different offsets should be the same hour >>>tz_testing unit_test_failed
test failed lang eo format 487 15 client info lang eo format 487 15 2010 02 14 >>>unit_test_failed
11 tests failed lang en ca weeks year starting tuesday 438 lang en weeks year starting tuesday 480 lang fr ca weeks year starting tuesday 626 lang he weeks year starting tuesday 687 lang hi weeks year starting tuesday 709 lang ja week client info lang en ca weeks year starting tuesday 438 dec 30 2007 should be week lang en weeks year starting tuesday 480 dec 30 2007 should be week lang fr ca weeks year starting tuesday 626 dec 30 2007 should be week lang he weeks year starting tuesday 687 dec 30 2007 should be week lang hi weeks year starting tuesday 709 dec 30 2007 should be week lang ja weeks year starting tuesday 811 dec 30 2007 should be week lang kr weeks year starting tuesday 853 dec 30 2007 should be week lang pt br weeks year starting tuesday 1022 dec 30 2007 should be week lang th weeks year starting tuesday 1190 dec 30 2007 should be week lang zh cn weeks year starting tuesday 1295 dec 30 2007 should be week lang zh tw weeks year starting tuesday 1316 dec 30 2007 should be week >>>tz_testing unit_test_failed
document that wrapping native date object will clone it it not documented that passing `date` object to `moment will clone it the word wrapper in the documentation http momentjs com docs parsing date is misleading because it suggests that moment just wraps the native date object and manipulations will alter it had to look at the source to be really sure that moment does not alter the passed date https github com moment moment blob develop moment js l967>>>documentation
test failed lang eo format 487 15 client info lang eo format 487 15 2010 02 14 >>>unit_test_failed
tostring should use default format rather than fixed since default format is supported propose it logical that tostring would use this default format if defined rather than the hardcoded format ddd mmm dd yyyy hh mm ss gmt zz >>>enhancement
tests failed zones same before after 220 zones same before after 220 client info zones same before after 220 two moments with different offsets should be the same hour zones same before after 220 two moments with different offsets should be the same hour >>>tz_testing unit_test_failed
test failed lang eo format 487 15 client info lang eo format 487 15 2010 02 14 >>>unit_test_failed
test failed lang eo format 487 15 client info lang eo format 487 15 2010 02 14 >>>unit_test_failed
test failed lang eo format 487 15 client info lang eo format 487 15 2010 02 14 >>>unit_test_failed
test failed lang eo format 487 15 client info lang eo format 487 15 2010 02 14 >>>unit_test_failed
add seconds to local format internationalization it would be fantastic to have built in way to display date time with seconds in all supported languages >>>enhancement
why tests fail in some timezones here writeup up the test failure modes that are zone dependent ll try to go through some of the tickets and point them at this one if they seem relevant pacific apia is wack broken diff test looks like it because dailight savings didn end there in 2010 http www timeanddate com worldclock timezone html 282 results in maybe use different year half hour offsets break zones same before after not all the offsets are multiples of 60 and that breaks this test see caracas http www timeanddate com worldclock timezone html 58 though there bunch this happens this is because we create moment clone it and give it two hour offset and then check that it the same hour as the original `issame uses `startof which is going to return something different for the half hour offset locale than the full hour one it simply isn true that half hour offset times should have the same hour as full hour offset ones maybe the test should use utc time as the baseline dsts on unfortunate dates damascus and others in eest has dst in late march or early april http www timeanddate com worldclock timezone html 487 moment builds the array of month parsing regexes by iterating from to 11 and for each creating `moment 2000 and checking what the language calls that but `moment 2000 meaning april 2000 actually returns march 31 in damascus because it won be april until am so our month parsing array ends up with march in it twice the result is that is that `moment april mmm isn valid besides being totally wrong it breaks zillion tests several for each language see 987 same with amman http www timeanddate com worldclock timezone html 271 paraguay does something similar http www timeanddate com worldclock timezone html 21 around october apparently including in october 2000 itself with similar consequences this really nasty bug because date parsing really just doesn work in these places one possible way to fix this is to use moment year month instead though not exactly sure why it creates moment objects for this purpose anyway much less problematic but still bad the azores does wacky stuff http www timeanddate com worldclock timezone html 271 in march in particular march 25 2007 doesn start on time and this test fails in each language same with beirut http www timeanddate com worldclock timezone html 34 havana http www timeanddate com worldclock timezone html 99 which impressively also breaks `test equal moment 2015 weekday by having dst change on exactly that day and scoresbysund http www timeanddate com worldclock timezone html 705 casablanca has dst on march 2011 which breaks this test there may be many more similar issues that don get hit by the tests >>>tz_testing
59 tests failed is before is before month 113 is same is same month 122 lang ar ma format month 227 lang ar format month 248 lang bg format month 269 lang br format month 290 lang ca format month 303 lang cs format month 324 client info is before is before month 113 start of next month is same is same month 122 start of next month lang ar ma format month 227 lang ar format month 248 lang bg format month 269 lang br format month 290 ebrel ebr lang ca format month 303 abril abr lang cs format month 324 duben dub lang cv format month 347 lang da format month 368 april apr lang de format month 385 april apr lang el format month 405 lang en ca format month 426 april apr lang en gb format month 447 april apr lang en format month 468 april apr lang eo format month 489 aprilo apr lang es format month 510 abril abr lang et format month 531 aprill apr lang eu format month 552 apirila api lang fa format month 573 lang fi format month 594 huhtikuu huhti lang fr ca format month 615 avril avr lang fr format month 635 avril avr lang gl format month 654 abril abr lang he format month 675 lang hi format month 696 lang hu format month 718 prilis pr lang id format month 738 april apr lang is format month 759 aprl apr lang it format month 780 aprile apr lang ja format month 799 lang ka format month 820 lang kr format month 841 lang lv format month 862 aprlis apr lang ms my format month 883 april apr lang nb format month 904 april apr lang ne format month 925 lang nl format month 947 april apr lang nn format month 969 april apr lang pl format month 990 kwiecie kwi lang pt br format month 1011 abril abr lang pt format month 1031 abril abr lang ro format month 1051 aprilie apr lang ru format month 1072 lang ru format month case 1073 lang ru format month case 1073 lang sk format month 1093 aprl apr lang sl format month 1116 april apr lang sq format month 1137 prill pri lang sv format month 1158 april apr lang th format month 1178 lang tr format month 1199 nisan nis lang tzm la format month 1220 ibrir ibrir lang tzm format month 1241 lang uk format month 1262 lang uk format month case 1263 lang uk format month case 1263 lang zh cn format month 1282 lang zh tw format month 1303 >>>tz_testing unit_test_failed
tests failed client info date prototype tostring thu aug 08 2013 01 36 06 gmt 0530 india standard time date prototype tolocalestring 2013 36 06 am date prototype gettimezoneoffset 330 navigator useragent mozilla windows nt wow64 applewebkit 537 36 khtml like gecko chrome 28 1500 95 safari 537 36 zones same before after two moments with different offsets should be the same hour true false two moments with different offsets should be the same hour true false >>>tz_testing unit_test_failed
test failed client info date prototype tostring mon aug 05 2013 21 38 55 gmt 0200 date prototype tolocalestring montag 05 august 2013 21 38 55 date prototype gettimezoneoffset 60 navigator useragent mozilla windows nt wow64 rv 22 gecko 20100101 firefox 22 lang eo format 2010 02 14 2010 02 14 >>>unit_test_failed
test failed date prototype tostring tue jul 30 2013 11 27 12 gmt 0100 gmt standard time date prototype tolocalestring 30 july 2013 11 27 12 date prototype gettimezoneoffset navigator useragent mozilla windows nt wow64 rv 22 gecko 20100101 firefox 22 0>>>unit_test_failed
make language identifiers case insensitive all of the following should work the same way >>>enhancement language
rounding to the nearest 15 minute interval was wondering if there is way for me to round up or down to the nearest 15 minute interval think this would be great feature to have in moment as some libs like datejs kind of have this functionality from what seen when searching my scenario is that have data points that are segmented into 15 minute buckets the selection tool returns any block of time and need to round down to the closest 15 minutes and round up for the end time doing it this way http stackoverflow com questions 4968250 how to round time to the nearest quarter hour in javascript seems like it would be pain when it would be useful to have in the lib itself >>>todo
more conscise naming for query methods after instead of isafter propose we shorten the naming for some of the methods or at least create aliases for them list issame same isbefore before isafter after isleapyear leapyear isdst dst one explicitly omitted `ismoment` you could certainly have just moment method but it probably be confusing might actually propose that people use `instanceof` instead of `ismoment` though everything else in the api is pretty terse like terse good programmers like terse http www paulgraham com langdes html lets make it terse >>>enhancement
solving the problem with failing tests across some timezones currently there is the `grunt zones` command that would do some hacky works only on mac with sudo privileges stuff to run all tests in all timezones it takes ages and it shows many failing tests 37 on my machine at the moment fixing those is super tedious and normally involves date being used in test that is near or at dst so the fix is sometimes changing to different date and hoping there is no dst of another timezone there sometimes there is no easy fix america havana failing because of dst exactly at the beginning of the month from time to time such issues pop up as issues in the tracker but its hard to debug because don know which zone are they in not the offset but the rules that govern the offset so can not replicate it on my linux box in node environment think we need to either run this tests as part of our continuous build so that we know all tests past in all timezones all the time we can use `tz america los angeles grunt nodeunit` to run tests without changing the actual os timezone or we can implement way of marking certain timezone test combinations as bad and not caring running the test at all the second solution sounds bad but really don want to care about some obscure dst happening 30 years ago when writing random moment test that is not concerned about dst at all >>>tz_testing
calendar does not respect timezone information copied from moment moment timezone 17 if you look here https github com moment moment blob ae34b8100eb925832c7c0bc729ba0485de77bde6 moment js l1266 we are creating fresh moment with the no timezone information so the calendar method doesn calculate the day diff correctly ve manually fixed this by inlining the body of the method into my code >>>bug
faling test cases date prototype tostring tue jul 23 2013 19 41 00 gmt 0530 ist date prototype tolocalestring 23 2013 41 00 pm date prototype gettimezoneoffset 330 navigator useragent mozilla x11 linux i686 applewebkit 537 36 khtml like gecko chrome 28 1500 71 safari 537 36>>>tz_testing
added iso duration parsing as requested per 861 >>>new_feature
test failed while executing tests date prototype tostring fri jul 19 2013 15 54 09 gmt 0200 cest date prototype tolocalestring fri 19 jul 2013 03 54 09 pm cest date prototype gettimezoneoffset 60 navigator useragent mozilla x11 ubuntu linux i686 rv 22 gecko 20100101 firefox 22 0>>>unit_test_failed
16818 tests passed 12 failed date prototype tostring thu jul 18 2013 16 02 50 gmt 0300 art date prototype tolocalestring thu jul 18 16 02 50 2013 date prototype gettimezoneoffset 180 navigator useragent mozilla macintosh intel mac os 10 rv 22 gecko 20100101 firefox 22 0>>>tz_testing unit_test_failed
16819 tests passed 11 failed date prototype tostring thu jul 18 2013 16 00 26 gmt 0300 art date prototype tolocalestring 18 2013 00 26 pm date prototype gettimezoneoffset 180 navigator useragent mozilla macintosh intel mac os 10 applewebkit 537 36 khtml like gecko chrome 28 1500 71 safari 537 36>>>tz_testing unit_test_failed
unit test failed min max 156 future date max of impl now now failed date prototype tostring thu jul 18 2013 07 27 29 gmt 0200 cest date prototype tolocalestring 2013 18 07 27 29 date prototype gettimezoneoffset 60 navigator useragent mozilla macintosh intel mac os 10 applewebkit 537 36 khtml like gecko chrome 28 1500 71 safari 537 36 156 future date with the maximum of implied now should be now true false assertionerror future date with the maximum of implied now should be now at object ok http momentjs com static js core test js 2013 07 17t10 59 13 07 00 1531 39 at object exports min max max http momentjs com static js core test js 2013 07 17t10 59 13 07 00 4950 14 at http momentjs com static js core test js 2013 07 17t10 59 13 07 00 1863 20 at object exports min max setup http momentjs com static js core test js 2013 07 17t10 59 13 07 00 4901 at http momentjs com static js core test js 2013 07 17t10 59 13 07 00 1859 19 at object exports runtest http momentjs com static js core test js 2013 07 17t10 59 13 07 00 1707 at http momentjs com static js core test js 2013 07 17t10 59 13 07 00 1753 25 at http momentjs com static js core test js 2013 07 17t10 59 13 07 00 1011 13 at iterate http momentjs com static js core test js 2013 07 17t10 59 13 07 00 621 13 at http momentjs com static js core test js 2013 07 17t10 59 13 07 00 632 25>>>tz_testing unit_test_failed
tests failed in safari on osx please submit an issue to github com timrwood moment issues with the information below and the failing tests failure failure >>>unit_test_failed
tests failed chrome version 28 1500 71 date prototype tostring mon jul 15 2013 18 10 25 gmt 0700 pdt date prototype tolocalestring 15 2013 10 25 pm date prototype gettimezoneoffset 480 navigator useragent mozilla macintosh intel mac os 10 applewebkit 537 36 khtml like gecko chrome 28 1500 71 safari 537 36 screen shot 2013 07 15 at 16 59 pm https cloud github com assets 4342295 802062 774e2d8a edb5 11e2 823c 41af8c414200 png >>>unit_test_failed
tests failed chrome on linux date prototype tostring mon jul 15 2013 14 04 25 gmt 0400 edt date prototype tolocalestring 15 2013 04 25 pm date prototype gettimezoneoffset 300 navigator useragent mozilla x11 linux x86 64 applewebkit 537 36 khtml like gecko chrome 27 1453 93 safari 537 36>>>unit_test_failed
tests failed chrome 28 1500 71 date prototype tostring tue jul 16 2013 00 09 58 gmt 0700 novt date prototype tolocalestring 16 2013 09 58 date prototype gettimezoneoffset 420 navigator useragent mozilla x11 linux x86 64 applewebkit 537 36 khtml like gecko chrome 28 1500 71 safari 537 36 140 expected assertions ran undefined undefined undefined error expected assertions ran at object test done http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1569 25 at object exports runtest http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1710 14 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1753 25 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 13 at iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 13 at async foreachseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 637 at concat http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1010 at object concatseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 650 23 at object exports runsuite http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1732 11 at object exports runmodule http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1792 13 140 cannot read property abbr of undefined undefined undefined undefined typeerror cannot read property abbr of undefined at function lang http momentjs com static js global min js 2013 07 07t16 03 01 07 00 11497 at object exports lang library getter http momentjs com static js core test js 2013 07 07t16 03 01 07 00 4663 27 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1867 16 at object exports runtest http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1707 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1753 25 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 13 at iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 13 at async foreachseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 637 at concat http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1010 at object concatseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 650 23 156 future date with the maximum of implied now should be now true false assertionerror future date with the maximum of implied now should be now at object ok http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1531 39 at object exports min max max http momentjs com static js core test js 2013 07 07t16 03 01 07 00 4947 14 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1863 20 at object exports min max setup http momentjs com static js core test js 2013 07 07t16 03 01 07 00 4900 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1859 19 at object exports runtest http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1707 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1753 25 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 13 at iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 13 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 632 25>>>unit_test_failed
140 and 140 unit tests failed on chrome 28 please submit an issue to github com timrwood moment issues with the information below and the failing tests date prototype tostring mon jul 15 2013 09 08 09 gmt 0400 eastern daylight time date prototype tolocalestring 15 2013 08 09 am date prototype gettimezoneoffset 300 navigator useragent mozilla windows nt wow64 applewebkit 537 36 khtml like gecko chrome 28 1500 71 safari 537 36 140 expected assertions ran undefined undefined undefined error expected assertions ran at object test done http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1569 25 at object exports runtest http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1710 14 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1753 25 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 13 at iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 13 at async foreachseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 637 at concat http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1010 at object concatseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 650 23 at object exports runsuite http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1732 11 at object exports runmodule http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1792 13 140 cannot read property abbr of undefined undefined undefined undefined typeerror cannot read property abbr of undefined at function lang http momentjs com static js global min js 2013 07 07t16 03 01 07 00 11497 at object exports lang library getter http momentjs com static js core test js 2013 07 07t16 03 01 07 00 4663 27 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1867 16 at object exports runtest http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1707 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1753 25 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 13 at iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 13 at async foreachseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 637 at concat http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1010 at object concatseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 650 23 >>>unit_test_failed
16845 tests passed failed date prototype tostring sun jul 14 2013 08 12 39 gmt 0100 bst date prototype tolocalestring 14 2013 12 39 am date prototype gettimezoneoffset navigator useragent mozilla macintosh intel mac os 10 applewebkit 537 36 khtml like gecko chrome 27 1453 116 safari 537 36>>>unit_test_failed
added strict parsing ve wanted this for long time strict parsing it builds one regex of all the tokens and matches it against the whole string then it matches the match groups against the tokens guess we can add stricter regexes for the tokens for example mm will match digits only instead of one digit >>>enhancement
unit tests failed date prototype tostring sat jul 13 2013 23 11 25 gmt 0300 eest date prototype tolocalestring 13 2013 11 11 25 pm date prototype gettimezoneoffset 120 navigator useragent mozilla macintosh intel mac os 10 applewebkit 537 36 khtml like gecko chrome 27 1453 116 safari 537 36 failed tests 140 expected assertions ran undefined undefined undefined error expected assertions ran at object test done http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1569 25 at object exports runtest http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1710 14 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1753 25 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 13 at iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 13 at async foreachseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 637 at concat http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1010 at object concatseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 650 23 at object exports runsuite http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1732 11 at object exports runmodule http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1792 13 140 cannot read property abbr of undefined undefined undefined undefined typeerror cannot read property abbr of undefined at function lang http momentjs com static js global min js 2013 07 07t16 03 01 07 00 11497 at object exports lang library getter http momentjs com static js core test js 2013 07 07t16 03 01 07 00 4663 27 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1867 16 at object exports runtest http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1707 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1753 25 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 13 at iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 13 at async foreachseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 637 at concat http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1010 at object concatseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 650 23 >>>unit_test_failed
16828 tests passed failed date prototype tostring fri jul 12 2013 20 06 42 gmt 0400 date prototype tolocalestring viernes 12 de julio de 2013 20 06 42 date prototype gettimezoneoffset 240 navigator useragent mozilla windows nt rv 22 gecko 20100101 firefox 22 0>>>unit_test_failed
unit tests failed date prototype tostring fri jul 12 2013 10 38 12 gmt 0400 edt date prototype tolocalestring 12 2013 10 38 12 am date prototype gettimezoneoffset 300 navigator useragent mozilla x11 linux x86 64 applewebkit 537 31 khtml like gecko chrome 26 1410 63 safari 537 31>>>unit_test_failed
16845 tests passed failed please submit an issue to github com timrwood moment issues with the information below and the failing tests date prototype tostring thu jul 11 2013 18 14 18 gmt 0500 cdt date prototype tolocalestring 11 2013 18 14 18 date prototype gettimezoneoffset 360 navigator useragent mozilla macintosh intel mac os 10 applewebkit 537 36 khtml like gecko chrome 27 1453 116 safari 537 36 library getter passed failed 140 expected assertions ran undefined undefined undefined error expected assertions ran at object test done http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1569 25 at object exports runtest http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1710 14 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1753 25 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 13 at iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 13 at async foreachseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 637 at concat http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1010 at object concatseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 650 23 at object exports runsuite http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1732 11 at object exports runmodule http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1792 13 140 cannot read property abbr of undefined undefined undefined undefined typeerror cannot read property abbr of undefined at function lang http momentjs com static js global min js 2013 07 07t16 03 01 07 00 11497 at object exports lang library getter http momentjs com static js core test js 2013 07 07t16 03 01 07 00 4663 27 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1867 16 at object exports runtest http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1707 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1753 25 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 13 at iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 13 at async foreachseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 637 at concat http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1010 at object concatseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 650 23 >>>unit_test_failed
failed unit test 16845 tests passed failed moment js2 date prototype tostring thu jul 11 2013 16 18 19 gmt 0100 gmt daylight time date prototype tolocalestring 11 2013 18 19 pm date prototype gettimezoneoffset navigator useragent mozilla windows nt wow64 applewebkit 537 36 khtml like gecko chrome 27 1453 116 safari 537 36>>>unit_test_failed
16844 tests passed failed ios ipad4 16844 tests passed failed hmm looks like some of the unit tests are failing it hard to catch all the bugs across all browsers and timezones so if you have minute please submit an issue with the failing test and the info below thanks please submit an issue to github com timrwood moment issues with the information below and the failing tests date prototype tostring thu jul 11 2013 07 07 51 gmt 0100 bst date prototype tolocalestring 11 july 2013 07 07 51 bst date prototype gettimezoneoffset navigator useragent mozilla ipad cpu os like mac os applewebkit 536 26 khtml like gecko mercury mobile 10a523 safari 8536 25 >>>unit_test_failed
16845 tests passed failed date prototype tostring wed jul 10 2013 18 29 00 gmt 0700 pdt date prototype tolocalestring 10 2013 29 00 pm date prototype gettimezoneoffset 480 navigator useragent mozilla macintosh intel mac os 10 applewebkit 537 36 khtml like gecko chrome 28 1500 71 safari 537 36>>>unit_test_failed
16842 tests passed failed date prototype tostring thu jul 11 2013 05 43 26 gmt 0430 iran standard time date prototype tolocalestring thursday july 11 2013 43 26 am date prototype gettimezoneoffset 210 navigator useragent mozilla windows nt rv 22 gecko 20100101 firefox 22 library getter passed failed 140 lang should return en by default 140 lang should return the changed language 140 lang should return the changed language 140 lang should reset 140 expected assertions ran undefined undefined undefined exports test test done http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1571 exports runtest http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1710 exports runsuite http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1753 concat http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 async foreachseries iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 async foreachseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 637 concat http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1015 doseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 650 exports runsuite http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1762 exports runmodule http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1792 exports runmodules http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1817 concat http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 async foreachseries iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 async foreachseries iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 632 concat 140 fn lang is undefined undefined undefined undefined lang http momentjs com static js global min js 2013 07 07t16 03 01 07 00 exports lang library getter http momentjs com static js core test js 2013 07 07t16 03 01 07 00 4663 wraptest http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1867 exports runtest http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1707 exports runsuite http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1753 concat http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 async foreachseries iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 async foreachseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 637 concat http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1015 doseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 650 exports runsuite http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1762 exports runmodule http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1792 exports runmodules http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1817 concat http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 async foreachseries iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 async foreachseries iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 632 concat same before after 10 passed failed 220 two moments with different offsets should be the same 220 two moments with different offsets should be the same 220 two moments with different offsets should be the same hour true false assertionerror two moments with different offsets should be the same hour 220 two moments with different offsets should be the same hour true false assertionerror two moments with different offsets should be the same hour 220 isafter should work with two moments with different offsets 220 isafter should work with two moments with different offsets 220 isafter hour should work with two moments with different offsets 220 isafter hour should work with two moments with different offsets 220 isbefore should work with two moments with different offsets 220 10 isbefore should work with two moments with different offsets 220 11 isbefore hour should work with two moments with different offsets 220 12 isbefore hour should work with two moments with different offsets format 21 passed failed 487 dddd mmmm do yyyy mm ss dimano februaro 14a 2010 25 50 487 ddd ha dim 3p 487 mo mm mmmm mmm 2a 02 februaro feb 487 yyyy yy 2010 10 487 do dd 14 14a 14 487 do dddd ddd dd 0a dimano dim di 487 ddd dddo dddd 45 45a 045 487 wo ww 7a 07 487 hh 03 487 10 hh 15 15 487 11 mm 25 25 487 12 ss 50 50 487 13 487 14 la dddo tago de la jaro la 45a tago de la jaro 487 15 2010 02 14 2010 02 14 assertionerror 2010 02 14 487 16 ll 14 an de februaro 2010 487 17 lll 14 an de februaro 2010 15 25 487 18 llll dimano la 14 an de februaro 2010 15 25 487 19 2010 14 487 20 ll 14 an de feb 2010 487 21 lll 14 an de feb 2010 15 25 487 22 llll dim la 14 an de feb 2010 15 25>>>tz_testing unit_test_failed
library getter passed failed date prototype tostring wed jul 10 18 59 23 utc 0200 2013 date prototype tolocalestring mercoled 10 luglio 2013 18 59 23 date prototype gettimezoneoffset 60 navigator useragent mozilla compatible msie 10 windows nt wow64 trident slcc2 net clr 50727 net clr 30729 net clr 30729 media center pc masm net4 0c lang library getter passed failed 140 lang should return en by default 140 lang should return the changed language 140 lang should return the changed language 140 lang should reset 140 expected assertions ran undefined undefined undefined error expected assertions ran 140 impossibile recuperare la propriet abbr di un riferimento nullo non definito undefined undefined undefined typeerror impossibile recuperare la propriet abbr di un riferimento nullo non definito at lang http momentjs com static js global min js 2013 07 07t16 03 01 07 00 11418 at library getter http momentjs com static js core test js 2013 07 07t16 03 01 07 00 4663 at anonymous function http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1867 13 at runtest http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1707 at anonymous function http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1753 17 at anonymous function http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 13 at iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 13 at foreachseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 637 at concat http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1010 at anonymous function http momentjs com static js core test js 2013 07 07t16 03 01 07 00 650 13 >>>unit_test_failed
16843 tests passed failed date prototype tostring wed jul 10 2013 19 27 13 gmt 0430 irdt date prototype tolocalestring 10 2013 27 13 pm date prototype gettimezoneoffset 210 navigator useragent mozilla x11 linux i686 applewebkit 537 22 khtml like gecko ubuntu chromium 25 1364 160 chrome 25 1364 160 safari 537 22 library getter passed failed 140 lang should return en by default 140 lang should return the changed language 140 lang should return the changed language 140 lang should reset 140 expected assertions ran undefined undefined undefined error expected assertions ran at object test done http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1569 25 at object exports runtest http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1710 14 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1753 25 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 13 at iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 13 at async foreachseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 637 at concat http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1010 at object concatseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 650 23 at object exports runsuite http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1732 11 at object exports runmodule http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1792 13 140 cannot read property abbr of undefined undefined undefined undefined typeerror cannot read property abbr of undefined at function lang http momentjs com static js global min js 2013 07 07t16 03 01 07 00 11497 at object exports lang library getter http momentjs com static js core test js 2013 07 07t16 03 01 07 00 4663 27 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1867 16 at object exports runtest http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1707 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1753 25 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 13 at iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 13 at async foreachseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 637 at concat http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1010 at object concatseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 650 23 same before after 10 passed failed 220 two moments with different offsets should be the same 220 two moments with different offsets should be the same 220 two moments with different offsets should be the same hour true false assertionerror two moments with different offsets should be the same hour at object ok http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1531 39 at object exports zones same before after http momentjs com static js core test js 2013 07 07t16 03 01 07 00 6214 14 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1863 20 at object exports zones setup http momentjs com static js core test js 2013 07 07t16 03 01 07 00 5913 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1859 19 at object exports runtest http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1707 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1753 25 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 13 at iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 13 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 632 25 220 two moments with different offsets should be the same hour true false assertionerror two moments with different offsets should be the same hour at object ok http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1531 39 at object exports zones same before after http momentjs com static js core test js 2013 07 07t16 03 01 07 00 6215 14 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1863 20 at object exports zones setup http momentjs com static js core test js 2013 07 07t16 03 01 07 00 5913 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1859 19 at object exports runtest http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1707 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1753 25 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 13 at iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 13 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 632 25 220 isafter should work with two moments with different offsets 220 isafter should work with two moments with different offsets 220 isafter hour should work with two moments with different offsets 220 isafter hour should work with two moments with different offsets 220 isbefore should work with two moments with different offsets 220 10 isbefore should work with two moments with different offsets 220 11 isbefore hour should work with two moments with different offsets 220 12 isbefore hour should work with two moments with different offsets>>>unit_test_failed
unit tests are failing library getter passed failed 16845 tests passed failed failing two >>>unit_test_failed
allow adjustment of humanized duration strings the table shown in the docs for fromnow http momentjs com docs displaying fromnow is hard coded by the relativetime https github com timrwood moment blob develop moment js l934 function request for future version that the values be adjustable in some manner see http stackoverflow com 17473300 634824 >>>new_feature todo
16844 tests passed failed submitting bug report as instructed on the website had minute to submit but not to debug info date prototype tostring tue jul 09 2013 16 44 17 gmt 0200 cest date prototype tolocalestring tue jul 16 44 17 2013 date prototype gettimezoneoffset 60 navigator useragent mozilla macintosh intel mac os 10 rv 22 gecko 20100101 firefox 22 failures >>>unit_test_failed
still not preserving input zone glad has the zone setter but still think it should be used automagically if you pass in string with an offset currently moment 2013 01 01t00 00 00 04 00 format 2012 12 31t21 00 00 07 00 can do this moment 2013 01 01t00 00 00 04 00 zone format 2013 01 01t00 00 00 04 00 but shouldn have to if all have is the string it will be clumsy to have to extract the offset from the string myself just to pass it back in again >>>enhancement
language tests failed date prototype tostring mon jul 08 2013 11 21 52 gmt 0400 edt date prototype tolocalestring 2013 11 21 52 am date prototype gettimezoneoffset 300 navigator useragent mozilla macintosh intel mac os 10 applewebkit 537 36 khtml like gecko chrome 28 1500 71 safari 537 36 140 expected assertions ran undefined undefined undefined error expected assertions ran at object test done http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1569 25 at object exports runtest http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1710 14 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1753 25 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 13 at iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 13 at async foreachseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 637 at concat http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1010 at object concatseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 650 23 at object exports runsuite http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1732 11 at object exports runmodule http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1792 13 140 cannot read property abbr of undefined undefined undefined undefined typeerror cannot read property abbr of undefined at function lang http momentjs com static js global min js 2013 07 07t16 03 01 07 00 11497 at object exports lang library getter http momentjs com static js core test js 2013 07 07t16 03 01 07 00 4663 27 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1867 16 at object exports runtest http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1707 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1753 25 at http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1011 13 at iterate http momentjs com static js core test js 2013 07 07t16 03 01 07 00 621 13 at async foreachseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 637 at concat http momentjs com static js core test js 2013 07 07t16 03 01 07 00 1010 at object concatseries http momentjs com static js core test js 2013 07 07t16 03 01 07 00 650 23 >>>unit_test_failed
failed unit test in gmt date prototype tostring mon jul 08 2013 13 46 16 gmt 0100 bst date prototype tolocalestring 2013 46 16 pm date prototype gettimezoneoffset navigator useragent mozilla macintosh intel mac os 10 applewebkit 537 36 khtml like gecko chrome 27 1453 116 safari 537 36>>>bug unit_test_failed
unit test failed date prototype tostring thu jul 04 2013 11 09 03 gmt 0300 hora oficial do brasil date prototype tolocalestring 2013 11 09 03 date prototype gettimezoneoffset 120 navigator useragent mozilla windows nt wow64 applewebkit 537 36 khtml like gecko chrome 27 1453 116 safari 537 36>>>tz_testing unit_test_failed
ie7 failed unit test tojson when running the unit tests failed in ie7 date prototype tostring thu jun 27 09 45 49 utc 2013 date prototype tolocalestring thursday june 27 2013 45 49 am date prototype gettimezoneoffset navigator useragent mozilla compatible msie windows nt net clr 4322 tojson passed failed 79 should output iso8601 on moment fn tojson 79 json is undefined undefined undefined undefined object error though as typing this guessing it because ie7 doesn have inbuilt support for converting to json so needs to be polyfilled with json2 perhaps it would be good to add little note in the documentation perhaps there already is one but haven spotted it saying to polyfil json in older browsers keep up the good work alex >>>bug unit_test_failed
ability to parse an iso duration string hi it would be nice if moment supported iso duration http en wikipedia org wiki iso 8601 durations format like moment duration pt16h40m >>>new_feature
in response to issue 843 moment langkeys returns an array of all available language keys>>>enhancement
localization modules leak into the global context some localization modules leak functions into the global context for example ru locale has functions like function plural word num that end up in the global context and may collide with other functions of the same name also the require loader should be removed >>>bug
add subtract methods should use real months years if try to add or subtract moment duration month to date it always adds or subtracts 30 days which is not correct is this bug known limitation or am missing something wouldn be better for the add subtract methods to increase the month number in these cases if would want to add 30 days still could do it by using moment duration 30 days same happens with years found myself having to check for isleapyear does this makes sense could pr this if you guys agree >>>enhancement
parsing week numbers hi it is possible to format date using the `w` `wo` `w` and `wo` tokens to display week numbers iso or other however it is not understandibly not possible to parse strings containing only week number and year it would be great if this was possible the day of the week that determines the weeknumber first sunday or first monday or whatever is the determining dow could be used to set the day on the parsed date for example `moment week 25 2013 week yyyy parses as the monday of week 25 of the year 2013 tried to put pull request together for this but could not get past the nitty gritty of parsing tokens etc >>>new_feature
get list of available locales the page needs to initialize the moment lang xxx there is no way to find out which languages are available and implement fall back strategy >>>language new_feature
if calling moment fromnow with second parameter true in the german language the plural forms of days months and years will lost their trailing var from moment from subtract day console log from from moment in tagen correct console log from from moment true tagen false has to be tage from subtract month console log from from moment in monaten correct console log from from moment true monaten false has to be monate from subtract year console log from from moment in jahren correct console log from from moment true jahren false has to be jahre apologize for our language and for don have the time to dig me into source and change it myself d>>>bug language
invalid date format encounter with this problem actually don know the date format unknown date format want to recognize it use string format the return is invalid mean it doesn fit the format for example if use fromnow it returns 1987 years ago >>>forgiving_parsing
effects of ecmascript 15 it recently come to my attention that there is flaw in the ecmascript specification that almost all browsers use for their javascript implementation this is discussed here http stackoverflow com 16951442 634824 the actual spec is in ecmascript section 15 http es5 github io x15 the troubling part is as follows the implementation of ecmascript should not try to determine whether the exact time was subject to daylight saving time but just whether daylight saving time would have been in effect if the current daylight saving time algorithm had been used at the time this avoids complications such as taking into account the years that the locale observed daylight saving time year round if the host environment provides functionality for determining daylight saving time the implementation of ecmascript is free to map the year in question to an equivalent year same leap year ness and same starting week day for the year for which the host environment provides daylight saving time information the only restriction is that all equivalent years should produce the same result it ends up that firefox chrome safari and node js all take the easy route and apply the current time zone rules to past dates even if the operating system has more data about past dates they do not pick it up of those tested only ie is going the route of providing accurate data for past dates and we all know that windows time zones are proprietary anyway am really upset with ecma right now this is messed up on so many levels that said there are now many js libraries will have to evaluate to see how they are affected by this off hand do you know of anything with in moment js that assumes that the local system time has the correct time zone offset just to restate the severity of the issue another way even if the local operating system has fully consistent and up to date time zone database regardless of windows or tzdb zones most javascript runtimes will only ask for the current rule and then apply that to all dates my gut says that probably momentjs might only be affected for parsing and formatting but moment timezone might be affected more severely depending on how little or how much it relies on the host environment instead of the raw tzdb data please let me know your thoughts on this subject and thanks as always >>>timezones
longdateformat isn considered for parsing if `longdateformat` is passed as the second argument to `moment the i18n options aren considered >>>bug
potential parsing bug not sure if the results from this method call are as expected or not moment 05 mar 98 dd mmm yyyy todate returns the following in firefox wed mar 05 0098 00 00 00 gmt 0500 eastern daylight time where in chrome it returns the somewhat more expected value of wed mar 05 98 00 00 00 gmt 0500 eastern standard time since the provided format expects digit long year and we only provided year one have expected this to result in an invalid date>>>bug
test fails date prototype tostring thu may 30 2013 10 51 34 gmt 0300 art date prototype tolocalestring jue 30 may 2013 10 51 34 art date prototype gettimezoneoffset 180 navigator useragent mozilla x11 ubuntu linux x86 64 rv 21 gecko 20100101 firefox 21 weeks year starting tuesday passed failed tests fails 1101 dec 30 2007 should be week 52 assertionerror dec 30 2007 should be week 1101 jan 2008 should be week 1101 jan 2008 should be week 1101 jan 2008 should be week 1101 jan 12 2008 should be week 1101 jan 13 2008 should be week >>>bug
more detail in fromnow is there any way of getting `fromnow` to display more detail than just day hour minute count for example rather than showing in days it should in days hours minutes what the best approach for implementing this >>>new_feature
millisecond formatting does not work http jsfiddle net ybgnd is an example it always shows `000` >>>bug
14105 tests passed failed from website tests date prototype tostring wed may 29 2013 16 45 56 gmt 0300 brt date prototype tolocalestring wed may 29 2013 16 45 56 gmt 0300 brt date prototype gettimezoneoffset 180 navigator useragent mozilla x11 linux x86 64 applewebkit 537 11 khtml like gecko chrome 23 1271 95 safari 537 11>>>unit_test_failed
iso 8601 parsing doesn work with named timezones if parse an iso 8601 with three letter timezone at the end it comes out as invalid curiously if call date parse then it works fine which points to it being bug in the extra browser compatible iso 8601 parser in moment >>>bug
added macedonian language added macedonian language >>>language needs_tests
test failed date prototype tostring fri may 24 2013 11 18 15 gmt 0300 hora oficial do brasil date prototype tolocalestring 24 2013 11 18 15 date prototype gettimezoneoffset 120 navigator useragent mozilla windows nt wow64 applewebkit 537 36 khtml like gecko chrome 27 1453 93 safari 537 36>>>unit_test_failed
unit test failed two errors 55 0013888888888889 jan 28 to feb 28 should be month true false 55 9347222222222222 9333333333333333 jan 31 to feb 29 should be 30 months true false please submit an issue to github com timrwood moment issues with the information below and the failing tests date prototype tostring wed may 22 2013 13 29 44 gmt 0300 hora oficial do brasil date prototype tolocalestring 22 2013 13 29 44 date prototype gettimezoneoffset 120 navigator useragent mozilla windows nt wow64 applewebkit 537 31 khtml like gecko chrome 26 1410 64 safari 537 31>>>unit_test_failed
string formats not working as expected the following does not work as expect it yields when jesus was just born makedatefromstringandarray config seems to completely ignore the defined lengths in format string and only validate some values the month must be 13 and the day or the first two digits of the actual year part must be smaller or equal to the number of days in that month the unit tests seem to pass because the example date and example formats are well chosen such that only in the correct format no month constraint is violated expect the format to be sensitive to the given lengths and separators in the format strings >>>bug
get localized formats more precise lll and llll formats add the time to the date what if want to write localized full date without time correct me if there is already build in solution for this but would suggest this more precise set of formats lt 30 pm 09 04 1986 ll september 4th 1986 llt september 4th 1986 30 pm llll thursday september 4th 1986 llllt thursday september 4th 1986 30 pm other suggestion l		09 04 1986 ll		september 4th 1986 lll		thursday september 4th 1986 30 pm lt 09 04 1986 30 pm llt september 4th 1986 30 pm lllt thursday september 4th 1986 30 pm>>>enhancement
supported browsers missing from docs the documentation should make it clear which versions of which browsers are supported thanks >>>documentation
update it js changed relativetime future from in to tra >>>language
fix escaping>>>language
fix amd support remove the module name you can explicitly name modules yourself but it makes the modules less portable it is normally best to avoid coding in name for the module and just let the optimization tool burn in the module names please see http requirejs org docs api html modulename >>>new_feature
calendar display with time or without time sometimes want to display the calendar date without the time such as today instead of today at 12 00 am realize you can edit the localization strings but then this prevents the possibility of also occasionally using calendar to display with the time think there should be an option or sibling function to be able to do this>>>new_feature
adding hooks for external libs to supply timezone name and timezone abbreviations this is to allow libs like `moment timezone` and others to provide timezone information by overwriting `moment fn zonename` and `moment fn zoneabbr` >>>new_feature timezones
accept and in addition to am and pm this is related to 768 timrwood not too happy that change in the parsing regexp is needed also not sure how useful it is there are also requests for localizing this so personally vote no merge >>>new_feature
added support for breton language added support for breton language>>>language
added pastfromnow this is useful alternative to fromnow when you know the date is in the past see icambron comment in issue 537 let me know if you prefer adding an option parameter to `fromnow` >>>enhancement
get month for february works incorrectly actual result moment month format mmm jan moment month format mmm mar there is bug moment month format mmm mar moment month format mmm apr expected result for moment month format mmm feb >>>troubleshooting
bugfix gl lang merged two branches from daaria and fixed the lang file bit so tests pass >>>language
ignore dst for day week month and year diffs diffs across timezones behave better now diffing days weeks months and years units ignores dst meaning you can take the two local times they are in potentially different timezones and then do the arithmetic diffing hours minutes seconds and ms takes dst into account meaning you take the two utc times and then do the arithmetic that mostly worked up to now excluding some very special month year cases and all day week cases across dst this should hopefully fix 626 606 but the problem is that tests expect dst to happen on particular dates usa dst so not sure how to tackle this for now >>>enhancement
add moment intervalnow for exact left time without timezone moment 2013 04 27t05 48 29 000z intervalnow days 15 hours minutes 53 seconds moment 2013 04 27t05 48 29 000z intervalnow in days 15 hours minutes 53 seconds need for exact left time without timezone thank you >>>new_feature
logic in zh cn js to judge am or pm is wrong https github com timrwood moment blame develop lang zh cn js l25 think the following code may correct it hour 11 hour 11 minute 30 return else if hour 13 hour 13 minute 30 return similar in zh tw js>>>language
nepalese language affects iso formatting not that speak nepalese but was just playing with the language buttons on the main momentjs com website and noticed that when nepalese is selected the numerals change this is probably the right thing to do for normal formatting if that what nepalese looks like however the iso8601 format is also changed and that is supposed to be culture invariant moment format when no parameters are supplied and moment tojson should probably not be affected by the language setting >>>bug
add duration add method mostly just copied over code from the moment add method similar functionality for durations >>>new_feature
on android moment js produces errors because of javascript problem on this android device model number lt28h android build nummer 233 applewebkit 534 30 khtml like gecko version mobile safari 534 30 this code produces these results new date sethours setfullyear xxxx alert getseconds for xxxx you insert these values und get these results input 1901 result 52 input 1902 result input 2037 result input 2038 result it should always return because we set sethours workaround could be that if you only analyse time like this var test moment 12 00 32 hh mm ss you also provide javascript with date like 01 01 1970 so that getseconds always returns the correct value >>>troubleshooting
feature support display the prefix ad and the suffixes ce support display and set dates ad and ce >>>new_feature
moment returns null when passing an empty string is this part of the specification or is it documented somewhere having hard time validating user input and thought just throw it into moment and check if it was able to parse it since it returns `null` calling `isvalid` will of course result in an error http jsfiddle net gcuxf >>>enhancement
fromnow future 15 passed failed date prototype tostring sat apr 06 2013 22 03 56 gmt 1100 aus eastern daylight time date prototype tolocalestring 2013 10 03 56 pm date prototype gettimezoneoffset 660 navigator useragent mozilla windows nt applewebkit 537 31 khtml like gecko chrome 26 1410 43 safari 537 31 fromnow future 15 passed failed 264 in few seconds 264 in minute 264 in minutes 264 in 10 minutes 264 in an hour 264 in hours 264 in 10 hours za 10 hodin za hodin assertionerror in 10 hours at object equal http momentjs com js tests js 2013 03 25t20 21 43 07 00 1531 39 at object exports lang cs fromnow future http momentjs com js tests js 2013 03 25t20 21 43 07 00 6632 14 at http momentjs com js tests js 2013 03 25t20 21 43 07 00 1863 20 at object exports lang cs setup http momentjs com js tests js 2013 03 25t20 21 43 07 00 6454 at http momentjs com js tests js 2013 03 25t20 21 43 07 00 1859 19 at object exports runtest http momentjs com js tests js 2013 03 25t20 21 43 07 00 1707 at http momentjs com js tests js 2013 03 25t20 21 43 07 00 1753 25 at http momentjs com js tests js 2013 03 25t20 21 43 07 00 1011 13 at iterate http momentjs com js tests js 2013 03 25t20 21 43 07 00 621 13 at http momentjs com js tests js 2013 03 25t20 21 43 07 00 632 25>>>bug unit_test_failed
mm ss to seconds and vice versa is there any way to get seconds from say 45 15 >>>new_feature
failing tests 45 failed please submit an issue to github com timrwood moment issues with the information below and the failing tests date prototype tostring mon apr 01 2013 20 57 39 gmt 0200 cest date prototype tolocalestring mon 01 apr 2013 08 57 39 pm cest date prototype gettimezoneoffset 60 navigator useragent mozilla x11 ubuntu linux x86 64 rv 19 gecko 20100101 firefox 19 0>>>unit_test_failed
serbian latin tranlsation serbian latin translation >>>language
create string setters for moment month and moment day wish to be able to set the month or weekday based on name january or sunday instead of number in other words want to use `moment month february or `moment day sunday should note that you can work around this limitation for month names by creating second moment `moment month moment february mmmm month >>>new_feature
parse weekday names wish to be able to create moment based on named weekday can use `moment february mmmm so why can use `moment sunday dddd in similar manner in other words parsing sunday should return the same thing as `moment startof week and parsing monday should return the same thing as `moment startof week day if additional date information is provided sunday feb that other info should take precedence in the parser ignore sunday in this case >>>new_feature
throw exception on invalid time intervals `moment duration` will silently return is you misspell the time interval please change that and throw exception this applies to other methods that rely on string for determining the interval >>>enhancement
allow fallbacks for setting language similar to the format array option would it be advisable to allow multiple languages in an array as an option the setter would work in order till the first successful load >>>new_feature
setting an unknown language on node js implementation throws an error javascript var moment require moment date moment date lang en us throws error text error cannot find module lang en us at function module resolvefilename module js 338 15 at function module load module js 280 25 at module require module js 362 17 at require module js 378 17 at getlangdefinition node modules moment moment js 507 13 at object moment fn moment lang node modules moment moment js 1276 30 at callbacks node modules express lib router index js 161 37 at param node modules express lib router index js 135 11 >>>new_feature
parsing format hmm doesn work correctly if the user attempts to create moment using the format hmm 415 moment seems to use the format hhm instead jsfiddle example for you http jsfiddle net p6gda thanks love the library btw keep up the good work after looking into the bug got this song https www youtube com watch xf2aywcjfxo stuck in my head format made me go hmmmmmmm >>>forgiving_parsing
failed tests date prototype tostring sun mar 10 2013 21 42 53 gmt 0300 date prototype tolocalestring domingo 10 de maro de 2013 21 42 53 date prototype gettimezoneoffset 120 navigator useragent mozilla windows nt wow64 rv 19 gecko 20100101 firefox 19 55 0013888888888889 jan 28 to feb 28 should be month true false assertionerror 0013888888888889 jan 28 to feb 28 should be month 55 9347222222222222 9333333333333333 jan 31 to feb 29 should be 30 months true false assertionerror 9347222222222222 9333333333333333 jan 31 to feb 29 should be 30 months>>>unit_test_failed
adding persian language support how could help to add my language persian farsi to this awesome js library actually there are more that 110 million speakers around the worlds that speaking in persian language in countries like iran afghanistan tajikistan http en wikipedia org wiki persian language>>>language
moment should parse according to locale if do something like expect to get back date in the italian format march 1st 2013 not the american one january 3rd 2013 that momentjs in fact returns if this behavior can be modified how can parse with date format such as or ll without having to do all of this thank you >>>new_feature
date header format parsing problem hi ve problem when want to parse header dates from apache like to support the formats defined in rfc 2616 http tools ietf org html rfc2616 section so use the hability of momentjs to parse various formats but it seems my second definition override the first one ddd dd mmm yyyy hh mm ss gmt it the input format dddd dd mmm yy hh mm ss gmt ddd mmm hh mm ss yyyy ve tested in ie10 ff and chrome and ve the same problems the year is 2019 where it must be 1994 so think it parse correctly with the def as it takes the 19 part http jsfiddle net waf6m >>>bug
jshint all unit tests>>>enhancement
parse meridiem string in chinese in moment js function addtimetoarrayfromtoken token input config am pm case fall through to case config ispm input tolowercase pm break this doesn work for chinese locale zh cn zh tw as chinese has its own word for pm in this case config ispm is always false if the input is in chinese for example can format date to 2013 10 08 00 2013 10 08 00pm but when try to parse it back it gives me 2013 10 08 00 2013 10 08 00am >>>new_feature
upgrading from to grunt version hi upgraded from to grunt version there were lot of modifications the main modification is core tasks are now grunt plugins think could not update the minify lang js file at line 48 also could not update the minify js file at line 29 can you help me at two lines thanks ps upgrading from to can be found at http gruntjs com upgrading from to 4>>>enhancement
failed unit test hi there also ie as ie7 completely crashes while attempting to run the tests thanks pedro>>>unit_test_failed
failed unit test hi here are my results date prototype tostring tue feb 19 2013 21 50 14 gmt 0100 cet date prototype tolocalestring di 19 feb 2013 21 50 14 cet date prototype gettimezoneoffset 60 navigator useragent mozilla x11 ubuntu linux x86 64 rv 18 gecko 20100101 firefox 18 diff diff passed failed 45 second 1000 45 second seconds 500 45 second 1000 45 second second 45 hour from now 360000 3600000 3600499 assertionerror hour from now 360000>>>unit_test_failed
i18n add greek language>>>language
add translation for bahasa melayu hi this is translation for malay language ms my please review thanks>>>language
serbian language support>>>language needs_tests
default year should be this year it would make sense to me if the default guessed year would be this year would be true however the year seems to default to 2001 when not supplied the functionality as is might be design choice but thought to mention it just in case cheers>>>new_feature
one failed test on http momentjs com test 13818 tests passed failed date prototype tostring fri feb 15 2013 11 20 55 gmt 0600 cst date prototype tolocalestring fri feb 15 11 20 55 2013 date prototype gettimezoneoffset 360 navigator useragent mozilla macintosh intel mac os 10 rv 19 gecko 20100101 firefox 19 diff diff passed failed 45 second 1000 45 second seconds 500 45 second 1000 45 second second 45 hour from now 360000 3600000 3600510 assertionerror hour from now 360000>>>unit_test_failed
adding days in duration produces incorrect date and difference the following code produces the following output it should produce here fiddle http jsfiddle net futureturnip gpefe >>>bug
failed tests chrome 24 pt br please submit an issue to github com timrwood moment issues with the information below and the failing tests date prototype tostring wed feb 13 2013 21 43 16 gmt 0300 horrio de vero brasil central date prototype tolocalestring 13 2013 21 43 16 date prototype gettimezoneoffset 180 navigator useragent mozilla windows nt applewebkit 537 17 khtml like gecko chrome 24 1312 57 safari 537 17 month diffs passed failed 55 jan to feb should be month 55 016129032258064516 016129032258064516 jan to jan noon should be 31 months 55 jan 15 to feb 15 should be month 55 0013888888888889 jan 28 to feb 28 should be month true false assertionerror 0013888888888889 jan 28 to feb 28 should be month at object ok http momentjs com js tests js 2013 02 11t22 41 18 01 00 1531 39 at equal http momentjs com js tests js 2013 02 11t22 41 18 01 00 2729 10 at object exports diff month diffs http momentjs com js tests js 2013 02 11t22 41 18 01 00 2863 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 1867 16 at object exports runtest http momentjs com js tests js 2013 02 11t22 41 18 01 00 1707 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 1753 25 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 1011 13 at iterate http momentjs com js tests js 2013 02 11t22 41 18 01 00 621 13 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 632 25 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 1013 17 55 9347222222222222 9333333333333333 jan 31 to feb 29 should be 30 months true false assertionerror 9347222222222222 9333333333333333 jan 31 to feb 29 should be 30 months at object ok http momentjs com js tests js 2013 02 11t22 41 18 01 00 1531 39 at equal http momentjs com js tests js 2013 02 11t22 41 18 01 00 2729 10 at object exports diff month diffs http momentjs com js tests js 2013 02 11t22 41 18 01 00 2864 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 1867 16 at object exports runtest http momentjs com js tests js 2013 02 11t22 41 18 01 00 1707 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 1753 25 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 1011 13 at iterate http momentjs com js tests js 2013 02 11t22 41 18 01 00 621 13 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 632 25 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 1013 17 55 032258064516129 032258064516129 jan 31 to mar should be 30 31 months 55 0483870967741935 0483870967741935 jan 31 to mar should be 29 31 months 55 967741935483871 967741935483871 jan to jan 31 should be 30 31 months>>>unit_test_failed
failed unit tests well here goes my environment info date prototype tostring tue feb 12 2013 11 57 21 gmt 0200 brst date prototype tolocalestring 12 2013 11 57 21 am date prototype gettimezoneoffset 180 navigator useragent mozilla x11 linux x86 64 applewebkit 537 17 khtml like gecko chrome 24 1312 69 safari 537 17 and the failing tests month diffs has failing tests 55 0013888888888889 jan 28 to feb 28 should be month true false assertionerror 0013888888888889 jan 28 to feb 28 should be month at object ok http momentjs com js tests js 2013 02 11t22 41 18 01 00 1531 39 at equal http momentjs com js tests js 2013 02 11t22 41 18 01 00 2729 10 at object exports diff month diffs http momentjs com js tests js 2013 02 11t22 41 18 01 00 2863 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 1867 16 at object exports runtest http momentjs com js tests js 2013 02 11t22 41 18 01 00 1707 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 1753 25 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 1011 13 at iterate http momentjs com js tests js 2013 02 11t22 41 18 01 00 621 13 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 632 25 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 1013 17 55 9347222222222222 9333333333333333 jan 31 to feb 29 should be 30 months true false assertionerror 9347222222222222 9333333333333333 jan 31 to feb 29 should be 30 months at object ok http momentjs com js tests js 2013 02 11t22 41 18 01 00 1531 39 at equal http momentjs com js tests js 2013 02 11t22 41 18 01 00 2729 10 at object exports diff month diffs http momentjs com js tests js 2013 02 11t22 41 18 01 00 2864 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 1867 16 at object exports runtest http momentjs com js tests js 2013 02 11t22 41 18 01 00 1707 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 1753 25 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 1011 13 at iterate http momentjs com js tests js 2013 02 11t22 41 18 01 00 621 13 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 632 25 at http momentjs com js tests js 2013 02 11t22 41 18 01 00 1013 17>>>bug unit_test_failed
add unit tests for `moment zone` setter getters setters add subtract startof endof from fromnow zones outside the 12 to 12 range diffs unix offset unix timestamp js date output cloning isbefore isafter issame isdst ignore zone with local or utc>>>enhancement
moment modifies array of acceptable formats if the user passes an array of acceptable formats into moment to create new moment the array is modified the array of formats should not be modified not sure if this is part of 592 or whether that discussing the date object rather than all the parameters for creating moment either way it odd that the array just pops an element relevant jsfiddle not very exciting but you can see the bug http jsfiddle net fgp5n >>>bug
week number is not compliant with iso standard found bug today assuming that moment jan 2005 format yyyy www would follow the iso 8601 standard the code sample would return but this is the expected output http en wikipedia org wiki iso week date examples>>>new_feature
zone always returns the local zone if create moment such as var moment 2013 01 01t00 00 00 04 00 and then look at the zone var zone would expect to always get back 240 because created it with the specific 00 offset instead always get back 420 am in utc arizona so this is coming from my local clock even that seems wrong though because would expect 420 this seems to be direct passthrough to gettimezoneoffset which also exhibits this behavior expect more from moment js it seems that as soon as you create moment with an offset that offset is applied and then lost is that correct >>>timezones
floor moment diff instead of round the diff rounding issue comes up so often that wondering if it would be better to `floor` instead of `round` the `2 0` release would be the ideal time for this as it can introduce backwards incompatible changes what do you think ichernev here are some relevant issues 393 131 588 219>>>deprecate
round moment diff down >>>deprecate
moment diff across timezone shifts experiencing some unexpected behavior which may well be correct but not sure understand time well enough to judge if not mistaken should return as the the clock jumps forward an hour from 59 59 to 00 00 am but at least for me est edt it returns `zone for each of those objects returns `240` and `300` respectively for me >>>bug
removing kr and jp files 293 finishing 293>>>deprecate
changing lang ordinal to return number ordinal instead of just the ordinal see https github com timrwood moment issues 484 issuecomment 9923454 note the following comment was copied here for simplicity with the new internals of the languages all of the properties of language config get added as `lang property` if they are not function and `lang property` if they are function line 119 https github com timrwood moment blob 294685a55a971e3f27291a3659f2708e9a210204 moment js l199 then the default method and property on the `language prototype` could be something like this then languages like bulgarian catalan chuvash and many others can just set string as the ordinal property which would then overwrite `language prototype ordinal` but would still use `language prototype ordinal` then no other internals would need to change except for ordinalizetoken https github com timrwood moment blob 294685a55a971e3f27291a3659f2708e9a210204 moment js l173 which would actually be simpler >>>deprecate
removing eod sod and humanizeduration these are three methods that were replaced by better solutions for `moment humanizeduration` you should use `moment duration humanize` for `moment eod and `moment sod you should use `moment endof day and `moment startof day >>>deprecate
isvalid for parts of the moment noticed that internally moment knows which parts of the parsed date were valid and thought it would be nice to have isvalid support the same kind of parameters that add support if this were the case if got moment isvalid false could then ask which part were invalid and inform the user for example moment isvalid this looks like it might be relatively small addition to implement >>>new_feature
date diff bug assign two dates december 31 2012 var date1 moment new date 2012 11 31 january 2010 var date2 moment new date 2010 calculate the difference between the dates in years this produces but it should not should be 99999 date2 diff date1 years true the correct answer is years 11 months weeks days or 1095 days assign two dates january 2013 var date3 moment new date 2013 january 2010 var date4 moment new date 2010 date3 diff date4 years true is correct equals both of these give the same result but they should not used the windows calculator to verify only the second example should produce not the first >>>bug
broken missing languages the stable branch breaks when switching to missing locale couldn test this properly and see that you did major rewrite on master basically the problem is this piece of code is assuming that values will always exist when you do `moment lang missing values is undefined and this code breaks the fix is easy just add little bit of defensive coding before the `for` loop `values values couldn test it because in node it tries to load missing module lang missing` and didn want to add stub library >>>bug
startof and endof are timezone aware and cannot be adjusted use moment both on the server side and on the client side both need to determine day interval by doing `moment date startof day and `moment date endof day where `date` is unix timestamp however if the client and the server are not in the same timezone this leads to different dates wouldn mind this difference it if was possible to specify timezone on either the client or the server side but it is not possible `local and `utc are too limited is there an alternative for dealing with timezones have checked moment timezone https github com timrwood moment timezone but as far as understand it only deals with formatting not manipulation >>>timezones
moment duration years asdays 360 see https twitter com danmartens status 277083063924686848>>>bug
failed issue while test date prototype tostring fri dec 07 2012 14 23 51 gmt 0200 trkiye standart saati date prototype tolocalestring fri dec 07 2012 14 23 51 gmt 0200 trkiye standart saati date prototype gettimezoneoffset 120 navigator useragent mozilla windows nt wow64 applewebkit 537 11 khtml like gecko chrome 23 1271 95 safari 537 11 115 calling moment utc should default to the current time 1354883028911 1354883028910 assertionerror calling moment utc should default to the current time at object equal http momentjs com js tests js 1531 39 at exports utc creating with utc http momentjs com js tests js 3861 14 at object exports runtest http momentjs com js tests js 1707 at http momentjs com js tests js 1753 25 at http momentjs com js tests js 1011 13 at iterate http momentjs com js tests js 621 13 at http momentjs com js tests js 632 25 at http momentjs com js tests js 1013 17 at http momentjs com js tests js 1594 17 115 the day should be correct for utc array 115 the hours should be correct for utc array 115 the day should be correct for utc parsing format 115 the hours should be correct for utc parsing format 115 the day should be correct for utc parsing iso 115 the hours should be correct for utc parsing iso>>>unit_test_failed
moment fromnow few seconds ago moment fromnow is returning few seconds ago why not just now >>>new_feature
set moment to specific timezone hi is there way to set moment to specific timezone for example currently creating moment like so var sgx open moment new date hours 11 minutes seconds milliseconds this creates moment that is set to 11 00 am today in my local timezone utc 11 however would like this to be say singapore timezone utc was looking for something like `sgx open zone but couldn seem to find setter like this cheers victor>>>timezones
utc format format behavior hello here is behavior can understand same dates console log date moment utc 2012 10 27 35 console log date moment utc 2012 11 27t08 35 console log date moment utc 27 11 2012 08 35 dd mm yyyy hh mm output via console log node js test date 2012 11 27t08 35 00 000z isutc true 2012 10 27 35 true lang false date 2012 11 27t08 35 00 000z isutc true 2012 10 27 35 true lang false date 2012 11 27t07 35 00 000z isutc true 2012 10 27 35 null lang false expect date to be exactly the same as date and date as stated by the documentation utc section >>>bug
failed tests in web page date prototype tostring fri nov 23 2012 12 46 03 gmt 0200 montevideo daylight time date prototype tolocalestring fri nov 23 2012 12 46 03 gmt 0200 montevideo daylight time date prototype gettimezoneoffset 120 navigator useragent mozilla windows nt wow64 applewebkit 537 11 khtml like gecko chrome 23 1271 64 safari 537 11 115 calling moment utc should default to the current time 1353681960073 1353681960072 assertionerror calling moment utc should default to the current time at object equal http momentjs com js tests js 1531 39 at exports utc creating with utc http momentjs com js tests js 3861 14 at object exports runtest http momentjs com js tests js 1707 at http momentjs com js tests js 1753 25 at http momentjs com js tests js 1011 13 at iterate http momentjs com js tests js 621 13 at http momentjs com js tests js 632 25 at http momentjs com js tests js 1013 17 at http momentjs com js tests js 1594 17>>>unit_test_failed
feature request allow ordinal function to return whole new words instead of just suffixes as of my understanding currently the ordinal function is used to return proper suffix for number and so on once again in nepali we have an uncommon way of handling at the moment have omitted this in the lang tests to simplify the language definition but would be great if this could be handled as well >>>deprecate enhancement language
failing unit tests in other timezones see this comment https github com timrwood moment pull 478 issuecomment 9818664 >>>bug
parsing 10sep2001 should work and should be valid see https github com timrwood moment issues 391 issuecomment 8763283>>>bug
duration missing features working on project and momentjs is really useful for date manipulation so thanks for that to give you an example we re making somekind of store for plane tickets the `duration humanize function is way to imprecise for us for example when leaving at 12 00 and landing at 13 30 it will round it to hours but we need some kind of granularity which is missing from momentjs humanize could default to level of precision starting from the highest value 30 duration humanize hour duration humanize precision hour 30 minutes duration humanize precision hour 30 minutes seconds the second problem is when there is the number momentjs translates it as few seconds not so sure how it could be achieved but it would be cool to have some kind of formatting days and minutes duration format and days and minutes duration format and 72 hours and minutes duration format and 72 hours and few minutes that way the highest value could be mapped in the format so even if there is year the format tells us how to display it correctly be happy to push commit for that because it very useful and having to do it by hand when momentjs already handle localization feels bad >>>new_feature
calendar not respecting lang this is half true it respects getting the lang but not if the lang config uses references to other formats let me give an example for my country portugal in file pt js you have line 19 https github com timrwood moment blob master lang pt js l19 and lt is line 12 https github com timrwood moment blob master lang pt js l12 notice there no am pm in portugal now doing this on node repl gives me >>>bug
arabic ar translation>>>language
in spanish the months should be in lower case in spanish the months should be in lower case please see http spanish about com od writtenspanish capitalization htm months enero febrero marzo abril mayo junio julio agosto septiembre octubre noviembre diciembre split monthsshort ene feb mar abr may jun jul ago sep oct nov dic >>>bug language
it translation for the month of september is incorrect the translation for it september is incorrect months gennaio febbraio marzo aprile maggio giugno luglio agosto settebre ottobre novembre dicembre split it should be settembre >>>bug language
hebrew translation>>>language
moment xx 2001 mm yyyy isvalid should be false hi have some issues with the isvalid function you can find example below moment xx xx 2001 dd mm yyy isvalid true moment 12 13 2001 dd mmm yyy dd mm yyy isvalid true these dates are clearly not valid but it still return true is it the wanted behaviour of the isvalid function >>>bug
isvalid doesn seem to work when providing an array of date formats it seems like the month rollover doesn invalidate the date if multiple formats are specified moment 12 13 2012 dd mm yyyy isvalid false rollover occurred but valid moment 12 13 2012 dd mm yyyy yyyy mm dd isvalid true moment 12 13 2012 dd mm yyyy yyyy mm dd sat jan 12 2013 00 00 00 gmt 0700 mst doesn matter which format was specified moment 12 13 2012 dd mm yyyy dd mm yyyy isvalid true day rollover is also affected doesn matter if the list only contains one element moment 38 12 2012 dd mm yyyy isvalid true>>>bug
improved some grammatical cases in polish localization present polish translation has some grammatical inaccuracies on lastweek cases have improved them and polish translation is grammatically correct at the moment >>>language
parsing am pm use version did this moment 2012 09 03t03 00pm yyyy mm ddthh mma format yyyy mm ddthh mma but get this it should pm but it returns am 2012 09 03t03 00am thanks lot >>>bug
setting language with the full locale en us should set the language correctly en actual load moment js load lang all js at this point moment lang returns zh tw filed separately as 421 set moment lang window navigator language my window navigator language is en us now moment lang still returns zh tw expected moment lang should return en since although it doesn have strings for en us it does have strings for en >>>language
reset language after loading all language strings currently if include the lang all min js file it sets the current language to the last one in that file there is no way to simply load all available language strings yet retain the default language at the very least the last line of that file should set moment lang window navigator language to use the best guess instead of whatever happens to be last in that list >>>language
`as` functions on durations durations have these auto generated functions like `asyears` `asminutes` etc it seems like it would be more consistent with the general direction of moment `startof` and now `issame` if it were `as years `as minutes etc could add that easily enough although the string casing is bit annoying and then maybe deprecate the individual ones toss them in what do you think >>>new_feature
add subtract vs moment duration argument order adding to moment `moment add minutes creating duration `moment duration minutes think this is inconsistent it is also not fluent to read `moment add minutes sounds much better when read think add can support both styles of arguments current and duration without much trouble just check which one is the string what do you think >>>deprecate
issue detecting invalid months in dates entered in other languages not sure that there is real bug here but perhaps someone could spare some advice and help with work around my users have free form input into date field and am having some issues detecting if their input is invalid dd mmm yyyy is the standard format in my world noticed this behavior moment 01 aug 2012 dd mmm yyyy wed aug 01 2012 00 00 00 gmt 0600 mdt moment 01 nam 2012 dd mmm yyyy sun jan 01 2012 00 00 00 gmt 0700 mst unfortunately moment seems to assume that it hasn received month and assumes january don think this is ideal it would be nice if this could be fixed or if the isvalid call could return false in this case worked around this by just checking without the format moment 01 nam 2012 isvalid false but my application is internationalized and the moment string call would not consider the current global language when parsing moment lang fr excluded for brevity moment 01 fev 2012 isvalid false beyond manually parsing user input myself can think of way that can tell if french user entered valid month 01 fev 2012 or and invalid month 01 nam 2012 with this library thanks >>>bug
switch to grunt because `grunt watch test` is so awesome >>>new_feature
add lang preparse and lang postformat see 383>>>new_feature
release notes this is for the release all code should be on the `develop` branch bugfixes language updates 416 indonesian id 414 esperanto eo 415 latvian lv 413 danish da capital day fixes update the issue number when there is the new pull request 483 nepali ne new features already written 373 adding `yyyyy` token to support 270 000` to `270 000` years 444 added `moment fn tojson` new features to be written 405 add `lang preparse` and `lang postformat` 406 switch to grunt 128 add requirejs amd support to languages >>>new_feature
consider using year designations in long some form foreign languages designate calendars with different letters to avoid confusion with their own calendars for eg in nepal the major calendar in use isn the gregorian hence any english dates used are always followed by the designation so that it clear that the date being used in context isn of the more common one the common calendar is called bikram sambat and is more commonly used the designation for it is it would be nice if moment could support this in some form >>>new_feature
isvalid returns false for valid iso 8601 string with timezone the following behavior seems incorrect moment 2012 01 01t20 00 00 05 00 isvalid returns false that iso 8601 string should be valid timestamp the problem stems from the timezone offset being added to the hours of the `datepartarray` in the `makedatefromstringandformat function the string is properly parsed into the following `datepartarray` 2012 20 however since there is timezone included in the iso 8601 string the offset gets added to the hours near the end of the function which turn the `datepartarray` into this 2012 25 the hours element in the array is now 25 this properly causes an overflow to the next day in the `datefromarray function but the `isvalid function returns false because the parsed date array 2012 25 does not equal the array generated from the date object 2012 http jsfiddle net npj49 >>>bug
moment fn format escape multiple characters is partially broken by localized date format it appears that the substitution for localized date format doesn respect the multiple character escape `moment format last dddd mm dd yyyyast monday `moment format lll lll mmmm yyyy mm july 30 2012 47 am `>>>bug
how about escaping the language strings have you considered escaping the string defenitins in the language files as in going form janvier fvrier mars avril mai juin juillet aot septembre octobre novembre dcembre to janvier u00e9vrier mars avril mai juin juillet ao u00fbt septembre octobre novembre u00e9cembre in the fr file for example would make it easier to use in conjunction with file that may not be in utf8 >>>enhancement language
support iso 8601 week date format being so impressed with moment threw an iso 8601 week date at it thinking it would have no problem coffee moment 2012 w02 moment 2012 w02 invalid date isutc false crap would expect the following instead for me mon jan 09 2012 00 00 00 gmt 0800 pst isutc false any chance we will see support for this and similar formats like 2012 w02 >>>new_feature
re send brazilian i18n now am sending on develop branch >>>language
add method issue when is dst hello folks seeing strange error when execute add days one day before dst in fact my code is very simple javascript moment locale pt br var today moment 2012 10 01 first day at the month var firstdatemonth today clone date sod first sunday of the current month var nextday firstdatemonth clone day for 42 console log nextday format dst nextday isdst nextday add days and in firebug have look at 20th 2012 10 17t00 00 00 03 00 dst false 2012 10 18t00 00 00 03 00 dst false 2012 10 19t00 00 00 03 00 dst false 2012 10 20t00 00 00 03 00 dst false 2012 10 20t23 00 00 03 00 dst false 2012 10 21t23 00 00 02 00 dst true 2012 10 22t23 00 00 02 00 dst true 2012 10 23t23 00 00 02 00 dst true 2012 10 24t23 00 00 02 00 dst true 2012 10 25t23 00 00 02 00 dst true 2012 10 26t23 00 00 02 00 dst true if it not bug sorry for any inconvenience or if can help please let me know thanks for awesome lib >>>bug
add english and french canadian i18n added support for canadian variants of english and french formatting based on macos date representations for that locale and also personal experience >>>language
feature request more accurate humanize humanize isn really accurate when it comes to seconds javascript moment duration 40 humanize few seconds expected 40 seconds moment duration 45 humanize minute expected 45 seconds understand that we don often want this level of accuracy but sometimes we do want the exact value in human readable way suggest change to the api which seems backwards compatible from what actually see to support this feature javascript moment duration 40 humanize few seconds moment duration 40 humanize true in few seconds moment duration 40 humanize precise true 40 seconds moment duration 40 humanize suffix true precise true in 40 seconds moment duration 40 humanize precise false suffix true in few seconds what do you think >>>enhancement new_feature
feature diff duration as discussed in 282 the diff function now returns duration instead of just millisecond number for the one parameter incantation internally diff uses the duration to perform the math this commit passes all but two of the unit tests fails regarding returning years as floats this is not ready to be merged in am opening this pull request to ask for help as to how to correctly write this function and to start some momentum on the feature >>>new_feature
minor grammar corrections on the italian lang file basically just accents on the days of the week and un ora instead of un ora an hour which being feminine in italian requires an apostrophe >>>language
fix month weekday grammatical cases in russian 341 312 the regexes used to determine the cases might need tweaking but so far it seems to work ok for formats like 31 2010 00 00 and 23 53 >>>language
fixed ordinal strings for tr language fixed ordinal function in tr translations where it was left the same as the english version this required some more tests to cover edge cases which are included all language tests are green for me >>>language
sod eod do not update date object the start of day and end of day methods clone the date object instead of editing the original reference this behavior was unexpected in particular because the documentation says that it essentially the same as the following javascript moment hours minutes seconds milliseconds forked the repo added some tests and fixed these methods to not clone but you probably have reasons for cloning why clone the date >>>enhancement
deprecate langdata objects on the moment namespace all of these are going away in javascript moment calendar moment relativetime moment months moment monthsshort moment monthsmin moment weekdays moment weekdaysshort moment longdateformat moment meridiem moment ordinal they are going to be replaced by `moment langdata calendar` or `moment langdata en calendar` >>>deprecate new_feature
add formated date hi is it possible to make something like this moment rootdate yyyy mm dd add relativedate hh mm >>>enhancement new_feature
minified localizations out of sync it appears that the latest meridiem changes have not been propagated to the minified versions of the localization files >>>language
humanized input really like what you re doing this library wanted to know if there is way or will there be way to do humanized input feature that some other libraries have datejs that let you provide certain known input tokens next friday and get date back don like datejs of how they override the date prototype and also they don let you pick your date all the parsing is based on now if there not current method like this may try and find time to do it msyelf are there docs on how you want plugins made or should just use the existing plugins as an example for reference mean something like this var moment parse next tuesday console log is the moment object for next tuesday date >>>new_feature
remove ordinal from tr translations turkish language do not use ordinal suffixes for any date patterns so removed that function from tr translations file >>>language
romanian localization hey tim here is the romanian localization thank you for the great moment >>>language
removed formatting dots from dutch month weekday abbreviations this allows for custom formats such as mmm yyyy current code gives 23 jun 2012 while 23 jun 2012 is expected preferred >>>language
added language no nb norwegian >>>language
hungarian language with unit tests>>>language
add cached format functions for 3x faster formatting not ready to pull in opening discussion todo inline ll lll llll lt tokens some speed tests http jsperf com date formatting http jsperf com momentjs cached format functions all `make test moment` tests are passing now need to add support for `l ll lll llll lt` for all tests to pass file size difference 108b minified 75b gzipped though there are probably some byte squeezing techniques we could add >>>enhancement
persian language hi please add persian language to moment very thanx >>>language
explore cldr for locale database the unicode common locale data repository cldr http cldr unicode org contains ton of locale data that moment could use instead of maintaining its own database avoiding the many tickets that just deal with new locales or fixing existing ones they ve got few overview slides of what the cldr covers https docs google com present view id dfqr8rd5 303ckth2zhn for now this is just an invitation to explore the cldr don really know if it can be of use here though be very interested in any research and potential collaboration in that area as the globalize project https github com jquery globalize deals with very similar issues globalize and moment actually have good bunch in common while globalize lacks the dsl for creating dates if there interest in collaboration between moment and globalize let me rdworth or scottgonzalez know >>>language
nodejs check gives false positive when running qunit `typeof module undefined will return true if qunit is on the page more thorough test should be used here one possibility http stackoverflow com 5197219 100335 >>>bug
add support for month weekday callbacks in moment fn format 312>>>enhancement language
russian translations are incorrect just checked samples at http momentjs com russian translations seems to be incorrect endings of words in russian differ depending on the context case and this also applies to weekdays and month names example from your web site incorrect `russian 20 44` correct `russian 20 44` example from your web site incorrect `russian 21 2012 20 45` correct `russian 21 2012 20 45` >>>language
added ispast and isfuture methods just added moment ispast and moment isfuture comparison methods this can be used when you may want to conditionally print something that is dependent on moment being in the future or in the past javascript var eventstarttime moment eventmodel get start time if eventstarttime ispast return last event eventstarttime fromnow else if eventstarttime isfuture return next event eventstarttime fromnow thinking about whether an ispresent method with an optional tolerance passed in would be useful moment subtract minutes 30 ispresent hours would return true this could be used in cases where you want to do something like javascript if eventstarttime ispresent hours return this event is happening now >>>new_feature
correct translation of durations in japanese duration strings should be appended with in japanese to indicate length in time however hours is already ok examples during few seconds during minutes during hours during days during months during years moment currently returns the following strings this is only required for duration current translations of time in the past and future are ok minutes ago in minutes in case of complex durations is only appended at the end of the string 32015 during hours 20 minutes and 15 seconds is there way to suffix durations at the moment >>>language
not parsing british dates correctly using the en gb language file expecting dates like 16 04 1990 to parse as april 1990 but instead moment js produces an invalid date am missing something or is there nothing can to make moment js parse dd mm yyyy dates correctly note aware that you can give format hints to moment moment 16 04 1990 dd mm yyyy but rather avoid placing this throughout my code as it could potentially give rise to greater headaches when dates in other formats need to be parsed it would be much better if could just tell moment to assume british date format so whenever the day month order is ambiguous it can prefer dd mm yyyy or yyyy mm dd >>>new_feature
fixed minor for lll format of japanese>>>language
adding moment fn isvalid not ready to be pulled in yet just wanted to open the discussion >>>new_feature
add moment fn isvalid see 235 possible implementation below would need to add flag or something when parsing maybe in `datefromarray >>>new_feature
parse all ss sss tokens the same way https github com timrwood moment commit 05b2573c509b0a9723d687f551cc935929650b97 l2r49 rockymeza we can merge these three lines into one if we switch the way the parser handles `s ss sss` instead of handling them all separately we could just have them fall through to one block like the hours do the drawback for this is it may break in the following cases this could shave few bytes off elsewhere as well eliminating `parsetokenonedigit` and `parsetokentwodigits` and their use in `getparseregexfortoken looks like it can shave 136 24 bytes off >>>enhancement
error on trying to make date from empty string and format moment someformat will throw an error inputparts is null on line len math min inputparts length formatparts length >>>bug
correct the translation of future it should be instead of >>>language
moment js documentation errors at this page http momentjs com docs displaying humanize duration moment humanizeduration 60000 true should be moment humanizeduration 60000 null true >>>bug
parse bug for am pm check came across small issue where moment would error when checking for am pm if the input string was too short which kind of makes sense because the input is too short if it failed nicely it allows for partial inputs in my case the user can search by whatever will parse first the culprit https github com timrwood moment blob moment js l244 this can be reproduced by quick fix can be implemented by changing that line to verfied by the tests thanks for the great work on moment it is great to use makes javascript wonky dates much simpler seth >>>bug
add singular plural forms for durations and startof endof see this comment https github com timrwood moment pull 283 issuecomment 5448397 adding support for either form adds 136 bytes to the minified version and 39 bytes to the gzipped version >>>enhancement
parsing date strings isn handling timezones correctly ve noticed that if parse an iso 8601 date string then the timezone in the string will be ignored producing an incorrect time can reproduce by doing this seeing this bug in safari and chrome 18 ve been able to fix this in my own app by using `date parse datestr and then passing the integer result to `moment instead >>>bug
switch to ldml relevant spreadsheet https docs google com spreadsheet ccc key 0atgzluze7wmjddboluzfsfizeniwohnjawzoegfqbwc hl en us gid also see 61>>>deprecate
switch from tld to two letter language code see this comment https github com timrwood moment issues 285 issuecomment 5401030 >>>deprecate
multiple languages probably missing something but as far as can see from the source is not possible to have multiple languages and create context with that language this is obviously not an issue in the browser where once `moment` has loaded that instance will run for one sole user but in node js application where the same `moment` function will serve multiple users how could create context remember node ayncronicity with specific language simple solution would be to set the language before any use but race conditions could easily break things `moment` at this moment is big singleton and currentlanguage resides in private variable shared by every function this is good but not so useful in ssjs what like to do is the following >>>language new_feature
moment utc always returns sat jan 2000 it seems that the timezone handling code broke the `moment utc call without parameters according to documentation it should return the current date as utc >>>bug
iso week number for calendars it is useful to be able to get the iso week number took the code from blog post http techblog procurios nl n618 news view 33796 14863 calculate iso 8601 week and year in javascript html on the subject and translated it to use the moment api my manual testing has shown no incorrect results but since didn write unit test nor change the original file have no pull request to share return the day of the week starting with monday monday sunday 	moment fn dayiso function 		return this day return the iso week number from 52 or 53 note the first days of year can belong to last year week in some cases 	moment fn weekiso function 		var firstthursday target 		target this clone 		target add days target dayiso 		firstthursday target clone 		target month 		target date 		target add days 10 target dayiso 		return math ceil firstthursday diff target days >>>new_feature
parsing iso unit tests failed data date prototype tostring sat apr 28 2012 12 37 36 gmt 0530 ist date prototype tolocalestring sat 28 apr 2012 12 37 36 pm ist date prototype gettimezoneoffset 330 navigator useragent mozilla x11 linux i686 rv 12 gecko 20100101 firefox 12 test results parsing iso passed failed 23 moment should be able to parse iso 2011 10 08 2011 10 08t00 00 00 06 30 2011 10 08t00 00 00 05 30 assertionerror moment should be able to parse iso 2011 10 08 23 moment should be able to parse iso 2011 10 08t18 2011 10 08t18 00 00 06 30 2011 10 08t18 00 00 05 30 assertionerror moment should be able to parse iso 2011 10 08t18 23 moment should be able to parse iso 2011 10 08t18 04 2011 10 08t18 04 00 06 30 2011 10 08t18 04 00 05 30 assertionerror moment should be able to parse iso 2011 10 08t18 04 23 moment should be able to parse iso 2011 10 08t18 04 20 2011 10 08t18 04 20 06 30 2011 10 08t18 04 20 05 30 assertionerror moment should be able to parse iso 2011 10 08t18 04 20 23 moment should be able to parse iso 2011 10 08t18 04 06 30 2011 10 08t18 04 00 06 30 2011 10 08t18 04 00 05 30 assertionerror moment should be able to parse iso 2011 10 08t18 04 06 30 23 moment should be able to parse iso 2011 10 08t18 04 20 06 30 2011 10 08t18 04 20 06 30 2011 10 08t18 04 20 05 30 assertionerror moment should be able to parse iso 2011 10 08t18 04 20 06 30 23 moment should be able to parse iso 2011 10 08t18 04 060 30 2011 10 08t18 04 00 06 30 2011 10 08t18 04 00 05 30 assertionerror moment should be able to parse iso 2011 10 08t18 04 060 30 23 moment should be able to parse iso 2011 10 08t18 04 20 060 30 2011 10 08t18 04 20 06 30 2011 10 08t18 04 20 05 30 assertionerror moment should be able to parse iso 2011 10 08t18 04 20 060 30>>>unit_test_failed
added generic functions endof and startof hi have created generic endof and startof methods that fill the same purpose as the methods eod and sod but not just for days you supply string parameter years months days hours minutes or seconds and get the end or start of the year or month for example also changed the existing eod and sod methods to use the generic methods to reduce duplication unit tests added and passed in the sod eod js think this is usefull feature which reduces the code needed to do it for user of the library thank you mattias>>>new_feature
return duration in moment fn diff right now `moment fn diff` is in need of re write what do you guys think about returning duration from moment fn diff because of the `valueof` it will work similarly to how it does now but there could be some problems the benefit from this is that we can deprecate the keys from `moment fn diff val key and use the asyears` instead >>>deprecate new_feature
moment utc string parses iso8601 as local time when timezone is missing see this comment https github com timrwood moment issues 272 issuecomment 5095486>>>bug
failed tests format timezone passed failed 33 moment format it should be something like pst true null assertionerror moment format it should be something like pst 33 moment format it should be something like pst true null assertionerror moment format it should be something like pst 33 01 00 should be something like 07 30 33 0100 should be something like 0700 date prototype tostring tue apr 10 2012 17 57 52 gmt 0200 date prototype tolocalestring mardi 10 avril 2012 17 57 52 date prototype gettimezoneoffset 60 navigator useragent mozilla windows nt rv 11 gecko 20100101 firefox 11 0>>>unit_test_failed
moment is buggy in distant dates years 100000 moment 0000 01 01t00 00 00 000z moment 62198755200000 format extended years not supported expect moment 275760 09 13t00 00 00z tobe 64e15 opera bug moment 3509827334573292 month 12 in opera 11 6x 12 >>>bug
fix for issue 261 it appears when you are working with two moment objects and you take the diff the input moment isutc is ignored when you parse the input into inputmoment ve done check to see if it looks like moment object by checking the isutc to see if it is defined and if it is then it just copies the input rather than parsing it think it should work fine on regular date objects as there is no isutc member >>>bug
add getter for moment lang eternicode get problem to implement in calendar widget per instance translations with moment js changing language on the same page doesn seem to work see https github com eternicode bootstrap datepicker issues 24 issuecomment 5008767 have to take the time to see what append but perhaps it know limitation of moment js >>>enhancement language
feature durations this is new feature based on the discussion in 236 created new object called duration that can be `add`ed and `subtract`ed it can be instantiated using the `moment duration` function there are three ways to instantiate duration object object key value and millisecond the following five invocations result in essentially the same duration object exposed the `duration prototype` on `moment duration fn` on it currently there are two methods `tovalue` and `humanize` `tovalue` returns the milliseconds of all the options added together `humanize` contains the functionality that `moment humanizeduration` used to contain deprecated `moment humanizeduration` but left it and the tests in place it now relies on `duration prototype humanize` `moment fn from` also relies on the `duration prototype humanize` now instead of `humanizeduration` things that it doesn do yet there is no `isduration` function to type check duration objects when `add`ing using duration it basically clones the duration object by calling `moment duration` on it so there is no special handling of durations versus normal objects in adding and subtracting if you create duration of days and check the `weeks` property it will still be zero don merge this in yet am opening this pull request so that we can continue the conversation and also start developing this feature cc nilakanta>>>new_feature
support display of durations as hh mm ss mm as far as ve seen the only way of displaying durations is the humanize duration function it would be nice to format duration as hours minutes etc >>>new_feature
consider switching to iterative parser currently moment parses by converting strings to arrays based on regexes then the parser loops through each item in the array and converts it to the correct argument for parsing an array to date instead perhaps the parser should only chuck up the tokens then loop through them tearing chunks of the input string apart this could solve both the iso8601 problem cjk number month name problem and the yyyymmdd problem as well >>>enhancement new_feature
support for two letter days of week this would be useful for datepicker or other calendar implementation for example where the convention is two letter day column headers >>>enhancement
diff does not take into account utc mode javascript var moment utc add hours var moment console log diff hours 1>>>bug
grammatical change took out the space between dddd and en klockan in the sentence lastweek frra dddd en klockan lt previously lastweek frra dddd en klockan lt because dddd refers to the name of the day and en to the specific day frra tisdagen klockan 12 00 tisdag en needs to be concatenated to get it grammatically correct >>>language
consider adding support for all formatting tokens as parsing tokens these are the unsupported parsing tokens `mo do dddo do wo ww zz lt ll lll llll` see 247 and 220 for more discussions >>>new_feature
moment diff returns negative value wed 04 apr 2012 21 09 16 gmt to moment utc add 60 todate seconds moment diff to seconds trying to get the seconds from the current time in utc and another date that is set in utc using `moment diff` the above code returns negative value of 3600 instead of 3600 is this the correct way to do this shouldn the negative only be if the date has passed >>>bug
add support for ss sss parsing tokens milliseconds >>>new_feature
play nicely within an ender build the default behaviour of ender is to attach everything on `module exports` to the global `ender` object which messes up moment you get all of the `moment methods attached and lose `moment you also get `window moment` which is unnecessary this pr attaches moment as moment` so it can be used as moment date add days 10 format yy mm dd the ender keyword in package json also makes it show up as an ender compatible lib in an `ender search` hope this is acceptable thanks for the great lib >>>enhancement new_feature
it would be nice to have possibility to set timezone but not to always have local time or utc var pst time moment 1332657000 europe vienna pst time has one time pst time zone america new york pst time has another time result is based on time difference on this two regions this is big issue because for example it have unix timestamp from pst it hard to convert to another time zone because we need to count if it is pst or pdt maybe there is already good solution >>>new_feature
milliseconds formatting precise iso times milliseconds formatting in moment date format support for iso dates that supply extremely precise times 000001 seconds example of date like this would be 2012 04 02t22 25 45 276419 08 00 this comes from json net serialization of datetimeoffset objects enabled this format to function when passed in to the moment date constructor as valid iso format results moment 2012 04 02t22 25 45 276419 08 00 tostring before thu apr 05 2012 09 44 45 gmt 0500 central daylight time after tue apr 03 2012 01 25 45 gmt 0500 central daylight time >>>enhancement new_feature
incorrect parsing of year with format mask dddd mmmm do yyyy attempting the following the result will be sat mar 31 1900 think this may be an error in the parsing regex my own investigations found that the parser was attempting to turn the st in 31st into the year which of course resulted in or 1900 here basic jsfiddle demonstrating the problem with the most current push http jsfiddle net tunet >>>bug
icelandic translation those couple of failing tests are due to missing inflection 244 and limited quantity support 243 >>>language
moment does not parse yyyymmdd formatted dates for example >>>bug enhancement
support word inflections in relative time in the case of relative times some languages use different inflections for the nouns in day ago and in day the relativetime hash would need to contain two groups of nouns instead of one for example in icelandic we say fyrir degi san day ago and eftir dag in day >>>language
better support for quantity of minute hour day month year etc this library only uses the singular form of minute hour day month year when the quantity is exactly however in icelandic the singular form is used with any number that ends in except when it ends in 11 this is analogous to the written spoken form one eleven twenty one thirty one could you add support for this >>>language
get last day of the month will be great to be able to get set moment instance to last day of the month similar to eod >>>new_feature
add unit tests for korean month parsing>>>language
incorrect age calculation hi don know if this is known or if am doing something wrong the following line moment 2012 19 diff moment 2002 20 years should return years although it is returning 10 can somebody please explain this behavior thanks>>>bug
use duration object instead of passing string and number to the add subtract functions it would be nice to use duration object same object can be used for humanize as well it would be nice if this duration object can be used independent of moment as well >>>new_feature
moment js overflows in parsing when doing parsing on nonexistent date moment overflows eg is parsed as february 10th 2011 the date parser could probably throw an exception or indicate that there been an error returning null false or something else that can be mixed with date >>>bug enhancement
moment js unit test with 19 failed units date prototype tostring mon mar 26 2012 12 30 30 gmt 0200 central europe daylight time date prototype tolocalestring 26 marec 2012 12 30 30 date prototype gettimezoneoffset 60 navigator useragent mozilla windows nt rv gecko 20100101 firefox language used slovak add subtract add and subtract short all 12 passed add and subtract long all passed add and subtract string long all passed add and subtract string short all passed add across dst all passed create array all passed number all passed date all passed moment all passed undefined all passed string without format all passed string from date tostring all passed string without format json all passed string with format all 23 passed string with format timezone all passed string with format timezone offset all passed string with array of formats all passed string with format years all passed implicit cloning all passed explicit cloning all passed parsing iso all passed null all passed days in month days in month all 12 passed days in month leap years all passed diff diff all passed diff key after all passed diff key before all passed diff month all passed diff across dst all passed diff overflow all passed format format yy all passed format escape brackets all passed format timezone all passed format multiple with zone all passed isdst all passed zone all passed default format all passed getters setters getters all passed setters all passed setters falsey values all passed chaining setters all passed day setter all 18 passed humanize duration humanize duration all 32 passed humanize duration with suffix all passed is moment is moment object all 11 passed leapyear leap year all passed eod sod sod all passed eod all passed utc utc and local all passed creating with utc all passed lang ca parse all 96 passed format ordinal all 31 passed format month all 12 passed format week all passed from all 30 passed suffix all passed now from now all passed fromnow all passed calendar day passed failed 59 today at the same time 59 now plus 25 min 59 now plus hour 59 tomorrow at the same time 59 tomorrow minus hour 59 now minus hour 59 yesterday at the same time ahir les 00 ahir la 00 assertionerror yesterday at the same time calendar next week all 15 passed calendar last week all 15 passed calendar all else all passed lang da parse all 96 passed format all 18 passed format ordinal all 31 passed format month all 12 passed format week all passed from all 30 passed suffix all passed now from now all passed fromnow all passed lang de parse all 96 passed format all 18 passed format ordinal all 31 passed format month all 12 passed format week all passed from all 30 passed suffix all passed fromnow all passed calendar day passed failed 80 today at the same time 80 now plus 25 min 80 now plus hour 80 tomorrow at the same time 80 now minus hour 80 yesterday at the same time gestern um 00 uhr gestern um 00 uhr assertionerror yesterday at the same time calendar next week all 15 passed calendar last week all 15 passed calendar all else all passed lang en gb parse all 96 passed format all 18 passed format ordinal all 31 passed format month all 12 passed format week all passed from all 30 passed suffix all passed now from now all passed fromnow all passed calendar day passed failed 93 today at the same time 93 now plus 25 min 93 now plus hour 93 tomorrow at the same time 93 now minus hour 93 yesterday at the same time yesterday at 00 am yesterday at 00 am assertionerror yesterday at the same time calendar next week all 15 passed calendar last week all 15 passed calendar all else all passed lang en parse all 96 passed format all 18 passed format ordinal all 31 passed format month all 12 passed format week all passed from all 30 passed suffix all passed now from now all passed fromnow all passed calendar day passed failed 106 today at the same time 106 now plus 25 min 106 now plus hour 106 tomorrow at the same time 106 now minus hour 106 yesterday at the same time yesterday at 00 am yesterday at 00 am assertionerror yesterday at the same time calendar next week all 15 passed calendar last week all 15 passed calendar all else all passed lang es parse all 96 passed format ordinal all 31 passed format month all 12 passed format week all passed from all 30 passed suffix all passed now from now all passed fromnow all passed calendar day passed failed 118 today at the same time 118 now plus 25 min 118 now plus hour 118 tomorrow at the same time 118 tomorrow minus hour 118 now minus hour 118 yesterday at the same time ayer las 00 ayer la 00 assertionerror yesterday at the same time calendar next week all 15 passed calendar last week all 15 passed calendar all else all passed lang eu parse all 96 passed format all 18 passed format ordinal all 31 passed format month all 12 passed format week all passed from all 30 passed suffix all passed now from now all passed fromnow all passed calendar day passed failed 131 today at the same time 131 now plus 25 min 131 now plus hour 131 tomorrow at the same time 131 now minus hour 131 yesterday at the same time atzo 02 00etan atzo 01 00etan assertionerror yesterday at the same time calendar next week all 15 passed calendar last week all 15 passed calendar all else all passed lang fr parse all 96 passed format all 18 passed format ordinal all 31 passed format month all 12 passed format week all passed from all 30 passed suffix all passed fromnow all passed same day passed failed 143 today at the same time 143 now plus 25 min 143 now plus hour 143 tomorrow at the same time 143 now minus hour 143 yesterday at the same time hier 02 00 hier 01 00 assertionerror yesterday at the same time same next week all 15 passed same last week all 15 passed same all else all passed lang gl parse all 96 passed format ordinal all 31 passed format month all 12 passed format week all passed from all 30 passed suffix all passed now from now all passed fromnow all passed calendar day passed failed 155 today at the same time 155 now plus 25 min 155 now plus hour 155 tomorrow at the same time 155 tomorrow minus hour 155 now minus hour 155 yesterday at the same time onte 00 onte 00 assertionerror yesterday at the same time calendar next week all 15 passed calendar last week all 15 passed calendar all else all passed lang it parse all 96 passed format all 18 passed format ordinal all 31 passed format month all 12 passed format week all passed from all 30 passed suffix all passed fromnow all passed calendar day passed failed 167 today at the same time 167 now plus 25 min 167 now plus hour 167 tomorrow at the same time 167 now minus hour 167 yesterday at the same time ieri alle 02 00 ieri alle 01 00 assertionerror yesterday at the same time calendar next week all 15 passed calendar last week all 15 passed calendar all else all passed lang kr format all 18 passed format ordinal all 31 passed format month all 12 passed format week all passed from all 30 passed suffix all passed now from now all passed fromnow all passed calendar day passed failed 179 today at the same time 179 now plus 25 min 179 now plus hour 179 tomorrow at the same time 179 now minus hour 179 yesterday at the same time 00 00 assertionerror yesterday at the same time calendar next week all 15 passed calendar last week all 15 passed calendar all else all passed lang nb parse all 96 passed format all 18 passed format ordinal all 31 passed format month all 12 passed format week all passed from all 30 passed suffix all passed now from now all passed fromnow all passed calendar day passed failed 192 today at the same time 192 now plus 25 min 192 now plus hour 192 tomorrow at the same time 192 now minus hour 192 yesterday at the same time gr klokken 02 00 gr klokken 01 00 assertionerror yesterday at the same time calendar next week all 15 passed calendar last week all 15 passed calendar all else all passed lang nl parse all 96 passed format all 18 passed format ordinal all 31 passed format month all 12 passed format week all passed from all 30 passed suffix all passed now from now all passed fromnow all passed calendar day passed failed 205 today at the same time 205 now plus 25 min 205 now plus hour 205 tomorrow at the same time 205 now minus hour 205 yesterday at the same time gisteren om 02 00 gisteren om 01 00 assertionerror yesterday at the same time calendar next week all 15 passed calendar last week all 15 passed calendar all else all passed lang pl parse all 96 passed format all 18 passed format ordinal all 31 passed format month all 12 passed format week all passed from all 30 passed suffix all passed now from now all passed fromnow all passed calendar day passed failed 218 today at the same time 218 now plus 25 min 218 now plus hour 218 tomorrow at the same time 218 now minus hour 218 yesterday at the same time wczoraj 02 00 wczoraj 01 00 assertionerror yesterday at the same time calendar next week all 15 passed calendar last week all 15 passed calendar all else all passed lang pt parse all 96 passed format all 18 passed format ordinal all 31 passed format month all 12 passed format week all passed from all 30 passed suffix all passed fromnow all passed calendar day passed failed 230 today at the same time 230 now plus 25 min 230 now plus hour 230 tomorrow at the same time 230 now minus hour 230 yesterday at the same time ontem 02 00 ontem 01 00 assertionerror yesterday at the same time calendar next week all 15 passed calendar last week all 15 passed calendar all else all passed lang ru parse all 96 passed format all 18 passed format ordinal all 31 passed format month all 12 passed format week all passed from all 32 passed suffix all passed fromnow all passed calendar day passed failed 242 today at the same time 242 now plus 25 min 242 now plus hour 242 tomorrow at the same time 242 now minus hour 242 yesterday at the same time 02 00 01 00 assertionerror yesterday at the same time calendar next week all 15 passed calendar last week all 15 passed calendar all else all passed lang sv parse all 96 passed format all 18 passed format ordinal all 31 passed format month all 12 passed format week all passed from all 30 passed suffix all passed now from now all passed fromnow all passed calendar day passed failed 255 today at the same time 255 now plus 25 min 255 now plus hour 255 tomorrow at the same time 255 now minus hour 255 yesterday at the same time igr klockan 02 00 igr klockan 01 00 assertionerror yesterday at the same time calendar next week all 15 passed calendar last week all 15 passed calendar all else all passed lang tr parse all 96 passed format all 18 passed format ordinal all 31 passed format month all 12 passed format week all passed from all 30 passed suffix all passed now from now all passed fromnow all passed calendar day passed failed 268 today at the same time 268 now plus 25 min 268 now plus hour 268 tomorrow at the same time 268 now minus hour 268 yesterday at the same time dn 02 00 dn 01 00 assertionerror yesterday at the same time calendar next week all 15 passed calendar last week all 15 passed calendar all else all passed lang zh cn parse all 96 passed format all 18 passed format month all 12 passed format week all passed from all 30 passed suffix all passed now from now all passed fromnow all passed calendar day passed failed 280 today at the same time 280 now plus 25 min 280 now plus hour 280 tomorrow at the same time 280 now minus hour 280 yesterday at the same time 00 00 assertionerror yesterday at the same time calendar next week all 15 passed calendar last week all 15 passed calendar all else all passed lang zh tw parse all 96 passed format all 18 passed format month all 12 passed format week all passed from all 30 passed suffix all passed now from now all passed fromnow all passed calendar day passed failed 292 today at the same time 292 now plus 25 min 292 now plus hour 292 tomorrow at the same time 292 now minus hour 292 yesterday at the same time 00 00 assertionerror yesterday at the same time calendar next week all 15 passed calendar last week all 15 passed calendar all else all passed >>>unit_test_failed
show seconds have website where user can check status of batch run time varies from several hours to few minutes and people tend to wait last minutes watching countdown moment timestamp fromnow was really useful but it shows few seconds awfully long period one minute is long time to wait when you think it just ten seconds or so changed logic for relativetime unfortunately don have node installed so didn update minified version or tests which might be enough reason to reject this pull request >>>enhancement new_feature
format timezone unit test failed info date prototype tostring sat mar 24 2012 22 45 26 gmt 0600 hora estndar central mxico date prototype tolocalestring sat mar 24 2012 22 45 26 gmt 0600 hora estndar central mxico date prototype gettimezoneoffset 360 navigator useragent mozilla windows nt applewebkit 535 11 khtml like gecko chrome 17 963 79 safari 535 11 format timezone passed failed 33 moment format it should be something like pst true null assertionerror moment format it should be something like pst at object ok http momentjs com js tests js 120322 094056 1526 39 at http momentjs com js tests js 120322 094056 2485 14 at object runtest http momentjs com js tests js 120322 094056 1702 at http momentjs com js tests js 120322 094056 1748 25 at http momentjs com js tests js 120322 094056 1006 13 at http momentjs com js tests js 120322 094056 616 13 at http momentjs com js tests js 120322 094056 627 25 at http momentjs com js tests js 120322 094056 1008 17 at http momentjs com js tests js 120322 094056 1589 17 33 moment format it should be something like pst true null assertionerror moment format it should be something like pst at object ok http momentjs com js tests js 120322 094056 1526 39 at http momentjs com js tests js 120322 094056 2486 14 at object runtest http momentjs com js tests js 120322 094056 1702 at http momentjs com js tests js 120322 094056 1748 25 at http momentjs com js tests js 120322 094056 1006 13 at http momentjs com js tests js 120322 094056 616 13 at http momentjs com js tests js 120322 094056 627 25 at http momentjs com js tests js 120322 094056 1008 17 at http momentjs com js tests js 120322 094056 1589 17 33 06 00 should be something like 07 30 33 0600 should be something like 0700 >>>unit_test_failed
summer time issue calendar day passed failed 59 today at the same time 59 now plus 25 min 59 now plus hour 59 tomorrow at the same time 59 tomorrow minus hour dem la 00 dem les 00 assertionerror tomorrow minus hour at object equal http momentjs com js tests js 120322 094056 1526 39 at http momentjs com js tests js 120322 094056 2989 14 at object runtest http momentjs com js tests js 120322 094056 1702 at http momentjs com js tests js 120322 094056 1748 25 at http momentjs com js tests js 120322 094056 1006 13 at http momentjs com js tests js 120322 094056 616 13 at http momentjs com js tests js 120322 094056 627 25 at http momentjs com js tests js 120322 094056 1008 17 at http momentjs com js tests js 120322 094056 1589 17 59 now minus hour 59 yesterday at the same time calendar day passed failed 118 today at the same time 118 now plus 25 min 118 now plus hour 118 tomorrow at the same time 118 tomorrow minus hour maana la 00 maana las 00 assertionerror tomorrow minus hour at object equal http momentjs com js tests js 120322 094056 1526 39 at http momentjs com js tests js 120322 094056 4122 14 at object runtest http momentjs com js tests js 120322 094056 1702 at http momentjs com js tests js 120322 094056 1748 25 at http momentjs com js tests js 120322 094056 1006 13 at http momentjs com js tests js 120322 094056 616 13 at http momentjs com js tests js 120322 094056 627 25 at http momentjs com js tests js 120322 094056 1008 17 at http momentjs com js tests js 120322 094056 1589 17 118 now minus hour 118 yesterday at the same time calendar day passed failed 155 today at the same time 155 now plus 25 min 155 now plus hour 155 tomorrow at the same time 155 tomorrow minus hour ma 00 ma 00 assertionerror tomorrow minus hour at object equal http momentjs com js tests js 120322 094056 1526 39 at http momentjs com js tests js 120322 094056 4829 14 at object runtest http momentjs com js tests js 120322 094056 1702 at http momentjs com js tests js 120322 094056 1748 25 at http momentjs com js tests js 120322 094056 1006 13 at http momentjs com js tests js 120322 094056 616 13 at http momentjs com js tests js 120322 094056 627 25 at http momentjs com js tests js 120322 094056 1008 17 at http momentjs com js tests js 120322 094056 1589 17 155 now minus hour 155 yesterday at the same time the clocks go forward tonight >>>bug
added japanese ext and changed some format in chinese if the digit was allowed in month please merge those code >>>language
deprecate moment meridiem am am pm pm replace with moment meridiem upper lower functions and default to am pm >>>deprecate
deprecate format tokens zz see 162>>>deprecate
the finnish translation okay so here the finnish translation with the tests included didn do test for the added isfuture argument but tested that all the tests and translation tests passed this should be good to go also my friend had read and spotted an issue which is also fixed here closes issue https github com timrwood moment issues 218>>>language
failing unit tests this wasn happening around an hour ago the tests that are failing are in `lang gl calendar last week` here are the failures emphasis added 157 today days current time mrcores pasado 23 mrcores pasado 23 157 today days current time martes pasado 23 martes pasado 23 157 today days current time luns pasado 23 luns pasado 23 157 10 today days current time domingo pasado 23 domingo pasado 23 157 13 today days current time sbado pasado 23 sbado pasado 23 don speak galician but looked at the code and think know what wrong code coming >>>bug language
fixed the meridiem value for chinese in chinese there are more values for the meridiem value than just am and pm there are values that mean morning before noon noon afternoon and night time had to modify moment js to handle callback or default to the previous behavior if you accept 221 am pretty sure that you will have merge conflict in the `calendar day` tests here is what those tests should look like >>>bug language
fixed ordering of longdateformat for traditional and simplified chinese in chinese the dates are always expressed in specific order it goes from biggest container to smallest updated the `longdateformat` definition in both of the chinese language files also changed the to `` but that is not related to ordering error sorry for combining the commits >>>bug language
add support for numbers in the month format names wrote japanese extension and fixed chinese lang in japanese and chinese use months split monthsshort 10 11 12 split as month title test failed could you fix inputcharacters regex to support digit character inputcharacters za u00a0 ud7ff uf900 ufdcf ufdf0 uffef gi the jp lang and test case in fork https github com baryon moment >>>enhancement
finnish translation so ve been working on creating finnish translation for moment js but it looks like have to touch code here in finnish when you want to refer to future it not actually enough to just replace the string of few seconds with muutama sekunti and use prefix or suffix but you actually have to inflect the words to muutaman sekunnin and then add pst after them the phrase in few seconds would translate to muutaman sekunnin pst here both of the words muutama and minuutti are inflected the phrase few seconds ago actually translates to muutama sekunti sitten and here the words are in their standard non inflected form the phrase minute ago would translate to minuutin pst and here again minuutti is inflected the phrase in minute would translate to minuutti sitten and here it not so suggest adding at least future but also past for all of the relativetime strings can actually do this myself today and tomorrow since we really need to get the finnish translation done soon >>>enhancement language
issue with indian standard time zone just run the tests failing tests here the requested info date prototype tostring wed mar 21 2012 23 13 56 gmt 0530 india standard time date prototype tolocalestring wednesday march 21 2012 11 13 56 pm date prototype gettimezoneoffset 330 navigator useragent mozilla windows nt wow64 rv 11 gecko 20100101 firefox 11 funny came from datejs because issues with the same timezone good luck >>>bug
deprecate moment fn native replace with moment fn todate>>>deprecate
date parsing bug in both firefox 10 and chrome 17 typing the following moment wed mar 21 2012 11 32 01 gmt 0000 gmt standard time todate returns thu dec 21 1899 00 00 00 gmt 0000 gmt standard time the date string passed into `moment is obtained by typing new date tostring in the javascript console of the browser ve checked my system and all the dates are set correctly but moment interprets the string as 112 years in the past is this bug in moment js or is there somethign ve done wrong dont think what ve done on my side leaves much room for human error this appears when using the version of moment on the homepage of `momentjs com`>>>bug
add ss sss millisecond formatting tokens like http blog stevenlevithan com archives date time format or l	milliseconds gives digits gives digits >>>new_feature
add support for creation with unix timestamp in seconds this is something that we wanted to avoid doing 1000 on every single utc timestamp we receive in seconds figured would suggest it as think it makes nicer api can look into writing tests docs for it first if you want >>>new_feature
unit tests fail on android the unit tests don run on android at all think there is likely syntax error preventing them from running haven had chance to delve into it yet >>>bug
display as net ticks similar to valueof http momentjs com docs display valueof either add param to this arguement or create new method `moment fn toticks` conversion details here http stackoverflow com questions 7966559 how to convert javascript date object into ticks >>>new_feature
failed unit test format timezone ua opera 80 windows nt en presto 10 229 version 11 62 timezone >>>unit_test_failed
unit tests failing 146 calendar last week 10 passed failed mozilla macintosh intel mac os 10 applewebkit 535 11 khtml like gecko chrome 17 963 66 safari 535 11 eastern standard time >>>unit_test_failed
unit test failed using the unit test http momentjs com test under opera 11 00 my timezone is europe madrid no dst in effect right now two tests failed format format yy passed failed format escape brackets passed failed format timezone passed failed something like pst assertionerror something like pst something like pst assertionerror something like pst 01 00 something like 07 30 0100 something like 0700 >>>unit_test_failed
change the day the week starts with is there way to change the day the week starts with in germany the week starts with monday for example thanks >>>enhancement
unable to find timezone abbreviation from date prototype tostring hello came across the moment js site via forum and clicked my way through it when came across the unit test which failed tests what want to report here useragent mozilla windows nt wow64 applewebkit 535 khtml like gecko chrome 16 912 77 safari 535 chrome 16 912 77 timezone utc failed tests 28 http pastebin com bqsduxdh title edited by timrwood>>>bug
add utc mode see comments starting here https github com timrwood moment issues 147 issuecomment 3746188>>>new_feature
add moment fn day as setter setting to to should set to this week equivalent setting to to 13 should set to next week equivalent setting to to should set to last week equivalent etc >>>new_feature
failed tests in chrome timezone and dst everyone favourite part of js dates timezones and dst failures on tests in chrome ve removed the passed ones in hong kong hkt which is gmt 0800 really keen to switch to using moment js instead of datejs in our app at work but we deal with lot of dates cross timezones so gotta make sure it can handle whatever we throw at it great work so far by the way cheers >>>unit_test_failed
localized format with abbreviated month would be nice it would really be nice to have localized format that uses abbreviated month names like java dateformat medium >>>enhancement
i18n format date first just want to say that this is great lib gets the job done and has great i18n support anyway dealing with website that has to show dates both in english and in portuguese great to see that pt was already implemented it was all good until found this place where need to write full date in both languages realized would need different formats one for english `mmmm yyyy` october 20 2011 and one for portuguese `d de mmmm de yyyy` 20 de outubro de 2011 and just now see that don know if it possible to escape the lowercase but anyway focus is there way to call `moment format with no parameters so that it assumes default formatting for the whole date if there isn it would be nice to implement it could give it go maybe new token that contains the whole date and whole time like `moment format 17 pm in english and 14 17 in portuguese` though have no idea what good token would be for the whole date >>>enhancement
add moment zone to support multiple time zones `moment zone should return the default timezone `moment zone number should change the default timezone each moment should have timezone `moment fn zone should return that moment timezone `moment fn zone number should change that moment timezone upon creation each moment should set it timezone to the default timezone >>>new_feature
add date native to retrieve the native date object right now there is no official way to retrieve the native date object you could access it before by date date but that will break when adding the getters and setters as the internal date object will be called date d` there should be function that returns the native date object that is safe in the future >>>new_feature
add sugar for add substract like datejs for example instead of date add we could write date adddays same again for hours weeks etc also should be chainable so date addweeks subtractdays this really increases readability in complex date manipulation >>>enhancement
add convenience methods add convenience methods for accessing the getters and setters of the date parts date month `new date getmonth date month `new date setmonth chaining should also be allowed date month date >>>new_feature
bundle and minify language files add step to the build script to jshint and minify the lang files for delivery to the browser add step to bundle the lang and lang test files for testing >>>enhancement
add date diff just returns the diff of two dates numerically should replace date from date true true `>>>new_feature
add date fn to allow for prototype modification date fn underscoredate prototype>>>new_feature
add moment fn closest see requirements here https gist github com 1280098>>>new_feature
